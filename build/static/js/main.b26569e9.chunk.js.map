{"version":3,"sources":["modules/svgRender.js","modules/resizeTool.js","constants/redux.js","modules/index.js","store.js","actions/index.js","containers/Vector.js","containers/SelectTool.js","containers/actions/resizeTool.js","containers/actions/vector.js","containers/EditModeHelper.js","containers/Text.js","containers/Rectangle.js","containers/SvgRender.js","containers/actions/rootateTool.js","containers/actions/selectTool.js","containers/layoutBuilder/index.js","containers/home/index.js","containers/app/index.js","index.js"],"names":["updateObject","oldObject","newValues","Object","assign","updateItemInArray","array","itemId","updateItemCallback","map","item","id","initialState","resizeDirection","setResizeDirection","direction","dispatch","type","payload","combineReducers","svgRender","state","arguments","length","undefined","action","updatedItems","objectSpread","handlerObjectIndex","index","editMode","mode","mouseStartPosition","x","y","objects","ids","includes","selected","switchTo","editStartPositionOffset","object","width","height","updatedItem","forEach","editObjectInitState","rotate","resizeTool","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","createStore","connectRouter","rootReducer","mousePosition","strokeWidth","fill","radius","text","updateHandlerObjectIndex","updateEditMode","setMouseStartPosition","setObjectsSelectState","deselectAllObjects","deselectAllObjectsExept","moveObject","setObjectEditStartPosition","resizeObject","props","setObjectMode","saveEditObjectInitState","resetObjectMode","rotateObject","_ref","Vector","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","objectMoved","clientX","clientY","shiftKey","React","cloneElement","children","onMouseUp","bind","onMouseDown","Component","connect","bindActionCreators","SelectTool","react_default","a","createElement","stroke","opacity","selectToolPosition","selectToolSize","progress","changeValue","returnVal","getObjectResizeValuesSouth","mouse","objectInitState","Math","abs","getObjectResizeValuesNorth","getObjectResizeValuesEast","getObjectResizeValuesWest","getObjectAttributes","transform","centerX","centerY","getTransformMatrix","EditModeHelper","target","getAttribute","self","helperConfig","dots","name","rotateIcon","strokeDasharray","pointerEvents","dot","key","cx","cy","r","style","cursor","onDotMouseDown","onRotateMouseDown","d","Text","_this","divElement","clientHeight","clientWidth","setState","prevProps","onResize","_this2","overflow","textAlign","ref","xmlns","display","split","i","Rectangle","containers_Text","containers_EditModeHelper","SvgRender","selectToolActive","selectToolStartPoint","svgOffset","getBoundingClientRect","refs","updatedValues","updatedObject","getObjectResizeValues","resizeToolDirection","atan2","PI","getObjectRotateValue","updateSelectToolData","handleSelectTool","currentTarget","setSelectStartPosition","resetSelectToolData","selectedObjectIds","rect1","rect2","push","startPoint","size","getSelectToolPosition","className","onMouseMove","vectorType","containers_Rectangle","containers_Vector","containers_SelectTool","LayoutBuilder","containers_SvgRender","changePage","layoutBuilder","App","home","document","querySelector","render","es","store","lib","app"],"mappings":"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","file":"static/js/main.b26569e9.chunk.js","sourcesContent":["import {\n    UPDATE_HANDLER_OBJECT_INDEX,\n    UPDATE_EDIT_MODE,\n    SET_MOUSE_START_POSITION,\n    SET_OBJECTS_SELECT_STATE,\n    DESELECT_ALL_OBJECTS,\n    DESELECT_ALL_OBJECTS_EXEPT,\n    MOVE_OBJECT,\n    SET_OBJECT_EDIT_START_POSITION,\n    RESIZE_OBJECT,\n    SET_OBJECT_MODE,\n    SAVE_EDIT_OBJECT_INIT_STATE,\n    RESET_OBJECT_MODE,\n    ROTATE_OBJECT\n} from './../constants';\n\n\nfunction updateObject(oldObject, newValues) {\n    return Object.assign({}, oldObject, newValues)\n}\n\nfunction updateItemInArray(array, itemId, updateItemCallback) {\n    const updatedItems = array.map(item => {\n        if (item.id !== itemId) {\n            // Since we only want to update one item, preserve all others as they are now\n            return item\n        }\n\n        // Use the provided callback to create an updated item\n        const updatedItem = updateItemCallback(item)\n        return updatedItem\n    })\n\n    return updatedItems\n}\n\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    let updatedItems = [];\n\n    switch (action.type) {\n        case UPDATE_HANDLER_OBJECT_INDEX:\n            return {\n                ...state,\n                handlerObjectIndex: action.index\n            }\n        case UPDATE_EDIT_MODE:\n            return {\n                ...state,\n                editMode: action.mode\n            }\n        case SET_MOUSE_START_POSITION:\n            return {\n                ...state,\n                mouseStartPosition: {x: action.x, y: action.y}\n            }\n        case SET_OBJECTS_SELECT_STATE:\n            updatedItems = state.objects.map(item => {\n                if (action.payload.ids.includes(item.id)) {\n                    return {...item, selected: action.payload.switchTo || true}\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case DESELECT_ALL_OBJECTS:\n            updatedItems = state.objects.map(item => {\n                return {...item, selected: false}\n            })\n            return {...state, objects: updatedItems}\n\n        case DESELECT_ALL_OBJECTS_EXEPT:\n            updatedItems = state.objects.map(item => {\n                if (item.id === action.payload) {\n                    return item;\n                }\n                return {...item, selected: false}\n            })\n\n            return {...state, objects: updatedItems}\n\n        case MOVE_OBJECT:\n            updatedItems = state.objects.map(item => {\n                if (item.id === action.payload.id) {\n                    return {...item, x: action.payload.x, y: action.payload.y}\n                }\n                return item;\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_OBJECT_EDIT_START_POSITION:\n            updatedItems = state.objects.map(item => {\n                if (item.selected) {\n                    return {\n                        ...item,\n                        editStartPositionOffset: {\n                            x: action.payload.x - item.x,\n                            y: action.payload.y - item.y\n                        }\n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case RESIZE_OBJECT:\n            updatedItems = updateItemInArray(state.objects, action.payload.id, object => {\n                return updateObject(object, {\n                    x: action.payload.x,\n                    y: action.payload.y,\n                    width: action.payload.width,\n                    height: action.payload.height\n                })\n            })\n            return updateObject(state, {objects: updatedItems})\n\n        case SET_OBJECT_MODE:\n            updatedItems = state.objects.map(item => {\n                if (item.id === action.payload.id) {\n                    return {...item, mode: action.payload.mode}\n                }\n                return item;\n            })\n            return {...state, objects: updatedItems}\n\n        case SAVE_EDIT_OBJECT_INIT_STATE:\n            let updatedItem = null;\n            state.objects.forEach(item => {\n                if (item.id === action.payload.id) {\n                    updatedItem = item;\n                }\n            })\n            return {...state, editObjectInitState: updatedItem}\n\n        case RESET_OBJECT_MODE:\n            updatedItems = state.objects.map(item => {\n                return {...item, mode: null}\n            })\n            return {...state, objects: updatedItems}\n\n        case ROTATE_OBJECT:\n            updatedItems = updateItemInArray(state.objects, action.payload.id, object => {\n                return updateObject(object, {rotate: action.payload.rotate})\n            })\n            return updateObject(state, {objects: updatedItems})\n        default:\n            return state\n    }\n}","import {\n    SET_RESIZE_DIRECTION\n} from './../constants';\n\n\nconst initialState = {\n    resizeDirection: null\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_RESIZE_DIRECTION:\n            return {\n                ...state,\n                resizeDirection: action.payload.direction\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const setResizeDirection = (direction) => {\n    return dispatch => {\n        dispatch({\n            type: SET_RESIZE_DIRECTION,\n            payload: {\n                direction: direction\n            }\n        })\n    }\n}","export const UPDATE_HANDLER_OBJECT_INDEX = 'svgRender/HANDLER_OBJECT_INDEX';\nexport const UPDATE_EDIT_MODE = 'svgRender/UPDATE_EDIT_MODE';\nexport const SET_MOUSE_START_POSITION = 'svgRender/SET_MOUSE_START_POSITION';\nexport const SET_OBJECTS_SELECT_STATE = 'svgRender/UPDATE_OBJECTS_SELECT_STATE';\nexport const DESELECT_ALL_OBJECTS = 'svgRender/DESELECT_ALL_OBJECTS';\nexport const DESELECT_ALL_OBJECTS_EXEPT = 'svgRender/DESELECT_ALL_OBJECTS_EXEPT';\nexport const MOVE_OBJECT = 'svgRender/MOVE_OBJECT';\nexport const SET_OBJECT_EDIT_START_POSITION = 'svgRender/SET_OBJECT_EDIT_START_POSITION';\nexport const RESIZE_OBJECT = 'svgRender/RESIZE_OBJECT';\nexport const SET_OBJECT_MODE = 'svgRender/SET_OBJECT_MODE';\nexport const SAVE_EDIT_OBJECT_INIT_STATE = 'svgRender/SAVE_EDIT_OBJECT_INIT_STATE';\nexport const RESET_OBJECT_MODE = 'svgRender/RESET_OBJECT_MODE';\nexport const ROTATE_OBJECT = 'svgRender/ROTATE_OBJECT';\nexport const SET_RESIZE_DIRECTION = 'resizeTool/SET_RESIZE_DIRECTION';","import { combineReducers } from 'redux'\nimport svgRender from './svgRender'\nimport resizeTool from './resizeTool'\n\nexport default combineReducers({\n  svgRender, resizeTool\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport createHistory from 'history/createBrowserHistory'\nimport rootReducer from './modules'\n\nexport const history = createHistory()\n\nconst initialState = {\n  svgRender: {\n      editMode: null,\n      mousePosition: {\n          x: null,\n          y: null\n      },\n      mouseStartPosition: {\n          x: null,\n          y: null\n      },\n\n      handlerObjectIndex: null,\n\n      objects: [\n          {\n              id: 1,\n              width: 163,\n              height: 84,\n              rotate: 0,\n              strokeWidth: 0,\n              fill: \"rgba(0, 123, 255, 1)\",\n              radius: \"0\",\n              type: \"rectangle\",\n              x: 17,\n              y: 15,\n              selected: false\n          },\n          {\n              id: 2,\n              width: 100,\n              height: 84,\n              rotate: 0,\n              strokeWidth: 0,\n              fill: \"rgba(0, 123, 255, 1)\",\n              radius: \"0\",\n              type: \"rectangle\",\n              x: 200,\n              y: 50,\n              selected: false,\n              text: \"Lorem ipsum \\n dolor\"\n          }\n      ],\n      editObjectInitState: null\n  }\n}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n","import {\n    UPDATE_HANDLER_OBJECT_INDEX,\n    UPDATE_EDIT_MODE,\n    SET_MOUSE_START_POSITION,\n    SET_OBJECTS_SELECT_STATE,\n    DESELECT_ALL_OBJECTS,\n    DESELECT_ALL_OBJECTS_EXEPT,\n    MOVE_OBJECT,\n    SET_OBJECT_EDIT_START_POSITION,\n    RESIZE_OBJECT,\n    SET_OBJECT_MODE,\n    SAVE_EDIT_OBJECT_INIT_STATE,\n    RESET_OBJECT_MODE,\n    ROTATE_OBJECT\n} from './../constants';\n\n\nexport const updateHandlerObjectIndex = (index) => {\n    return dispatch => {\n        dispatch({\n            type: UPDATE_HANDLER_OBJECT_INDEX,\n            index: index\n        })\n\n    }\n}\n\nexport const updateEditMode = (mode) => {\n    return dispatch => {\n        dispatch({\n            type: UPDATE_EDIT_MODE,\n            mode: mode\n        })\n\n    }\n}\n\nexport const setMouseStartPosition = (x, y) => {\n    return dispatch => {\n        dispatch({\n            type: SET_MOUSE_START_POSITION,\n            x: x,\n            y: y\n        })\n\n    }\n}\n\nexport const setObjectsSelectState = (ids) => {\n    return dispatch => {\n        dispatch({\n            type: SET_OBJECTS_SELECT_STATE,\n            payload: {\n                ids: ids,\n                switchTo: true\n            }\n        })\n    }\n}\n\nexport const deselectAllObjects = () => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_ALL_OBJECTS,\n        })\n    }\n}\n\nexport const deselectAllObjectsExept = (id) => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_ALL_OBJECTS_EXEPT,\n            payload: id\n        })\n    }\n}\n\n\nexport const moveObject = (id, x, y) => {\n    return dispatch => {\n        dispatch({\n            type: MOVE_OBJECT,\n            payload: {\n                id: id,\n                x: x,\n                y: y\n            }\n        })\n    }\n}\n\nexport const setObjectEditStartPosition = (x, y) => {\n    return dispatch => {\n        dispatch({\n            type: SET_OBJECT_EDIT_START_POSITION,\n            payload: {\n                x: x,\n                y: y\n            }\n        })\n    }\n}\n\n\nexport const resizeObject = (props) => {\n    return dispatch => {\n        dispatch({\n            type: RESIZE_OBJECT,\n            payload: props\n        })\n    }\n}\n\nexport const setObjectMode = (id, mode) => {\n    return dispatch => {\n        dispatch({\n            type: SET_OBJECT_MODE,\n            payload: {\n                id: id,\n                mode: mode\n            }\n        })\n    }\n}\n\nexport const saveEditObjectInitState = (id) => {\n    return dispatch => {\n        dispatch({\n            type: SAVE_EDIT_OBJECT_INIT_STATE,\n            payload: {\n                id: id\n            }\n        })\n    }\n}\n\nexport const resetObjectMode = () => {\n    return dispatch => {\n        dispatch({\n            type: RESET_OBJECT_MODE\n        })\n    }\n}\n\nexport const rotateObject = ({id, rotate}) => {\n    return dispatch => {\n        dispatch({\n            type: ROTATE_OBJECT,\n            payload: {id, rotate}\n        })\n    }\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {\n    updateHandlerObjectIndex,\n    updateEditMode,\n    setMouseStartPosition,\n    setObjectsSelectState,\n    deselectAllObjects,\n    setObjectEditStartPosition,\n    deselectAllObjectsExept\n} from '../../src/actions'\n\n\n\nclass Vector extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    onMouseUp(e) {\n        let objectMoved = this.props.mouseStartPosition.x !== e.clientX || this.props.mouseStartPosition.y !== e.clientY;\n\n        if (!e.shiftKey && !objectMoved) {\n            this.props.deselectAllObjectsExept(this.props.object.id);\n        }\n    }\n\n\n    onMouseDown(e) {\n        if (!e.shiftKey && !this.props.object.selected) {\n            this.props.deselectAllObjects();\n        }\n\n        this.props.setObjectsSelectState([this.props.object.id], true)\n        this.props.setMouseStartPosition(e.clientX, e.clientY)\n\n        this.props.setObjectEditStartPosition(e.clientX, e.clientY);\n        this.props.updateEditMode('drag')\n    }\n\n    render() {\n        return React.cloneElement(this.props.children, {onMouseUp: this.onMouseUp.bind(this), onMouseDown: this.onMouseDown.bind(this), object: this.props.object})\n\n    }\n\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    mouseStartPosition: svgRender.mouseStartPosition\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            updateHandlerObjectIndex,\n            updateEditMode,\n            setMouseStartPosition,\n            setObjectsSelectState,\n            deselectAllObjects,\n            setObjectEditStartPosition,\n            deselectAllObjectsExept\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Vector)\n","import React, {Component} from 'react';\n\nclass SelectTool extends Component {\n    render() {\n        return (\n            <g>\n               <rect\n                    strokeWidth=\"1\"\n                    stroke=\"#6298F9\"\n                    fill=\"rgba(98, 152, 249, 0.3)\"\n                    opacity=\"0.3\"\n                    x={this.props.selectToolPosition.x}\n                    y={this.props.selectToolPosition.y}\n                    width={this.props.selectToolSize.width}\n                    height={this.props.selectToolSize.height}\n                /> : ''}\n            </g>\n        );\n    }\n}\n\nexport default SelectTool;\n\n","//TODO fix bug with resize when object rotated\n\nlet progress = null,\n    changeValue = null,\n    returnVal = {};\n\nfunction getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.y - mouseStartPosition.y;\n    changeValue = objectInitState.height + progress;\n    returnVal.y = changeValue > 0 ? objectInitState.y : objectInitState.y - Math.abs(changeValue);\n    returnVal.height = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.y - mouseStartPosition.y;\n    changeValue = objectInitState.height - progress;\n    returnVal.y = changeValue > 0 ? objectInitState.y - (changeValue - objectInitState.height) : objectInitState.y + objectInitState.height;\n    returnVal.height = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.x - mouseStartPosition.x;\n    changeValue = objectInitState.width + progress;\n    returnVal.x = changeValue < 0 ? objectInitState.x + changeValue : objectInitState.x;\n    returnVal.width = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.x - mouseStartPosition.x;\n    changeValue = objectInitState.width - progress;\n    returnVal.x = changeValue > 0 ? objectInitState.x + progress : objectInitState.x + objectInitState.width;\n    returnVal.width = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nexport const getObjectResizeValues = (mouse, direction, objectInitState, mouseStartPosition, object) => {\n    let updatedObject = object;\n\n    switch (direction) {\n        case 's':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'n':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'e':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'w':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'ne':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'se':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'sw':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'nw':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n    }\n\n    return updatedObject;\n}","export const getTransformMatrix = ({rotate, x, y, width, height}) => {\n    if (rotate) {\n        let centerX = width / 2 + x;\n        let centerY = height / 2 + y;\n        return `rotate(${rotate} ${centerX} ${centerY})`;\n    }\n}\n\nexport const getObjectAttributes = (object) => {\n    return {\n        transform: getTransformMatrix(object)\n    };\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {\n    resizeObject,\n    setMouseStartPosition,\n    updateEditMode,\n    setObjectMode,\n    saveEditObjectInitState\n} from '../../src/actions'\n\nimport {\n    setResizeDirection\n} from '../../src/modules/resizeTool'\n\nimport {getObjectAttributes} from './actions/vector.js';\n\nclass EditModeHelper extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onRotateMouseDown(e) {\n        this.props.setObjectMode(this.props.object.id, 'rotate');\n        this.props.updateEditMode('rotate');\n        this.props.setMouseStartPosition(e.clientX, e.clientY);\n    }\n\n    onDotMouseDown(e){\n        this.props.setObjectMode(this.props.object.id, 'resize');\n        this.props.updateEditMode('resize');\n        this.props.saveEditObjectInitState(this.props.object.id);\n        this.props.setMouseStartPosition(e.clientX, e.clientY);\n        this.props.setResizeDirection(e.target.getAttribute('name'))\n    }\n\n    render() {\n        let self = this;\n\n        let object = this.props.object;\n\n        const helperConfig =\n            {\n                dots: [\n                    {\n                        name: 'nw',\n                        x: object.x,\n                        y: object.y\n                    },\n                    {\n                        name: 'n',\n                        x: object.x + object.width / 2,\n                        y: object.y\n                    },\n                    {\n                        name: 'ne',\n                        x: object.x + object.width,\n                        y: object.y\n                    },\n                    {\n                        name: 'w',\n                        x: object.x,\n                        y: object.y + object.height / 2\n                    },\n                    {\n                        name: 'e',\n                        x: object.x + object.width,\n                        y: object.y + object.height / 2\n                    },\n                    {\n                        name: 'sw',\n                        x: object.x,\n                        y: object.y + object.height\n                    },\n                    {\n                        name: 's',\n                        x: object.x + object.width / 2,\n                        y: object.y + object.height\n                    },\n                    {\n                        name: 'se',\n                        x: object.x + object.width,\n                        y: object.y + object.height\n                    }\n                ]\n            }\n\n            const rotateIcon = {\n                x: object.x + object.width / 2 - 6,\n                y: object.y - 20\n            }\n\n\n        return (\n            <g {...getObjectAttributes(object)}>\n                <rect\n                    width={object.width}\n                    height={object.height}\n                    x={object.x}\n                    y={object.y}\n                    fill=\"none\" stroke=\"#00a8ff\" strokeDasharray=\"3 3\" pointerEvents=\"none\"/>\n\n                {helperConfig.dots.map(function (dot) {\n                    return <circle key={dot.name} name={dot.name} cx={dot.x} cy={dot.y} fill=\"#34B7EF\" r=\"5\" style={{cursor: dot.name + '-resize'}} onMouseDown={self.onDotMouseDown.bind(self)}/>\n                })}\n\n                <path cursor=\"pointer\" onMouseDown={self.onRotateMouseDown.bind(self)} transform={'translate(' + rotateIcon.x + ' ' + rotateIcon.y +')'} stroke=\"rgb(0, 0, 0, 0)\" strokeWidth=\"5\" d=\"M5.1,0.2L4.4,0.8c-0.1,0.1-0.1,0.2,0,0.3l1.1,1.1C4.2,2.1,2.8,2.5,1.7,3.5c-2,1.8-2.1,4.9-0.3,6.8\n                c1.8,2,4.8,2.1,6.8,0.3c0.9-0.8,1.4-1.9,1.5-3.1c0-0.1-0.1-0.3-0.2-0.3l-0.9,0c-0.1,0-0.2,0.1-0.2,0.2C8.3,8.2,7.9,9,7.2,9.6\n                c-1.4,1.3-3.6,1.2-4.8-0.2C1.1,8,1.2,5.8,2.6,4.5c0.9-0.8,2-1.1,3.1-0.8L4.2,5c-0.1,0.1-0.1,0.2,0,0.3L4.8,6c0.1,0.1,0.2,0.1,0.3,0\n                L8,3.4c0.1-0.1,0.1-0.2,0-0.3L5.4,0.2C5.3,0.1,5.2,0.1,5.1,0.2z\"/>\n\n            </g>\n        )\n    }\n}\n//\n// const mapStateToProps = ({ svgRender }) => ({\n//\n// })\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            resizeObject,\n            setMouseStartPosition,\n            updateEditMode,\n            setObjectMode,\n            saveEditObjectInitState,\n            setResizeDirection\n        },\n        dispatch\n    )\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(EditModeHelper)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport EditModeHelper from './EditModeHelper.js';\n\nimport {getObjectAttributes} from './actions/vector.js';\n\nfunction breakLine(text) {\n    console.log(text);\n    var br = React.createElement('br');\n    var regex = /(<br \\/>)/g;\n    return text.split(regex).map(function(line, index) {\n        return line.match(regex) ? <br key={\"key_\" + index} /> : line;\n    });\n}\n\nclass Text extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            height: 0,\n            width: 0\n        }\n    }\n\n    onResize(){\n        const height = this.divElement.clientHeight;\n        const width = this.divElement.clientWidth;\n\n        this.setState({ height, width });\n    }\n\n    componentDidUpdate(prevProps){\n        if (prevProps.object.width !== this.props.object.width || prevProps.object.height !== this.props.object.height) {\n            this.onResize();\n        }\n    }\n\n    componentDidMount(){\n        this.onResize();\n    }\n\n\n    render() {\n        return (\n            <g>\n                <foreignObject\n                    {...getObjectAttributes(this.props.object)}\n                    width={this.props.object.width}\n                    height={this.state.height}\n                    overflow=\"visible\"\n                    x={this.props.object.x}\n                    y={this.props.object.y + this.props.object.height / 2 - this.state.height / 2}\n                >\n                    <div style={{ textAlign: 'center' }} ref={ (divElement) => this.divElement = divElement}>\n                        <div xmlns=\"http://www.w3.org/1999/xhtml\" style={{ display: 'inline-block' }}>\n                            {this.props.object.text.split(\"\\n\").map((i,key) => {\n                                return <div key={key}>{i}</div>;\n                            })}\n                        </div>\n                    </div>\n                </foreignObject>\n            </g>\n        )\n    }\n}\n\n\n// const mapStateToProps = ({svgRender}) => ({\n//     mouseStartPosition: svgRender.mouseStartPosition\n// })\n//\n// const mapDispatchToProps = dispatch =>\n//     bindActionCreators({\n//             updateHandlerObjectIndex,\n//             updateEditMode,\n//             setMouseStartPosition,\n//             setObjectsSelectState,\n//             deselectAllObjects,\n//             setEditStartPositionOffset,\n//             deselectAllObjectsExept\n//         },\n//         dispatch\n//     )\n\nexport default connect(\n    null,\n    null\n)(Text)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport EditModeHelper from './EditModeHelper.js';\nimport Text from './Text';\n\nimport {getObjectAttributes} from './actions/vector.js';\n\nclass Rectangle extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n        return (\n            <g>\n\n                {this.props.object.text ? <Text object={this.props.object}/> : ''}\n\n                    <rect {...getObjectAttributes(this.props.object)}\n                          width={this.props.object.width}\n                          height={this.props.object.height}\n                          x={this.props.object.x}\n                          y={this.props.object.y}\n                          pointerEvents=\"visible\"\n                          cursor=\"move\"\n                          fill=\"none\"\n                          strokeWidth=\"1\"\n                          stroke=\"black\"\n                          onMouseDown={this.props.onMouseDown}\n                          onMouseUp={this.props.onMouseUp}\n                    />\n\n\n                {this.props.object.selected ? <EditModeHelper\n                    object={this.props.object}/> : ''}\n\n            </g>\n        )\n    }\n}\n\n//\n// const mapStateToProps = ({svgRender}) => ({\n//     mouseStartPosition: svgRender.mouseStartPosition\n// })\n//\n// const mapDispatchToProps = dispatch =>\n//     bindActionCreators({\n//             updateHandlerObjectIndex,\n//             updateEditMode,\n//             setMouseStartPosition,\n//             setObjectsSelectState,\n//             deselectAllObjects,\n//             setEditStartPositionOffset,\n//             deselectAllObjectsExept\n//         },\n//         dispatch\n//     )\n\nexport default connect(\n    null,\n    null\n)(Rectangle)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport Vector from './Vector';\nimport SelectTool from './SelectTool';\nimport {getSelectToolSize, getSelectToolPosition, checkRectRectCollision} from './actions/selectTool';\nimport {getObjectResizeValues} from './actions/resizeTool';\nimport {getObjectRotateValue} from './actions/rootateTool.js';\nimport Rectangle from './Rectangle';\nimport Text from './Text';\n\n\nimport {\n    updateEditMode,\n    deselectAllObjects,\n    moveObject,\n    setObjectsSelectState,\n    resizeObject,\n    resetObjectMode,\n    rotateObject\n} from '../../src/actions'\n\nclass SvgRender extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectToolActive: false,\n            selectToolStartPoint: {\n                x: null,\n                y: null\n            },\n            mousePosition: {\n                x: null,\n                y: null\n            },\n            svgOffset: {\n                x: null,\n                y: null\n            },\n            selectToolSize: {\n                x: null,\n                y: null\n            },\n            selectToolPosition: {\n                x: null,\n                y: null\n            }\n        }\n    }\n\n    componentDidMount() {\n        const getBoundingClientRect = this.refs.svgRender.getBoundingClientRect();\n\n        this.setState({\n            svgOffset: {\n                x: getBoundingClientRect.x,\n                y: getBoundingClientRect.y\n            }\n        })\n    }\n\n    onMouseMove(e) {\n\n        let self = this;\n\n        if (this.props.editMode === 'drag') {\n            this.props.objects.forEach(function (object) {\n                if (object.selected) {\n                    self.props.moveObject(object.id, e.clientX - object.editStartPositionOffset.x, e.clientY - object.editStartPositionOffset.y);\n                }\n            })\n        }\n\n        else if (this.props.editMode === 'resize') {\n            this.props.objects.forEach(function (object) {\n                if (object.mode === 'resize') {\n                    let updatedValues = getObjectResizeValues(\n                        {x: e.clientX, y: e.clientY},\n                        self.props.resizeToolDirection,\n                        self.props.editObjectInitState,\n                        self.props.mouseStartPosition,\n                        {x: object.x, y: object.y, width: object.width, height: object.height}\n                    );\n\n                    self.props.resizeObject({\n                            id: object.id,\n                            ...updatedValues\n                        }\n                    );\n                }\n            })\n        }\n\n        else if (this.props.editMode === 'rotate') {\n            this.props.objects.forEach(function (object) {\n                if (object.mode === 'rotate') {\n\n                    let mouse = {x: e.clientX, y: e.clientY},\n                        mouseStartPosition = self.props.mouseStartPosition;\n\n                    self.props.rotateObject({\n                            id: object.id,\n                            rotate: getObjectRotateValue({mouse, mouseStartPosition, object})\n                        }\n                    );\n                }\n            })\n        }\n\n\n        if (this.props.editMode === 'selectTool') {\n            this.updateSelectToolData({x: e.clientX, y: e.clientY});\n        }\n    }\n\n\n    onMouseUp(e) {\n        if (this.props.editMode === 'selectTool') {\n            this.handleSelectTool();\n        }\n        else if (this.props.editMode === 'resize') {\n            this.props.resetObjectMode();\n        }\n        else if (this.props.editMode === 'rotate') {\n            this.props.resetObjectMode();\n        }\n\n\n        this.props.updateEditMode(null);\n    }\n\n    onMouseDown(e) {\n        if (e.target === e.currentTarget) {\n            this.setSelectStartPosition({x: e.clientX, y: e.clientY});\n            this.updateSelectToolData({x: e.clientX, y: e.clientY});\n            this.props.updateEditMode('selectTool');\n        }\n    }\n\n    setSelectStartPosition(mousePosition) {\n        this.setState({\n            selectToolStartPoint: {\n                x: mousePosition.x - this.state.svgOffset.x,\n                y: mousePosition.y - this.state.svgOffset.y\n            }\n        })\n    }\n\n    handleSelectTool() {\n        let self = this;\n\n        this.resetSelectToolData();\n\n        let selectedObjectIds = [];\n\n        this.props.objects.forEach(function (object) {\n            if (checkRectRectCollision({\n                        x: object.x,\n                        y: object.y,\n                        width: object.width,\n                        height: object.height\n                    },\n                    {\n                        x: self.state.selectToolPosition.x,\n                        y: self.state.selectToolPosition.y,\n                        width: self.state.selectToolSize.width,\n                        height: self.state.selectToolSize.height\n                    })) {\n                selectedObjectIds.push(object.id);\n            }\n        })\n\n        this.props.deselectAllObjects();\n\n        if (selectedObjectIds.length) {\n            this.props.setObjectsSelectState(selectedObjectIds)\n        }\n    }\n\n    resetSelectToolData() {\n        this.setState({\n            selectToolStartPoint: {x: null, y: null},\n            selectToolSize: {x: null, y: null}\n        });\n    }\n\n    updateSelectToolData(mousePosition) {\n        if (this.state.selectToolStartPoint.x === null) return;\n\n        const selectToolSize = getSelectToolSize(\n            this.state.selectToolStartPoint,\n            mousePosition,\n            this.state.svgOffset\n        );\n\n        this.setState({\n            selectToolSize: selectToolSize\n        })\n        const selectToolPosition = getSelectToolPosition(\n            this.state.selectToolStartPoint,\n            mousePosition,\n            this.state.svgOffset,\n            selectToolSize\n        );\n        this.setState({\n            selectToolPosition: selectToolPosition\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <svg className=\"svgRender\" ref=\"svgRender\" width='800' height='500'\n                     onMouseMove={this.onMouseMove.bind(this)} onMouseUp={this.onMouseUp.bind(this)}\n                     onMouseDown={this.onMouseDown.bind(this)}>\n                    {this.props.objects.map(function (object) {\n                        let vectorType = null;\n                        switch (object.type){\n                            case 'rectangle': {\n                                vectorType = <Rectangle/>;\n                                break;\n                            }\n                            case 'text': {\n                                vectorType = <Text/>;\n                                break;\n                            }\n                        }\n                        return (\n                            <Vector key={object.id} object={object}>\n                                {vectorType}\n                            </Vector>\n                        )\n                    })}\n\n                    {this.props.editMode === 'selectTool' ? <SelectTool\n                        selectToolPosition={this.state.selectToolPosition}\n                        selectToolSize={this.state.selectToolSize}\n                    /> : ''}\n                </svg>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender, resizeTool}) => ({\n    objects: svgRender.objects,\n    editMode: svgRender.editMode,\n    mouseStartPosition: svgRender.mouseStartPosition,\n    editObjectInitState: svgRender.editObjectInitState,\n    resizeToolDirection: resizeTool.resizeDirection\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            updateEditMode,\n            deselectAllObjects,\n            moveObject,\n            setObjectsSelectState,\n            resizeObject,\n            resetObjectMode,\n            rotateObject\n        },\n        dispatch\n    )\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SvgRender)\n","//TODO make rotate more user friendly\nexport const getObjectRotateValue = ({mouse, mouseStartPosition, object}) => {\n    let angle = Math.atan2(\n        mouseStartPosition.x + (object.width || 0) / 2 - mouse.x,\n        mouseStartPosition.y + (object.height || 0) / 2 - mouse.y\n    );\n\n    let asDegree = angle * 180 / Math.PI;\n\n    return (asDegree - 45) * -1;\n}","//TODO fix select for rotated objects\n\nexport const getSelectToolPosition = (startPoint, mouse, svgOffset, size) => {\n    const x = mouse.x - svgOffset.x > startPoint.x ? startPoint.x : startPoint.x - size.width;\n    const y = mouse.y - svgOffset.y > startPoint.y ? startPoint.y : startPoint.y - size.height;\n\n    return {\n        x: x,\n        y: y\n    }\n}\n\nexport const getSelectToolSize = (startPoint, mouse, svgOffset) => {\n    const width = Math.abs(mouse.x - svgOffset.x - startPoint.x);\n    const height = Math.abs(mouse.y - svgOffset.y - startPoint.y);\n\n    return {\n        width: width,\n        height: height\n    }\n}\n\n\nexport const checkRectRectCollision = (rect1, rect2) => {\n    return rect1.x + rect1.width >= rect2.x &&\n        rect1.x <= rect2.x + rect2.width &&\n        rect1.y + rect1.height >= rect2.y &&\n        rect1.y <= rect2.y + rect2.height;\n}","import React from 'react'\nimport {push} from 'connected-react-router'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport SvgRender from '../SvgRender';\n\nclass LayoutBuilder extends React.Component {\n    render() {\n\n        return (\n            <div>\n                <SvgRender/>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            changePage: () => push('/about-us')\n        },\n        dispatch\n    )\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(LayoutBuilder)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport LayoutBuilder from '../layoutBuilder'\n\nconst Home = props => (\n  <div>\n      <LayoutBuilder/>\n  </div>\n)\n\nexport default connect(\n  null,\n    null\n)(Home)\n","import React from 'react'\nimport Home from '../home'\n\nconst App = () => (\n  <div>\n    <main>\n      <Home/>\n    </main>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport App from './containers/app'\n\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\n\nconst target = document.querySelector('#root')\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target\n)\n"],"sourceRoot":""}