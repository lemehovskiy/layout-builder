{"version":3,"sources":["modules/svgRender.js","modules/resizeTool.js","modules/index.js","store.js","containers/Vector.js","containers/SelectTool.js","containers/actions/resizeTool.js","containers/actions/rootateTool.js","containers/actions/vector.js","containers/EditModeHelper.js","containers/Rectangle.js","containers/SvgRender.js","containers/actions/selectTool.js","containers/layoutBuilder/index.js","containers/home/index.js","containers/app/index.js","index.js"],"names":["initialState","editMode","mousePosition","x","y","mouseStartPosition","handlerObjectIndex","objects","id","width","height","rotate","strokeWidth","fill","radius","type","selected","editObjectInitState","updateHandlerObjectIndex","index","dispatch","updateEditMode","mode","setMouseStartPosition","setObjectsSelectState","ids","payload","switchTo","deselectAllObjects","deselectAllObjectsExept","moveObject","setObjectEditStartPosition","resizeObject","props","setObjectMode","saveEditObjectInitState","resetObjectMode","rotateObject","_ref","resizeDirection","setResizeDirection","direction","combineReducers","svgRender","state","arguments","length","undefined","action","updatedItems","Object","objectSpread","map","item","includes","editStartPositionOffset","updatedItem","forEach","resizeTool","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","createStore","connectRouter","rootReducer","Vector","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","objectMoved","clientX","clientY","shiftKey","object","React","cloneElement","children","onMouseUp","bind","onMouseDown","Component","connect","bindActionCreators","SelectTool","react_default","a","createElement","stroke","opacity","selectToolPosition","selectToolSize","progress","changeValue","returnVal","getObjectResizeValuesSouth","mouse","objectInitState","Math","abs","getObjectResizeValuesNorth","getObjectResizeValuesEast","getObjectResizeValuesWest","getObjectRotateValue","atan2","PI","getTransformMatrix","centerX","centerY","getObjectAttributes","transform","EditModeHelper","target","getAttribute","self","helperConfig","dots","name","rotateIcon","strokeDasharray","pointerEvents","dot","key","cx","cy","r","style","cursor","onDotMouseDown","onRotateMouseDown","d","Rectangle","assign","containers_EditModeHelper","SvgRender","_this","selectToolActive","selectToolStartPoint","svgOffset","getBoundingClientRect","refs","setState","updatedValues","updatedObject","getObjectResizeValues","resizeToolDirection","updateSelectToolData","handleSelectTool","currentTarget","setSelectStartPosition","resetSelectToolData","selectedObjectIds","rect1","rect2","push","startPoint","size","getSelectToolPosition","className","ref","onMouseMove","containers_Vector","containers_Rectangle","containers_SelectTool","LayoutBuilder","containers_SvgRender","changePage","layoutBuilder","App","home","document","querySelector","render","es","store","lib","app"],"mappings":"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","file":"static/js/main.d0268e49.chunk.js","sourcesContent":["export const UPDATE_HANDLER_OBJECT_INDEX = 'svgRender/HANDLER_OBJECT_INDEX';\nexport const UPDATE_EDIT_MODE = 'svgRender/UPDATE_EDIT_MODE';\nexport const SET_MOUSE_START_POSITION = 'svgRender/SET_MOUSE_START_POSITION';\nexport const SET_OBJECTS_SELECT_STATE = 'svgRender/UPDATE_OBJECTS_SELECT_STATE';\nexport const DESELECT_ALL_OBJECTS = 'svgRender/DESELECT_ALL_OBJECTS';\nexport const DESELECT_ALL_OBJECTS_EXEPT = 'svgRender/DESELECT_ALL_OBJECTS_EXEPT';\nexport const MOVE_OBJECT = 'svgRender/MOVE_OBJECT';\nexport const SET_OBJECT_EDIT_START_POSITION = 'svgRender/SET_OBJECT_EDIT_START_POSITION';\nexport const RESIZE_OBJECT = 'svgRender/RESIZE_OBJECT';\nexport const SET_OBJECT_MODE = 'svgRender/SET_OBJECT_MODE';\nexport const SAVE_EDIT_OBJECT_INIT_STATE = 'svgRender/SAVE_EDIT_OBJECT_INIT_STATE';\nexport const RESET_OBJECT_MODE = 'svgRender/RESET_OBJECT_MODE';\nexport const ROTATE_OBJECT = 'svgRender/ROTATE_OBJECT';\n\n\nconst initialState = {\n    editMode: null,\n    mousePosition: {\n        x: null,\n        y: null\n    },\n    mouseStartPosition: {\n        x: null,\n        y: null\n    },\n\n    handlerObjectIndex: null,\n\n    objects: [\n        {\n            \"id\": 1,\n            \"width\": 163,\n            \"height\": 84,\n            \"rotate\": 0,\n            \"strokeWidth\": 0,\n            \"fill\": \"rgba(0, 123, 255, 1)\",\n            \"radius\": \"0\",\n            \"type\": \"rectangle\",\n            \"x\": 17,\n            \"y\": 15,\n            \"selected\": false\n        },\n        {\n            \"id\": 2,\n            \"width\": 100,\n            \"height\": 84,\n            \"rotate\": 0,\n            \"strokeWidth\": 0,\n            \"fill\": \"rgba(0, 123, 255, 1)\",\n            \"radius\": \"0\",\n            \"type\": \"rectangle\",\n            \"x\": 200,\n            \"y\": 50,\n            \"selected\": false\n        }\n    ],\n    editObjectInitState: null\n};\n\nexport default (state = initialState, action) => {\n    let updatedItems = [];\n\n    switch (action.type) {\n        case UPDATE_HANDLER_OBJECT_INDEX:\n            return {\n                ...state,\n                handlerObjectIndex: action.index\n            }\n        case UPDATE_EDIT_MODE:\n            return {\n                ...state,\n                editMode: action.mode\n            }\n        case SET_MOUSE_START_POSITION:\n            return {\n                ...state,\n                mouseStartPosition: {x: action.x, y: action.y}\n            }\n        case SET_OBJECTS_SELECT_STATE:\n            updatedItems = state.objects.map(item => {\n                if (action.payload.ids.includes(item.id)) {\n                    return {...item, selected: action.payload.switchTo || true}\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case DESELECT_ALL_OBJECTS:\n            updatedItems = state.objects.map(item => {\n                return {...item, selected: false}\n            })\n            return {...state, objects: updatedItems}\n\n        case DESELECT_ALL_OBJECTS_EXEPT:\n            updatedItems = state.objects.map(item => {\n                if (item.id === action.payload) {\n                    return item;\n                }\n                return {...item, selected: false}\n            })\n\n            return {...state, objects: updatedItems}\n\n        case MOVE_OBJECT:\n            updatedItems = state.objects.map(item => {\n                if (item.id === action.payload.id) {\n                    return {...item, x: action.payload.x, y: action.payload.y}\n                }\n                return item;\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_OBJECT_EDIT_START_POSITION:\n            updatedItems = state.objects.map(item => {\n                if (item.selected) {\n                    return {\n                        ...item,\n                        editStartPositionOffset: {\n                            x: action.payload.x - item.x,\n                            y: action.payload.y - item.y\n                        }\n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n\n        case RESIZE_OBJECT:\n            updatedItems = state.objects.map(item => {\n                if (item.id === action.payload.id) {\n                    return {\n                        ...item,\n                        x: action.payload.x,\n                        y: action.payload.y,\n                        width: action.payload.width,\n                        height: action.payload.height\n                    }\n                }\n                return item;\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_OBJECT_MODE:\n            updatedItems = state.objects.map(item => {\n                if (item.id === action.payload.id) {\n                    return {...item, mode: action.payload.mode}\n                }\n                return item;\n            })\n            return {...state, objects: updatedItems}\n\n        case SAVE_EDIT_OBJECT_INIT_STATE:\n            let updatedItem = null;\n            state.objects.forEach(item => {\n                if (item.id === action.payload.id) {\n                    updatedItem = item;\n                }\n            })\n            return {...state, editObjectInitState: updatedItem}\n        \n        case RESET_OBJECT_MODE:\n            updatedItems = state.objects.map(item => {\n                return {...item, mode: null}\n            })\n            return {...state, objects: updatedItems}\n\n        case ROTATE_OBJECT:\n            updatedItems = state.objects.map(item => {\n                if (item.id === action.payload.id) {\n                    return {...item, rotate: action.payload.rotate}\n                }\n\n                return item\n            })\n            return {...state, objects: updatedItems}\n        default:\n            return state\n    }\n}\n\n\nexport const updateHandlerObjectIndex = (index) => {\n    return dispatch => {\n        dispatch({\n            type: UPDATE_HANDLER_OBJECT_INDEX,\n            index: index\n        })\n\n    }\n}\n\nexport const updateEditMode = (mode) => {\n    return dispatch => {\n        dispatch({\n            type: UPDATE_EDIT_MODE,\n            mode: mode\n        })\n\n    }\n}\n\nexport const setMouseStartPosition = (x, y) => {\n    return dispatch => {\n        dispatch({\n            type: SET_MOUSE_START_POSITION,\n            x: x,\n            y: y\n        })\n\n    }\n}\n\nexport const setObjectsSelectState = (ids) => {\n    return dispatch => {\n        dispatch({\n            type: SET_OBJECTS_SELECT_STATE,\n            payload: {\n                ids: ids,\n                switchTo: true\n            }\n        })\n    }\n}\n\nexport const deselectAllObjects = () => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_ALL_OBJECTS,\n        })\n    }\n}\n\nexport const deselectAllObjectsExept = (id) => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_ALL_OBJECTS_EXEPT,\n            payload: id\n        })\n    }\n}\n\n\nexport const moveObject = (id, x, y) => {\n    return dispatch => {\n        dispatch({\n            type: MOVE_OBJECT,\n            payload: {\n                id: id,\n                x: x,\n                y: y\n            }\n        })\n    }\n}\n\nexport const setObjectEditStartPosition = (x, y) => {\n    return dispatch => {\n        dispatch({\n            type: SET_OBJECT_EDIT_START_POSITION,\n            payload: {\n                x: x,\n                y: y\n            }\n        })\n    }\n}\n\n\nexport const resizeObject = (props) => {\n    return dispatch => {\n        dispatch({\n            type: RESIZE_OBJECT,\n            payload: props\n        })\n    }\n}\n\nexport const setObjectMode = (id, mode) => {\n    return dispatch => {\n        dispatch({\n            type: SET_OBJECT_MODE,\n            payload: {\n                id: id,\n                mode: mode\n            }\n        })\n    }\n}\n\nexport const saveEditObjectInitState = (id) => {\n    return dispatch => {\n        dispatch({\n            type: SAVE_EDIT_OBJECT_INIT_STATE,\n            payload: {\n                id: id\n            }\n        })\n    }\n}\n\nexport const resetObjectMode = () => {\n    return dispatch => {\n        dispatch({\n            type: RESET_OBJECT_MODE\n        })\n    }\n}\n\nexport const rotateObject = ({id, rotate}) => {\n    return dispatch => {\n        dispatch({\n            type: ROTATE_OBJECT,\n            payload: {id, rotate}\n        })\n    }\n}","export const SET_RESIZE_DIRECTION = 'resizeTool/SET_RESIZE_DIRECTION';\n\nconst initialState = {\n    resizeDirection: null\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_RESIZE_DIRECTION:\n            return {\n                ...state,\n                resizeDirection: action.payload.direction\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const setResizeDirection = (direction) => {\n    return dispatch => {\n        dispatch({\n            type: SET_RESIZE_DIRECTION,\n            payload: {\n                direction: direction\n            }\n        })\n    }\n}","import { combineReducers } from 'redux'\nimport svgRender from './svgRender'\nimport resizeTool from './resizeTool'\n\nexport default combineReducers({\n  svgRender, resizeTool\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport createHistory from 'history/createBrowserHistory'\nimport rootReducer from './modules'\n\nexport const history = createHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {\n    updateHandlerObjectIndex,\n    updateEditMode,\n    setMouseStartPosition,\n    setObjectsSelectState,\n    deselectAllObjects,\n    setObjectEditStartPosition,\n    deselectAllObjectsExept\n} from '../../src/modules/svgRender'\n\n\n\nclass Vector extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    onMouseUp(e) {\n        let objectMoved = this.props.mouseStartPosition.x !== e.clientX || this.props.mouseStartPosition.y !== e.clientY;\n\n        if (!e.shiftKey && !objectMoved) {\n            this.props.deselectAllObjectsExept(this.props.object.id);\n        }\n    }\n\n\n    onMouseDown(e) {\n        if (!e.shiftKey && !this.props.object.selected) {\n            this.props.deselectAllObjects();\n        }\n\n        this.props.setObjectsSelectState([this.props.object.id], true)\n        this.props.setMouseStartPosition(e.clientX, e.clientY)\n\n        this.props.setObjectEditStartPosition(e.clientX, e.clientY);\n        this.props.updateEditMode('drag')\n    }\n\n    render() {\n        return React.cloneElement(this.props.children, {onMouseUp: this.onMouseUp.bind(this), onMouseDown: this.onMouseDown.bind(this), object: this.props.object})\n\n    }\n\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    mouseStartPosition: svgRender.mouseStartPosition\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            updateHandlerObjectIndex,\n            updateEditMode,\n            setMouseStartPosition,\n            setObjectsSelectState,\n            deselectAllObjects,\n            setObjectEditStartPosition,\n            deselectAllObjectsExept\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Vector)\n","import React, {Component} from 'react';\n\nclass SelectTool extends Component {\n    render() {\n        return (\n            <g>\n               <rect\n                    strokeWidth=\"1\"\n                    stroke=\"#6298F9\"\n                    fill=\"rgba(98, 152, 249, 0.3)\"\n                    opacity=\"0.3\"\n                    x={this.props.selectToolPosition.x}\n                    y={this.props.selectToolPosition.y}\n                    width={this.props.selectToolSize.width}\n                    height={this.props.selectToolSize.height}\n                /> : ''}\n            </g>\n        );\n    }\n}\n\nexport default SelectTool;\n\n","//TODO fix bug with resize when object rotated\n\nlet progress = null,\n    changeValue = null,\n    returnVal = {};\n\nfunction getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.y - mouseStartPosition.y;\n    changeValue = objectInitState.height + progress;\n    returnVal.y = changeValue > 0 ? objectInitState.y : objectInitState.y - Math.abs(changeValue);\n    returnVal.height = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.y - mouseStartPosition.y;\n    changeValue = objectInitState.height - progress;\n    returnVal.y = changeValue > 0 ? objectInitState.y - (changeValue - objectInitState.height) : objectInitState.y + objectInitState.height;\n    returnVal.height = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.x - mouseStartPosition.x;\n    changeValue = objectInitState.width + progress;\n    returnVal.x = changeValue < 0 ? objectInitState.x + changeValue : objectInitState.x;\n    returnVal.width = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.x - mouseStartPosition.x;\n    changeValue = objectInitState.width - progress;\n    returnVal.x = changeValue > 0 ? objectInitState.x + progress : objectInitState.x + objectInitState.width;\n    returnVal.width = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nexport const getObjectResizeValues = (mouse, direction, objectInitState, mouseStartPosition, object) => {\n    let updatedObject = object;\n\n    switch (direction) {\n        case 's':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'n':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'e':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'w':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'ne':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'se':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'sw':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'nw':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n    }\n\n    return updatedObject;\n}","//TODO make rotate more user friendly\nexport const getObjectRotateValue = ({mouse, mouseStartPosition, object}) => {\n    let angle = Math.atan2(\n        mouseStartPosition.x + (object.width || 0) / 2 - mouse.x,\n        mouseStartPosition.y + (object.height || 0) / 2 - mouse.y\n    );\n\n    let asDegree = angle * 180 / Math.PI;\n\n    return (asDegree - 45) * -1;\n}","export const getTransformMatrix = ({rotate, x, y, width, height}) => {\n    if (rotate) {\n        let centerX = width / 2 + x;\n        let centerY = height / 2 + y;\n        return `rotate(${rotate} ${centerX} ${centerY})`;\n    }\n}\n\nexport const getObjectAttributes = (object) => {\n    return {\n        transform: getTransformMatrix(object)\n    };\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {\n    resizeObject,\n    setMouseStartPosition,\n    updateEditMode,\n    setObjectMode,\n    saveEditObjectInitState\n} from '../../src/modules/svgRender'\n\nimport {\n    setResizeDirection\n} from '../../src/modules/resizeTool'\n\nimport {getObjectAttributes} from './actions/vector.js';\n\nclass EditModeHelper extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onRotateMouseDown(e) {\n        this.props.setObjectMode(this.props.object.id, 'rotate');\n        this.props.updateEditMode('rotate');\n        this.props.setMouseStartPosition(e.clientX, e.clientY);\n    }\n\n    onDotMouseDown(e){\n        this.props.setObjectMode(this.props.object.id, 'resize');\n        this.props.updateEditMode('resize');\n        this.props.saveEditObjectInitState(this.props.object.id);\n        this.props.setMouseStartPosition(e.clientX, e.clientY);\n        this.props.setResizeDirection(e.target.getAttribute('name'))\n    }\n\n    render() {\n        let self = this;\n\n        let object = this.props.object;\n\n        const helperConfig =\n            {\n                dots: [\n                    {\n                        name: 'nw',\n                        x: object.x,\n                        y: object.y\n                    },\n                    {\n                        name: 'n',\n                        x: object.x + object.width / 2,\n                        y: object.y\n                    },\n                    {\n                        name: 'ne',\n                        x: object.x + object.width,\n                        y: object.y\n                    },\n                    {\n                        name: 'w',\n                        x: object.x,\n                        y: object.y + object.height / 2\n                    },\n                    {\n                        name: 'e',\n                        x: object.x + object.width,\n                        y: object.y + object.height / 2\n                    },\n                    {\n                        name: 'sw',\n                        x: object.x,\n                        y: object.y + object.height\n                    },\n                    {\n                        name: 's',\n                        x: object.x + object.width / 2,\n                        y: object.y + object.height\n                    },\n                    {\n                        name: 'se',\n                        x: object.x + object.width,\n                        y: object.y + object.height\n                    }\n                ]\n            }\n\n            const rotateIcon = {\n                x: object.x + object.width / 2 - 6,\n                y: object.y - 20\n            }\n\n\n        return (\n            <g {...getObjectAttributes(object)}>\n                <rect\n                    width={object.width}\n                    height={object.height}\n                    x={object.x}\n                    y={object.y}\n                    fill=\"none\" stroke=\"#00a8ff\" strokeDasharray=\"3 3\" pointerEvents=\"none\"/>\n\n                {helperConfig.dots.map(function (dot) {\n                    return <circle key={dot.name} name={dot.name} cx={dot.x} cy={dot.y} fill=\"#34B7EF\" r=\"5\" style={{cursor: dot.name + '-resize'}} onMouseDown={self.onDotMouseDown.bind(self)}/>\n                })}\n\n                <path cursor=\"pointer\" onMouseDown={self.onRotateMouseDown.bind(self)} transform={'translate(' + rotateIcon.x + ' ' + rotateIcon.y +')'} stroke=\"rgb(0, 0, 0, 0)\" strokeWidth=\"5\" d=\"M5.1,0.2L4.4,0.8c-0.1,0.1-0.1,0.2,0,0.3l1.1,1.1C4.2,2.1,2.8,2.5,1.7,3.5c-2,1.8-2.1,4.9-0.3,6.8\n                c1.8,2,4.8,2.1,6.8,0.3c0.9-0.8,1.4-1.9,1.5-3.1c0-0.1-0.1-0.3-0.2-0.3l-0.9,0c-0.1,0-0.2,0.1-0.2,0.2C8.3,8.2,7.9,9,7.2,9.6\n                c-1.4,1.3-3.6,1.2-4.8-0.2C1.1,8,1.2,5.8,2.6,4.5c0.9-0.8,2-1.1,3.1-0.8L4.2,5c-0.1,0.1-0.1,0.2,0,0.3L4.8,6c0.1,0.1,0.2,0.1,0.3,0\n                L8,3.4c0.1-0.1,0.1-0.2,0-0.3L5.4,0.2C5.3,0.1,5.2,0.1,5.1,0.2z\"/>\n\n            </g>\n        )\n    }\n}\n//\n// const mapStateToProps = ({ svgRender }) => ({\n//\n// })\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            resizeObject,\n            setMouseStartPosition,\n            updateEditMode,\n            setObjectMode,\n            saveEditObjectInitState,\n            setResizeDirection\n        },\n        dispatch\n    )\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(EditModeHelper)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport EditModeHelper from './EditModeHelper.js';\n\nimport {getObjectAttributes} from './actions/vector.js';\n\nclass Rectangle extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n        return (\n                <g>\n                    <rect {...getObjectAttributes(this.props.object)}\n                        width={this.props.object.width}\n                        height={this.props.object.height}\n                        x={this.props.object.x}\n                        y={this.props.object.y}\n                        cursor=\"move\"\n                        onMouseDown={this.props.onMouseDown}\n                        onMouseUp={this.props.onMouseUp}/>\n\n                    {this.props.object.selected ? <EditModeHelper\n                        object={this.props.object}/> : ''}\n                </g>\n        )\n    }\n}\n//\n// const mapStateToProps = ({svgRender}) => ({\n//     mouseStartPosition: svgRender.mouseStartPosition\n// })\n//\n// const mapDispatchToProps = dispatch =>\n//     bindActionCreators({\n//             updateHandlerObjectIndex,\n//             updateEditMode,\n//             setMouseStartPosition,\n//             setObjectsSelectState,\n//             deselectAllObjects,\n//             setEditStartPositionOffset,\n//             deselectAllObjectsExept\n//         },\n//         dispatch\n//     )\n\nexport default connect(\n    null,\n    null\n)(Rectangle)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport Vector from './Vector';\nimport SelectTool from './SelectTool';\nimport {getSelectToolSize, getSelectToolPosition, checkRectRectCollision} from './actions/selectTool';\nimport {getObjectResizeValues} from './actions/resizeTool';\nimport {getObjectRotateValue} from './actions/rootateTool.js';\nimport Rectangle from './Rectangle';\n\n\nimport {\n    updateEditMode,\n    deselectAllObjects,\n    moveObject,\n    setObjectsSelectState,\n    resizeObject,\n    resetObjectMode,\n    rotateObject\n} from '../../src/modules/svgRender'\n\nclass SvgRender extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectToolActive: false,\n            selectToolStartPoint: {\n                x: null,\n                y: null\n            },\n            mousePosition: {\n                x: null,\n                y: null\n            },\n            svgOffset: {\n                x: null,\n                y: null\n            },\n            selectToolSize: {\n                x: null,\n                y: null\n            },\n            selectToolPosition: {\n                x: null,\n                y: null\n            }\n        }\n    }\n\n    componentDidMount() {\n        const getBoundingClientRect = this.refs.svgRender.getBoundingClientRect();\n\n        this.setState({\n            svgOffset: {\n                x: getBoundingClientRect.x,\n                y: getBoundingClientRect.y\n            }\n        })\n    }\n\n    onMouseMove(e) {\n\n        let self = this;\n\n        if (this.props.editMode === 'drag') {\n            this.props.objects.forEach(function (object) {\n                if (object.selected) {\n                    self.props.moveObject(object.id, e.clientX - object.editStartPositionOffset.x, e.clientY - object.editStartPositionOffset.y);\n                }\n            })\n        }\n\n        else if (this.props.editMode === 'resize') {\n            this.props.objects.forEach(function (object) {\n                if (object.mode === 'resize') {\n                    let updatedValues = getObjectResizeValues(\n                        {x: e.clientX, y: e.clientY},\n                        self.props.resizeToolDirection,\n                        self.props.editObjectInitState,\n                        self.props.mouseStartPosition,\n                        {x: object.x, y: object.y, width: object.width, height: object.height}\n                    );\n\n                    self.props.resizeObject({\n                            id: object.id,\n                            ...updatedValues\n                        }\n                    );\n                }\n            })\n        }\n\n        else if (this.props.editMode === 'rotate') {\n            this.props.objects.forEach(function (object) {\n                if (object.mode === 'rotate') {\n\n                    let mouse = {x: e.clientX, y: e.clientY},\n                        mouseStartPosition = self.props.mouseStartPosition;\n\n                    self.props.rotateObject({\n                            id: object.id,\n                            rotate: getObjectRotateValue({mouse, mouseStartPosition, object})\n                        }\n                    );\n                }\n            })\n        }\n\n\n        if (this.props.editMode === 'selectTool') {\n            this.updateSelectToolData({x: e.clientX, y: e.clientY});\n        }\n    }\n\n\n    onMouseUp(e) {\n        if (this.props.editMode === 'selectTool') {\n            this.handleSelectTool();\n        }\n        else if (this.props.editMode === 'resize') {\n            this.props.resetObjectMode();\n        }\n        else if (this.props.editMode === 'rotate') {\n            this.props.resetObjectMode();\n        }\n\n\n        this.props.updateEditMode(null);\n    }\n\n    onMouseDown(e) {\n        if (e.target === e.currentTarget) {\n            this.setSelectStartPosition({x: e.clientX, y: e.clientY});\n            this.updateSelectToolData({x: e.clientX, y: e.clientY});\n            this.props.updateEditMode('selectTool');\n        }\n    }\n\n    setSelectStartPosition(mousePosition) {\n        this.setState({\n            selectToolStartPoint: {\n                x: mousePosition.x - this.state.svgOffset.x,\n                y: mousePosition.y - this.state.svgOffset.y\n            }\n        })\n    }\n\n    handleSelectTool() {\n        let self = this;\n\n        this.resetSelectToolData();\n\n        let selectedObjectIds = [];\n\n        this.props.objects.forEach(function (object) {\n            if (checkRectRectCollision({\n                        x: object.x,\n                        y: object.y,\n                        width: object.width,\n                        height: object.height\n                    },\n                    {\n                        x: self.state.selectToolPosition.x,\n                        y: self.state.selectToolPosition.y,\n                        width: self.state.selectToolSize.width,\n                        height: self.state.selectToolSize.height\n                    })) {\n                selectedObjectIds.push(object.id);\n            }\n        })\n\n        this.props.deselectAllObjects();\n\n        if (selectedObjectIds.length) {\n            this.props.setObjectsSelectState(selectedObjectIds)\n        }\n    }\n\n    resetSelectToolData() {\n        this.setState({\n            selectToolStartPoint: {x: null, y: null},\n            selectToolSize: {x: null, y: null}\n        });\n    }\n\n    updateSelectToolData(mousePosition) {\n        if (this.state.selectToolStartPoint.x === null) return;\n\n        const selectToolSize = getSelectToolSize(\n            this.state.selectToolStartPoint,\n            mousePosition,\n            this.state.svgOffset\n        );\n\n        this.setState({\n            selectToolSize: selectToolSize\n        })\n        const selectToolPosition = getSelectToolPosition(\n            this.state.selectToolStartPoint,\n            mousePosition,\n            this.state.svgOffset,\n            selectToolSize\n        );\n        this.setState({\n            selectToolPosition: selectToolPosition\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <svg className=\"svgRender\" ref=\"svgRender\" width='800' height='500'\n                     onMouseMove={this.onMouseMove.bind(this)} onMouseUp={this.onMouseUp.bind(this)}\n                     onMouseDown={this.onMouseDown.bind(this)}>\n                    {this.props.objects.map(function (object) {\n                        return <Vector key={object.id} object={object}><Rectangle/></Vector>\n                    })}\n\n\n                    {this.props.editMode === 'selectTool' ? <SelectTool\n                        selectToolPosition={this.state.selectToolPosition}\n                        selectToolSize={this.state.selectToolSize}\n                    /> : ''}\n                </svg>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender, resizeTool}) => ({\n    objects: svgRender.objects,\n    editMode: svgRender.editMode,\n    mouseStartPosition: svgRender.mouseStartPosition,\n    editObjectInitState: svgRender.editObjectInitState,\n    resizeToolDirection: resizeTool.resizeDirection\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            updateEditMode,\n            deselectAllObjects,\n            moveObject,\n            setObjectsSelectState,\n            resizeObject,\n            resetObjectMode,\n            rotateObject\n        },\n        dispatch\n    )\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SvgRender)\n","export const getSelectToolPosition = (startPoint, mouse, svgOffset, size) => {\n    const x = mouse.x - svgOffset.x > startPoint.x ? startPoint.x : startPoint.x - size.width;\n    const y = mouse.y - svgOffset.y > startPoint.y ? startPoint.y : startPoint.y - size.height;\n\n    return {\n        x: x,\n        y: y\n    }\n}\n\nexport const getSelectToolSize = (startPoint, mouse, svgOffset) => {\n    const width = Math.abs(mouse.x - svgOffset.x - startPoint.x);\n    const height = Math.abs(mouse.y - svgOffset.y - startPoint.y);\n\n    return {\n        width: width,\n        height: height\n    }\n}\n\n\nexport const checkRectRectCollision = (rect1, rect2) => {\n    return rect1.x + rect1.width >= rect2.x &&\n        rect1.x <= rect2.x + rect2.width &&\n        rect1.y + rect1.height >= rect2.y &&\n        rect1.y <= rect2.y + rect2.height;\n}","import React from 'react'\nimport {push} from 'connected-react-router'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport SvgRender from '../SvgRender';\n\nclass LayoutBuilder extends React.Component {\n    render() {\n\n        return (\n            <div>\n                <SvgRender/>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            changePage: () => push('/about-us')\n        },\n        dispatch\n    )\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(LayoutBuilder)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport LayoutBuilder from '../layoutBuilder'\n\nconst Home = props => (\n  <div>\n      <LayoutBuilder/>\n  </div>\n)\n\nexport default connect(\n  null,\n    null\n)(Home)\n","import React from 'react'\nimport Home from '../home'\n\nconst App = () => (\n  <div>\n    <main>\n        <Home/>\n    </main>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport App from './containers/app'\n\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\n\nconst target = document.querySelector('#root')\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target\n)\n"],"sourceRoot":""}