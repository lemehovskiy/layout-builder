{"version":3,"sources":["modules/svgRender.js","modules/resizeTool.js","constants/redux.js","modules/index.js","store.js","actions/index.js","containers/Vector.js","containers/SelectTool.js","containers/actions/resizeTool.js","containers/actions/rootateTool.js","containers/actions/vector.js","containers/EditModeHelper.js","containers/Text.js","containers/actions/text.js","containers/Rectangle.js","containers/SvgRender.js","containers/actions/selectTool.js","containers/ToolPanel/TextPanel/VerticalAlignPanel.js","containers/ToolPanel/TextPanel/TextAlignPanel.js","containers/actions/utils.js","containers/ToolPanel/TextPanel/index.js","containers/ToolPanel/SizePanel.js","containers/ToolPanel/PositionPanel.js","containers/ToolPanel/FillPanel/FillPanel.js","containers/ToolPanel/index.js","containers/layoutBuilder/index.js","containers/home/index.js","containers/app/index.js","index.js","containers/ToolPanel/FillPanel/FillPanel.module.scss"],"names":["updateObject","oldObject","newValues","Object","assign","updateItemInArray","array","itemId","updateItemCallback","map","item","id","initialState","resizeDirection","setResizeDirection","direction","dispatch","type","payload","combineReducers","svgRender","state","arguments","length","undefined","action","updatedItems","objectSpread","handlerObjectIndex","index","editMode","mode","mouseStartPosition","x","y","selectedObjectsId","concat","ids","objects","object","includes","editStartPositionOffset","console","log","width","height","updatedItem","forEach","editObjectInitState","rotate","textProps","verticalAlign","value","textAlign","color","fill","r","g","b","a","resizeTool","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","createStore","connectRouter","rootReducer","mousePosition","strokeWidth","radius","text","stroke","updateHandlerObjectIndex","updateEditMode","setMouseStartPosition","selectObjects","deselectAllObjects","deselectAllObjectsExept","moveObject","setObjectEditStartPosition","resizeObject","props","setObjectMode","saveEditObjectInitState","resetObjectMode","rotateObject","_ref","setTextAlign","setVerticalAlign","setFillColor","Vector","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","objectMoved","clientX","clientY","shiftKey","objectSelected","React","cloneElement","children","onMouseUp","bind","onMouseDown","Component","connect","bindActionCreators","SelectTool","react_default","createElement","opacity","selectToolPosition","selectToolSize","progress","changeValue","returnVal","getObjectResizeValuesSouth","mouse","objectInitState","Math","abs","getObjectResizeValuesNorth","getObjectResizeValuesEast","getObjectResizeValuesWest","getObjectRotateValue","atan2","PI","getTransformMatrix","centerX","centerY","getObjectAttributes","transform","EditModeHelper","target","getAttribute","self","helperConfig","dots","name","rotateIcon","strokeDasharray","pointerEvents","dot","key","cx","cy","style","cursor","onDotMouseDown","onRotateMouseDown","d","Text","_this","divElement","clientHeight","clientWidth","setState","prevProps","onResize","_this2","textState","overflow","getTextAttributes","ref","xmlns","display","split","i","Rectangle","containers_Text","containers_EditModeHelper","SvgRender","selectToolActive","selectToolStartPoint","svgOffset","getBoundingClientRect","refs","selectedObjects","updatedValues","updatedObject","getObjectResizeValues","resizeToolDirection","updateSelectToolData","handleSelectTool","currentTarget","setSelectStartPosition","resetSelectToolData","selectedObjectIds","rect1","rect2","push","startPoint","size","getSelectToolPosition","className","onMouseMove","vectorType","containers_Rectangle","containers_Vector","containers_SelectTool","filter","buttonsConfig","label","VerticalAlignPanel","button","activeValue","onClick","TextAlignPanel","byString","o","s","replace","n","k","getEqualPropertyValueFromSelectedObjects","values","every","val","arr","isInt","isNaN","parseInt","Number","TextPanel","TextPanel_VerticalAlignPanel","TextPanel_TextAlignPanel","SizePanel","pattern","disabled","onChange","PositionPanel","FillPanel","displayColorPicker","rgb","equalColorValue","styles","swatch","handleClickSwatch","colorNone","background","handleReset","react_color_lib","onChangeComplete","handleChangeComplete","ToolPanel","containers_ToolPanel_TextPanel","ToolPanel_PositionPanel","ToolPanel_SizePanel","ToolPanel_FillPanel_FillPanel","LayoutBuilder","containers_ToolPanel","containers_SvgRender","changePage","layoutBuilder","App","home","document","querySelector","render","es","store","lib","app","module","exports"],"mappings":"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","file":"static/js/main.123f1a6d.chunk.js","sourcesContent":["import {\n    UPDATE_HANDLER_OBJECT_INDEX,\n    UPDATE_EDIT_MODE,\n    SET_MOUSE_START_POSITION,\n    SELECT_OBJECTS,\n    DESELECT_OBJECTS,\n    DESELECT_ALL_OBJECTS,\n    DESELECT_ALL_OBJECTS_EXEPT,\n    MOVE_OBJECT,\n    SET_OBJECT_EDIT_START_POSITION,\n    RESIZE_OBJECT,\n    SET_OBJECT_MODE,\n    SAVE_EDIT_OBJECT_INIT_STATE,\n    RESET_OBJECT_MODE,\n    ROTATE_OBJECT,\n    SET_TEXT_ALIGN,\n    SET_VERTICAL_ALIGN,\n    SET_FILL_COLOR\n} from './../constants';\n\nfunction updateObject(oldObject, newValues) {\n    return Object.assign({}, oldObject, newValues)\n}\n\nfunction updateItemInArray(array, itemId, updateItemCallback) {\n    const updatedItems = array.map(item => {\n        if (item.id !== itemId) {\n            // Since we only want to update one item, preserve all others as they are now\n            return item\n        }\n\n        // Use the provided callback to create an updated item\n        const updatedItem = updateItemCallback(item)\n        return updatedItem\n    })\n\n    return updatedItems\n}\n\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    let updatedItems = [];\n\n    switch (action.type) {\n        case UPDATE_HANDLER_OBJECT_INDEX:\n            return {\n                ...state,\n                handlerObjectIndex: action.index\n            }\n        case UPDATE_EDIT_MODE:\n            return {\n                ...state,\n                editMode: action.mode\n            }\n        case SET_MOUSE_START_POSITION:\n            return {\n                ...state,\n                mouseStartPosition: {x: action.x, y: action.y}\n            }\n        case SELECT_OBJECTS:\n            return {...state, selectedObjectsId: state.selectedObjectsId.concat(action.payload.ids)}\n\n        case DESELECT_ALL_OBJECTS:\n            return {...state, selectedObjectsId: []}\n\n        case DESELECT_ALL_OBJECTS_EXEPT:\n                return {...state, selectedObjectsId: [action.payload]}\n        case MOVE_OBJECT:\n            updatedItems = state.objects.map(item => {\n                if (item.id === action.payload.id) {\n                    return {\n                        ...item,\n                        x: action.payload.x !== null ? action.payload.x : item.x,\n                        y: action.payload.y !== null ? action.payload.y : item.y\n                    }\n                }\n                return item;\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_OBJECT_EDIT_START_POSITION:\n            updatedItems = state.objects.map(object => {\n                if (state.selectedObjectsId.includes(object.id)) {\n                    return {\n                        ...object,\n                        editStartPositionOffset: {\n                            x: action.payload.x - object.x,\n                            y: action.payload.y - object.y\n                        }\n                    }\n                }\n                return object\n            })\n            return {...state, objects: updatedItems}\n\n        case RESIZE_OBJECT:\n            console.log(action.payload);\n            updatedItems = updateItemInArray(state.objects, action.payload.id, object => {\n                return updateObject(object, {\n                    x: action.payload.x !== null ? action.payload.x : object.x,\n                    y: action.payload.y !== null ? action.payload.y : object.y,\n                    width: action.payload.width !== null ? action.payload.width : object.width,\n                    height: action.payload.height !== null ? action.payload.height : object.height\n                })\n            })\n            return updateObject(state, {objects: updatedItems})\n\n        case SET_OBJECT_MODE:\n            updatedItems = state.objects.map(item => {\n                if (item.id === action.payload.id) {\n                    return {...item, mode: action.payload.mode}\n                }\n                return item;\n            })\n            return {...state, objects: updatedItems}\n\n        case SAVE_EDIT_OBJECT_INIT_STATE:\n            let updatedItem = null;\n            state.objects.forEach(item => {\n                if (item.id === action.payload.id) {\n                    updatedItem = item;\n                }\n            })\n            return {...state, editObjectInitState: updatedItem}\n\n        case RESET_OBJECT_MODE:\n            updatedItems = state.objects.map(item => {\n                return {...item, mode: null}\n            })\n            return {...state, objects: updatedItems}\n\n        case ROTATE_OBJECT:\n            updatedItems = updateItemInArray(state.objects, action.payload.id, object => {\n                return updateObject(object, {rotate: action.payload.rotate})\n            })\n            return updateObject(state, {objects: updatedItems})\n\n        case SET_VERTICAL_ALIGN:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    return {\n                        ...item,\n                        textProps: {\n                            ...item.textProps,\n                            verticalAlign: action.payload.value\n                        }\n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_TEXT_ALIGN:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    return {\n                        ...item,\n                        textProps: {\n                            ...item.textProps,\n                            textAlign: action.payload.value\n                        }\n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_FILL_COLOR:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    let color = action.payload.value;\n                    return {\n                        ...item,\n                        fill: color === null ? 'none' : `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`\n                        \n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n        default:\n            return state\n    }\n}","import {\n    SET_RESIZE_DIRECTION\n} from './../constants';\n\n\nconst initialState = {\n    resizeDirection: null\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_RESIZE_DIRECTION:\n            return {\n                ...state,\n                resizeDirection: action.payload.direction\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const setResizeDirection = (direction) => {\n    return dispatch => {\n        dispatch({\n            type: SET_RESIZE_DIRECTION,\n            payload: {\n                direction: direction\n            }\n        })\n    }\n}","export const UPDATE_HANDLER_OBJECT_INDEX = 'svgRender/HANDLER_OBJECT_INDEX';\nexport const UPDATE_EDIT_MODE = 'svgRender/UPDATE_EDIT_MODE';\nexport const SET_MOUSE_START_POSITION = 'svgRender/SET_MOUSE_START_POSITION';\nexport const SELECT_OBJECTS = 'svgRender/SELECT_OBJECTS';\nexport const DESELECT_OBJECTS = 'svgRender/DESELECT_OBJECTS';\nexport const DESELECT_ALL_OBJECTS = 'svgRender/DESELECT_ALL_OBJECTS';\nexport const DESELECT_ALL_OBJECTS_EXEPT = 'svgRender/DESELECT_ALL_OBJECTS_EXEPT';\nexport const MOVE_OBJECT = 'svgRender/MOVE_OBJECT';\nexport const SET_OBJECT_EDIT_START_POSITION = 'svgRender/SET_OBJECT_EDIT_START_POSITION';\nexport const RESIZE_OBJECT = 'svgRender/RESIZE_OBJECT';\nexport const SET_OBJECT_MODE = 'svgRender/SET_OBJECT_MODE';\nexport const SAVE_EDIT_OBJECT_INIT_STATE = 'svgRender/SAVE_EDIT_OBJECT_INIT_STATE';\nexport const RESET_OBJECT_MODE = 'svgRender/RESET_OBJECT_MODE';\nexport const ROTATE_OBJECT = 'svgRender/ROTATE_OBJECT';\nexport const SET_RESIZE_DIRECTION = 'resizeTool/SET_RESIZE_DIRECTION';\nexport const SET_VERTICAL_ALIGN = 'textTool/SET_VERTICAL_ALIGN';\nexport const SET_TEXT_ALIGN = 'textTool/SET_TEXT_ALIGN';\nexport const SET_FILL_COLOR = 'textTool/SET_FILL_COLOR';","import { combineReducers } from 'redux'\nimport svgRender from './svgRender'\nimport resizeTool from './resizeTool'\n\nexport default combineReducers({\n  svgRender, resizeTool\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport createHistory from 'history/createBrowserHistory'\nimport rootReducer from './modules'\n\nexport const history = createHistory()\n\nconst initialState = {\n  svgRender: {\n      editMode: null,\n      mousePosition: {\n          x: null,\n          y: null\n      },\n      mouseStartPosition: {\n          x: null,\n          y: null\n      },\n\n      selectedObjectsId: [],\n\n      handlerObjectIndex: null,\n\n      objects: [\n          {\n              id: 1,\n              width: 163,\n              height: 84,\n              rotate: 0,\n              strokeWidth: 1,\n              fill: \"rgba(0, 123, 255, 1)\",\n              radius: \"0\",\n              type: \"rectangle\",\n              x: 17,\n              y: 15,\n              text: \"Lorem ipsum \\n dolor\",\n              textProps: {\n                  textAlign: 'center',\n                  verticalAlign: 'top'\n\n              }\n          },\n          {\n              id: 2,\n              width: 200,\n              height: 300,\n              rotate: 0,\n              stroke: \"rgba(0, 123, 255, 1)\",\n              strokeWidth: 5,\n              fill: \"rgba(0, 123, 255, 1)\",\n              radius: \"0\",\n              type: \"rectangle\",\n              x: 200,\n              y: 50,\n              text: \"Lorem ipsum \\n dolor\",\n              textProps: {\n                  textAlign: 'right',\n                  verticalAlign: 'bottom'\n\n              }\n          }\n      ],\n      editObjectInitState: null\n  }\n}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n","import {\n    UPDATE_HANDLER_OBJECT_INDEX,\n    UPDATE_EDIT_MODE,\n    SET_MOUSE_START_POSITION,\n    SELECT_OBJECTS,\n    DESELECT_OBJECTS,\n    DESELECT_ALL_OBJECTS,\n    DESELECT_ALL_OBJECTS_EXEPT,\n    MOVE_OBJECT,\n    SET_OBJECT_EDIT_START_POSITION,\n    RESIZE_OBJECT,\n    SET_OBJECT_MODE,\n    SAVE_EDIT_OBJECT_INIT_STATE,\n    RESET_OBJECT_MODE,\n    ROTATE_OBJECT,\n    SET_TEXT_ALIGN,\n    SET_VERTICAL_ALIGN,\n    SET_FILL_COLOR\n} from './../constants';\n\n\nexport const updateHandlerObjectIndex = (index) => {\n    return dispatch => {\n        dispatch({\n            type: UPDATE_HANDLER_OBJECT_INDEX,\n            index: index\n        })\n\n    }\n}\n\nexport const updateEditMode = (mode) => {\n    return dispatch => {\n        dispatch({\n            type: UPDATE_EDIT_MODE,\n            mode: mode\n        })\n\n    }\n}\n\nexport const setMouseStartPosition = (x, y) => {\n    return dispatch => {\n        dispatch({\n            type: SET_MOUSE_START_POSITION,\n            x: x,\n            y: y\n        })\n\n    }\n}\n\nexport const selectObjects = (ids) => {\n    return dispatch => {\n        dispatch({\n            type: SELECT_OBJECTS,\n            payload: {ids}\n        })\n    }\n}\n\nexport const deselectObjects = (ids) => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_OBJECTS,\n            payload: {ids}\n\n        })\n    }\n}\n\n\nexport const deselectAllObjects = () => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_ALL_OBJECTS,\n        })\n    }\n}\n\nexport const deselectAllObjectsExept = (id) => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_ALL_OBJECTS_EXEPT,\n            payload: id\n        })\n    }\n}\n\n\nexport const moveObject = (id, x, y) => {\n    return dispatch => {\n        dispatch({\n            type: MOVE_OBJECT,\n            payload: {\n                id: id,\n                x: x,\n                y: y\n            }\n        })\n    }\n}\n\nexport const setObjectEditStartPosition = (x, y) => {\n    return dispatch => {\n        dispatch({\n            type: SET_OBJECT_EDIT_START_POSITION,\n            payload: {\n                x: x,\n                y: y\n            }\n        })\n    }\n}\n\n\nexport const resizeObject = (props) => {\n    return dispatch => {\n        dispatch({\n            type: RESIZE_OBJECT,\n            payload: props\n        })\n    }\n}\n\nexport const setObjectMode = (id, mode) => {\n    return dispatch => {\n        dispatch({\n            type: SET_OBJECT_MODE,\n            payload: {\n                id: id,\n                mode: mode\n            }\n        })\n    }\n}\n\nexport const saveEditObjectInitState = (id) => {\n    return dispatch => {\n        dispatch({\n            type: SAVE_EDIT_OBJECT_INIT_STATE,\n            payload: {\n                id: id\n            }\n        })\n    }\n}\n\nexport const resetObjectMode = () => {\n    return dispatch => {\n        dispatch({\n            type: RESET_OBJECT_MODE\n        })\n    }\n}\n\nexport const rotateObject = ({id, rotate}) => {\n    return dispatch => {\n        dispatch({\n            type: ROTATE_OBJECT,\n            payload: {id, rotate}\n        })\n    }\n}\n\nexport const setTextAlign = (value) => {\n    console.log(111);\n    return dispatch => {\n        dispatch({\n            type: SET_TEXT_ALIGN,\n            payload: {value}\n        })\n    }\n}\n\nexport const setVerticalAlign = (value) => {\n    return dispatch => {\n        dispatch({\n            type: SET_VERTICAL_ALIGN,\n            payload: {value}\n        })\n    }\n}\n\nexport const setFillColor = (value) => {\n    return dispatch => {\n        dispatch({\n            type: SET_FILL_COLOR,\n            payload: {value}\n        })\n    }\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {\n    updateHandlerObjectIndex,\n    updateEditMode,\n    setMouseStartPosition,\n    selectObjects,\n    deselectAllObjects,\n    setObjectEditStartPosition,\n    deselectAllObjectsExept\n} from '../../src/actions'\n\n\n\nclass Vector extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onMouseUp(e) {\n        let objectMoved = this.props.mouseStartPosition.x !== e.clientX || this.props.mouseStartPosition.y !== e.clientY;\n\n        if (!e.shiftKey && !objectMoved) {\n            this.props.deselectAllObjectsExept(this.props.object.id);\n        }\n    }\n\n\n    onMouseDown(e) {\n        const objectSelected = this.props.selectedObjectsId.includes(this.props.object.id);\n\n        if (!e.shiftKey && !objectSelected) {\n            this.props.deselectAllObjects();\n        }\n        if (!objectSelected) {\n            this.props.selectObjects([this.props.object.id])\n        }\n\n        this.props.setMouseStartPosition(e.clientX, e.clientY)\n        this.props.setObjectEditStartPosition(e.clientX, e.clientY);\n        this.props.updateEditMode('drag')\n    }\n\n    render() {\n        return React.cloneElement(this.props.children, {onMouseUp: this.onMouseUp.bind(this), onMouseDown: this.onMouseDown.bind(this), object: this.props.object, selectedObjectsId: this.props.selectedObjectsId})\n\n    }\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    mouseStartPosition: svgRender.mouseStartPosition\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            updateHandlerObjectIndex,\n            updateEditMode,\n            setMouseStartPosition,\n            selectObjects,\n            deselectAllObjects,\n            setObjectEditStartPosition,\n            deselectAllObjectsExept\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Vector)\n","import React, {Component} from 'react';\n\nclass SelectTool extends Component {\n    render() {\n        return (\n            <g>\n               <rect\n                    strokeWidth=\"1\"\n                    stroke=\"#6298F9\"\n                    fill=\"rgba(98, 152, 249, 0.3)\"\n                    opacity=\"0.3\"\n                    x={this.props.selectToolPosition.x}\n                    y={this.props.selectToolPosition.y}\n                    width={this.props.selectToolSize.width}\n                    height={this.props.selectToolSize.height}\n                /> : ''}\n            </g>\n        );\n    }\n}\n\nexport default SelectTool;\n\n","//TODO fix bug with resize when object rotated\n\nlet progress = null,\n    changeValue = null,\n    returnVal = {};\n\nfunction getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.y - mouseStartPosition.y;\n    changeValue = objectInitState.height + progress;\n    returnVal.y = changeValue > 0 ? objectInitState.y : objectInitState.y - Math.abs(changeValue);\n    returnVal.height = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.y - mouseStartPosition.y;\n    changeValue = objectInitState.height - progress;\n    returnVal.y = changeValue > 0 ? objectInitState.y - (changeValue - objectInitState.height) : objectInitState.y + objectInitState.height;\n    returnVal.height = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.x - mouseStartPosition.x;\n    changeValue = objectInitState.width + progress;\n    returnVal.x = changeValue < 0 ? objectInitState.x + changeValue : objectInitState.x;\n    returnVal.width = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.x - mouseStartPosition.x;\n    changeValue = objectInitState.width - progress;\n    returnVal.x = changeValue > 0 ? objectInitState.x + progress : objectInitState.x + objectInitState.width;\n    returnVal.width = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nexport const getObjectResizeValues = (mouse, direction, objectInitState, mouseStartPosition, object) => {\n    let updatedObject = object;\n\n    switch (direction) {\n        case 's':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'n':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'e':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'w':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'ne':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'se':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'sw':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'nw':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n    }\n\n    return updatedObject;\n}","//TODO make rotate more user friendly\nexport const getObjectRotateValue = ({mouse, mouseStartPosition, object}) => {\n    let angle = Math.atan2(\n        mouseStartPosition.x + (object.width || 0) / 2 - mouse.x,\n        mouseStartPosition.y + (object.height || 0) / 2 - mouse.y\n    );\n\n    let asDegree = angle * 180 / Math.PI;\n\n    return (asDegree - 45) * -1;\n}","export const getTransformMatrix = ({rotate, x, y, width, height}) => {\n    if (rotate) {\n        let centerX = width / 2 + x;\n        let centerY = height / 2 + y;\n        return `rotate(${rotate} ${centerX} ${centerY})`;\n    }\n}\n\nexport const getObjectAttributes = (object) => {\n    return {\n        transform: getTransformMatrix(object)\n    };\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {\n    resizeObject,\n    setMouseStartPosition,\n    updateEditMode,\n    setObjectMode,\n    saveEditObjectInitState\n} from '../../src/actions'\n\nimport {\n    setResizeDirection\n} from '../../src/modules/resizeTool'\n\nimport {getObjectAttributes} from './actions/vector.js';\n\nclass EditModeHelper extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onRotateMouseDown(e) {\n        this.props.setObjectMode(this.props.object.id, 'rotate');\n        this.props.updateEditMode('rotate');\n        this.props.setMouseStartPosition(e.clientX, e.clientY);\n    }\n\n    onDotMouseDown(e){\n        this.props.setObjectMode(this.props.object.id, 'resize');\n        this.props.updateEditMode('resize');\n        this.props.saveEditObjectInitState(this.props.object.id);\n        this.props.setMouseStartPosition(e.clientX, e.clientY);\n        this.props.setResizeDirection(e.target.getAttribute('name'))\n    }\n\n    render() {\n        let self = this;\n\n        let object = this.props.object;\n\n        const helperConfig =\n            {\n                dots: [\n                    {\n                        name: 'nw',\n                        x: object.x,\n                        y: object.y\n                    },\n                    {\n                        name: 'n',\n                        x: object.x + object.width / 2,\n                        y: object.y\n                    },\n                    {\n                        name: 'ne',\n                        x: object.x + object.width,\n                        y: object.y\n                    },\n                    {\n                        name: 'w',\n                        x: object.x,\n                        y: object.y + object.height / 2\n                    },\n                    {\n                        name: 'e',\n                        x: object.x + object.width,\n                        y: object.y + object.height / 2\n                    },\n                    {\n                        name: 'sw',\n                        x: object.x,\n                        y: object.y + object.height\n                    },\n                    {\n                        name: 's',\n                        x: object.x + object.width / 2,\n                        y: object.y + object.height\n                    },\n                    {\n                        name: 'se',\n                        x: object.x + object.width,\n                        y: object.y + object.height\n                    }\n                ]\n            }\n\n            const rotateIcon = {\n                x: object.x + object.width / 2 - 6,\n                y: object.y - 20\n            }\n\n\n        return (\n            <g {...getObjectAttributes(object)}>\n                <rect\n                    width={object.width}\n                    height={object.height}\n                    x={object.x}\n                    y={object.y}\n                    fill=\"none\" stroke=\"#00a8ff\" strokeDasharray=\"3 3\" pointerEvents=\"none\"/>\n\n                {helperConfig.dots.map(function (dot) {\n                    return <circle key={dot.name} name={dot.name} cx={dot.x} cy={dot.y} fill=\"#34B7EF\" r=\"5\" style={{cursor: dot.name + '-resize'}} onMouseDown={self.onDotMouseDown.bind(self)}/>\n                })}\n\n                <path cursor=\"pointer\" onMouseDown={self.onRotateMouseDown.bind(self)} transform={'translate(' + rotateIcon.x + ' ' + rotateIcon.y +')'} stroke=\"rgb(0, 0, 0, 0)\" strokeWidth=\"5\" d=\"M5.1,0.2L4.4,0.8c-0.1,0.1-0.1,0.2,0,0.3l1.1,1.1C4.2,2.1,2.8,2.5,1.7,3.5c-2,1.8-2.1,4.9-0.3,6.8\n                c1.8,2,4.8,2.1,6.8,0.3c0.9-0.8,1.4-1.9,1.5-3.1c0-0.1-0.1-0.3-0.2-0.3l-0.9,0c-0.1,0-0.2,0.1-0.2,0.2C8.3,8.2,7.9,9,7.2,9.6\n                c-1.4,1.3-3.6,1.2-4.8-0.2C1.1,8,1.2,5.8,2.6,4.5c0.9-0.8,2-1.1,3.1-0.8L4.2,5c-0.1,0.1-0.1,0.2,0,0.3L4.8,6c0.1,0.1,0.2,0.1,0.3,0\n                L8,3.4c0.1-0.1,0.1-0.2,0-0.3L5.4,0.2C5.3,0.1,5.2,0.1,5.1,0.2z\"/>\n\n            </g>\n        )\n    }\n}\n//\n// const mapStateToProps = ({ svgRender }) => ({\n//\n// })\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            resizeObject,\n            setMouseStartPosition,\n            updateEditMode,\n            setObjectMode,\n            saveEditObjectInitState,\n            setResizeDirection\n        },\n        dispatch\n    )\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(EditModeHelper)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport EditModeHelper from './EditModeHelper.js';\n\nimport {getObjectAttributes} from './actions/vector.js';\nimport {getTextAttributes, getTextWrapAttributes} from './actions/text.js';\n\nfunction breakLine(text) {\n    console.log(text);\n    var br = React.createElement('br');\n    var regex = /(<br \\/>)/g;\n    return text.split(regex).map(function(line, index) {\n        return line.match(regex) ? <br key={\"key_\" + index} /> : line;\n    });\n}\n\nclass Text extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            height: 0,\n            width: 0\n        }\n    }\n\n    onResize(){\n        const height = this.divElement.clientHeight;\n        const width = this.divElement.clientWidth;\n\n        this.setState({ height, width });\n    }\n\n    componentDidUpdate(prevProps){\n        if (prevProps.object.width !== this.props.object.width || prevProps.object.height !== this.props.object.height) {\n            this.onResize();\n        }\n    }\n\n    componentDidMount(){\n        this.onResize();\n    }\n\n\n    render() {\n        return (\n            <g>\n                <foreignObject\n                    {...getObjectAttributes(this.props.object)}\n                    {...getTextAttributes(this.props.object, this.state)}\n                >\n                    <div {...getTextWrapAttributes(this.props.object)} ref={ (divElement) => this.divElement = divElement}>\n                        <div xmlns=\"http://www.w3.org/1999/xhtml\" style={{ display: 'inline-block' }}>\n                            {this.props.object.text.split(\"\\n\").map((i,key) => {\n                                return <div key={key}>{i}</div>;\n                            })}\n                        </div>\n                    </div>\n                </foreignObject>\n            </g>\n        )\n    }\n}\n\n\n// const mapStateToProps = ({svgRender}) => ({\n//     mouseStartPosition: svgRender.mouseStartPosition\n// })\n//\n// const mapDispatchToProps = dispatch =>\n//     bindActionCreators({\n//             updateHandlerObjectIndex,\n//             updateEditMode,\n//             setMouseStartPosition,\n//             setObjectsSelectState,\n//             deselectAllObjects,\n//             setEditStartPositionOffset,\n//             deselectAllObjectsExept\n//         },\n//         dispatch\n//     )\n\nexport default connect(\n    null,\n    null\n)(Text)\n","export const getTextAttributes = (object, textState) => {\n    let y = 0;\n\n    switch(object.textProps.verticalAlign) {\n        case 'top': y = object.y; break;\n        case 'middle': y = object.y + object.height / 2 - textState.height / 2; break;\n        case 'bottom': y = object.y + object.height - textState.height; break;\n        default: y = object.y + object.height / 2 - textState.height / 2;\n    }\n\n\n    return {\n        width: object.width,\n        height: textState.height,\n        overflow: 'visible',\n        x: object.x,\n        y: y,\n    }\n}\n\n\nexport const getTextWrapAttributes = (object) => {\n    let style = {\n        textAlign: object.textProps.textAlign\n    };\n\n    return {\n        style: style\n    }\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport EditModeHelper from './EditModeHelper.js';\nimport Text from './Text';\n\nimport {getObjectAttributes} from './actions/vector.js';\n\nclass Rectangle extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n        return (\n            <g>\n\n\n                    <rect {...getObjectAttributes(this.props.object)}\n                          width={this.props.object.width}\n                          height={this.props.object.height}\n                          x={this.props.object.x}\n                          y={this.props.object.y}\n                          pointerEvents=\"visible\"\n                          cursor=\"move\"\n                          fill={this.props.object.fill}\n                          strokeWidth={this.props.object.strokeWidth}\n                          stroke={this.props.object.stroke}\n                          onMouseDown={this.props.onMouseDown}\n                          onMouseUp={this.props.onMouseUp}\n                    />\n\n                {this.props.object.text ? <Text object={this.props.object}/> : ''}\n\n\n                {this.props.selectedObjectsId.includes(this.props.object.id) ? <EditModeHelper\n                    object={this.props.object}/> : ''}\n\n            </g>\n        )\n    }\n}\n\n//\n// const mapStateToProps = ({svgRender}) => ({\n//     mouseStartPosition: svgRender.mouseStartPosition\n// })\n//\n// const mapDispatchToProps = dispatch =>\n//     bindActionCreators({\n//             updateHandlerObjectIndex,\n//             updateEditMode,\n//             setMouseStartPosition,\n//             setObjectsSelectState,\n//             deselectAllObjects,\n//             setEditStartPositionOffset,\n//             deselectAllObjectsExept\n//         },\n//         dispatch\n//     )\n\nexport default connect(\n    null,\n    null\n)(Rectangle)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport Vector from './Vector';\nimport SelectTool from './SelectTool';\nimport {getSelectToolSize, getSelectToolPosition, checkRectRectCollision} from './actions/selectTool';\nimport {getObjectResizeValues} from './actions/resizeTool';\nimport {getObjectRotateValue} from './actions/rootateTool.js';\nimport Rectangle from './Rectangle';\nimport Text from './Text';\n\n\nimport {\n    updateEditMode,\n    deselectAllObjects,\n    moveObject,\n    selectObjects,\n    resizeObject,\n    resetObjectMode,\n    rotateObject\n} from '../../src/actions'\n\nclass SvgRender extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectToolActive: false,\n            selectToolStartPoint: {\n                x: null,\n                y: null\n            },\n            mousePosition: {\n                x: null,\n                y: null\n            },\n            svgOffset: {\n                x: null,\n                y: null\n            },\n            selectToolSize: {\n                x: null,\n                y: null\n            },\n            selectToolPosition: {\n                x: null,\n                y: null\n            }\n        }\n    }\n\n    componentDidMount() {\n        const getBoundingClientRect = this.refs.svgRender.getBoundingClientRect();\n\n        this.setState({\n            svgOffset: {\n                x: getBoundingClientRect.x,\n                y: getBoundingClientRect.y\n            }\n        })\n    }\n\n    onMouseMove(e) {\n\n        let self = this;\n\n        if (this.props.editMode === 'drag') {\n            this.props.selectedObjects.forEach(function (object) {\n                self.props.moveObject(object.id, e.clientX - object.editStartPositionOffset.x, e.clientY - object.editStartPositionOffset.y);\n            })\n        }\n\n        else if (this.props.editMode === 'resize') {\n            this.props.selectedObjects.forEach(function (object) {\n                if (object.mode === 'resize') {\n                    let updatedValues = getObjectResizeValues(\n                        {x: e.clientX, y: e.clientY},\n                        self.props.resizeToolDirection,\n                        self.props.editObjectInitState,\n                        self.props.mouseStartPosition,\n                        {x: object.x, y: object.y, width: object.width, height: object.height}\n                    );\n\n                    self.props.resizeObject({\n                            id: object.id,\n                            ...updatedValues\n                        }\n                    );\n                }\n            })\n        }\n\n        else if (this.props.editMode === 'rotate') {\n            this.props.selectedObjects.forEach(function (object) {\n                if (object.mode === 'rotate') {\n\n                    let mouse = {x: e.clientX, y: e.clientY},\n                        mouseStartPosition = self.props.mouseStartPosition;\n\n                    self.props.rotateObject({\n                            id: object.id,\n                            rotate: getObjectRotateValue({mouse, mouseStartPosition, object})\n                        }\n                    );\n                }\n            })\n        }\n\n\n        if (this.props.editMode === 'selectTool') {\n            this.updateSelectToolData({x: e.clientX, y: e.clientY});\n        }\n    }\n\n\n    onMouseUp(e) {\n        if (this.props.editMode === 'selectTool') {\n            this.handleSelectTool();\n        }\n        else if (this.props.editMode === 'resize') {\n            this.props.resetObjectMode();\n        }\n        else if (this.props.editMode === 'rotate') {\n            this.props.resetObjectMode();\n        }\n\n\n        this.props.updateEditMode(null);\n    }\n\n    onMouseDown(e) {\n        if (e.target === e.currentTarget) {\n            this.setSelectStartPosition({x: e.clientX, y: e.clientY});\n            this.updateSelectToolData({x: e.clientX, y: e.clientY});\n            this.props.updateEditMode('selectTool');\n        }\n    }\n\n    setSelectStartPosition(mousePosition) {\n        this.setState({\n            selectToolStartPoint: {\n                x: mousePosition.x - this.state.svgOffset.x,\n                y: mousePosition.y - this.state.svgOffset.y\n            }\n        })\n    }\n\n    handleSelectTool() {\n        let self = this;\n\n        this.resetSelectToolData();\n\n        let selectedObjectIds = [];\n\n        this.props.objects.forEach(function (object) {\n            if (checkRectRectCollision({\n                        x: object.x,\n                        y: object.y,\n                        width: object.width,\n                        height: object.height\n                    },\n                    {\n                        x: self.state.selectToolPosition.x,\n                        y: self.state.selectToolPosition.y,\n                        width: self.state.selectToolSize.width,\n                        height: self.state.selectToolSize.height\n                    })) {\n                selectedObjectIds.push(object.id);\n            }\n        })\n\n        this.props.deselectAllObjects();\n\n        if (selectedObjectIds.length) {\n            console.log(111);\n            this.props.selectObjects(selectedObjectIds)\n        }\n    }\n\n    resetSelectToolData() {\n        this.setState({\n            selectToolStartPoint: {x: null, y: null},\n            selectToolSize: {x: null, y: null}\n        });\n    }\n\n    updateSelectToolData(mousePosition) {\n        if (this.state.selectToolStartPoint.x === null) return;\n\n        const selectToolSize = getSelectToolSize(\n            this.state.selectToolStartPoint,\n            mousePosition,\n            this.state.svgOffset\n        );\n\n        this.setState({\n            selectToolSize: selectToolSize\n        })\n        const selectToolPosition = getSelectToolPosition(\n            this.state.selectToolStartPoint,\n            mousePosition,\n            this.state.svgOffset,\n            selectToolSize\n        );\n        this.setState({\n            selectToolPosition: selectToolPosition\n        })\n    }\n\n    render() {\n        let self = this;\n\n        return (\n            <div className=\"container\">\n                <svg className=\"svgRender\" ref=\"svgRender\" width='800' height='500'\n                     onMouseMove={this.onMouseMove.bind(this)} onMouseUp={this.onMouseUp.bind(this)}\n                     onMouseDown={this.onMouseDown.bind(this)}>\n                    {this.props.objects.map(function (object) {\n                        let vectorType = null;\n                        switch (object.type){\n                            case 'rectangle': {\n                                vectorType = <Rectangle/>;\n                                break;\n                            }\n                            case 'text': {\n                                vectorType = <Text/>;\n                                break;\n                            }\n                        }\n                        return (\n                            <Vector key={object.id} object={object} selectedObjectsId={self.props.selectedObjectsId}>\n                                {vectorType}\n                            </Vector>\n                        )\n                    })}\n\n                    {this.props.editMode === 'selectTool' ? <SelectTool\n                        selectToolPosition={this.state.selectToolPosition}\n                        selectToolSize={this.state.selectToolSize}\n                    /> : ''}\n                </svg>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender, resizeTool}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId,\n    objects: svgRender.objects,\n    editMode: svgRender.editMode,\n    mouseStartPosition: svgRender.mouseStartPosition,\n    editObjectInitState: svgRender.editObjectInitState,\n    resizeToolDirection: resizeTool.resizeDirection\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            updateEditMode,\n            deselectAllObjects,\n            moveObject,\n            selectObjects,\n            resizeObject,\n            resetObjectMode,\n            rotateObject\n        },\n        dispatch\n    )\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SvgRender)\n","//TODO fix select for rotated objects\n\nexport const getSelectToolPosition = (startPoint, mouse, svgOffset, size) => {\n    const x = mouse.x - svgOffset.x > startPoint.x ? startPoint.x : startPoint.x - size.width;\n    const y = mouse.y - svgOffset.y > startPoint.y ? startPoint.y : startPoint.y - size.height;\n\n    return {\n        x: x,\n        y: y\n    }\n}\n\nexport const getSelectToolSize = (startPoint, mouse, svgOffset) => {\n    const width = Math.abs(mouse.x - svgOffset.x - startPoint.x);\n    const height = Math.abs(mouse.y - svgOffset.y - startPoint.y);\n\n    return {\n        width: width,\n        height: height\n    }\n}\n\n\nexport const checkRectRectCollision = (rect1, rect2) => {\n    return rect1.x + rect1.width >= rect2.x &&\n        rect1.x <= rect2.x + rect2.width &&\n        rect1.y + rect1.height >= rect2.y &&\n        rect1.y <= rect2.y + rect2.height;\n}","import React from 'react'\n\nimport styles from './index.css';\n\nconst buttonsConfig = [\n    {\n        value: 'top',\n        label: 'Top',\n    },\n    {\n        value: 'middle',\n        label: 'Middle',\n    },\n    {\n        value: 'bottom',\n        label: 'Bottom',\n    }\n]\n\nclass VerticalAlignPanel extends React.Component {\n    onClick(e) {\n        this.props.setVerticalAlign(e.target.value);\n    }\n\n    render() {\n        let self = this;\n\n        return (\n            <div>\n                Vertical Align\n\n                <div className=\"vertical-align-btn-group\">\n\n                    {\n                        buttonsConfig.map((button) => {\n                            return (\n                                <button\n                                    className={self.props.activeValue === button.value ? 'vertical-align-btn-group__btn vertical-align-btn-group__btn_active' : 'vertical-align-btn-group__btn'}\n                                    key={button.value} value={button.value}\n                                    onClick={self.onClick.bind(this)}>{button.label}</button>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VerticalAlignPanel;\n","import React from 'react'\nimport styles from './index.css';\n\nconst buttonsConfig = [\n    {\n        value: 'left',\n        label: 'Left',\n    },\n    {\n        value: 'center',\n        label: 'Center',\n    },\n    {\n        value: 'right',\n        label: 'Right',\n    }\n]\n\nclass TextAlignPanel extends React.Component {\n    onClick(e) {\n        this.props.setTextAlign(e.target.value);\n    }\n\n    render() {\n        let self = this;\n\n        return (\n            <div>\n                Text Align\n\n                <div className=\"text-align-btn-group\">\n\n                    {\n                        buttonsConfig.map((button) => {\n                            return (\n                                <button\n                                    className={self.props.activeValue === button.value ? 'text-align-btn-group__btn text-align-btn-group__btn_active' : 'text-align-btn-group__btn'}\n                                    key={button.value} value={button.value}\n                                    onClick={self.onClick.bind(this)}>{button.label}</button>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TextAlignPanel;\n","Object.byString = function(o, s) {\n    s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n    s = s.replace(/^\\./, '');           // strip a leading dot\n    var a = s.split('.');\n    for (var i = 0, n = a.length; i < n; ++i) {\n        var k = a[i];\n        if (k in o) {\n            o = o[k];\n        } else {\n            return;\n        }\n    }\n    return o;\n}\n\nexport const getEqualPropertyValueFromSelectedObjects = (objects, key) => {\n    let values = [];\n\n    if (objects.length > 0){\n        objects.forEach((object => {\n            values.push(Object.byString(object, key));\n        }))\n    }\n\n    values.every( (val, i, arr) => val === arr[0] )   // true\n\n    return values.every( (val, i, arr) => val === arr[0]) ? values[0] : false;\n}\n\nexport const isInt = (value) => {\n    return !isNaN(value) &&\n        parseInt(Number(value)) == value &&\n        !isNaN(parseInt(value, 10));\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport VerticalAlignPanel from './VerticalAlignPanel';\nimport TextAlignPanel from './TextAlignPanel';\n\nimport {\n    setTextAlign,\n    setVerticalAlign\n} from './../../../../src/actions'\n\nimport {\n    getEqualPropertyValueFromSelectedObjects,\n} from './../../../containers/actions/utils';\n\n\nclass TextPanel extends React.Component {\n    render() {\n        return (\n            <div>\n                <VerticalAlignPanel setVerticalAlign={this.props.setVerticalAlign.bind(this)} activeValue={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'textProps.verticalAlign')}/>\n                <TextAlignPanel setTextAlign={this.props.setTextAlign.bind(this)} activeValue={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'textProps.textAlign')}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id))\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            setTextAlign,\n            setVerticalAlign\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TextPanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {resizeObject} from './../../actions/index';\nimport {isInt} from './../../containers/actions/utils';\n\nclass SizePanel extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onChange(e) {\n        const value = parseInt(e.target.value);\n        if (!isInt(value)) return;\n        let self = this;\n        const object = self.props.selectedObjects[0];\n\n        self.props.resizeObject({\n                id: object.id,\n                x: null,\n                y: null,\n                width: e.target.name === 'width' ? value : null,\n                height: e.target.name === 'height' ? value : null\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                Size\n                width: <input type=\"text\" pattern=\"[0-9]*\" name=\"width\" disabled={this.props.selectedObjectsId.length !== 1}\n                          value={this.props.selectedObjectsId.length === 1 ? this.props.selectedObjects[0].width : ''}\n                          onChange={this.onChange.bind(this)}/>\n                height: <input type=\"text\" pattern=\"[0-9]*\" name=\"height\" disabled={this.props.selectedObjectsId.length !== 1}\n                          value={this.props.selectedObjectsId.length === 1 ? this.props.selectedObjects[0].height : ''}\n                          onChange={this.onChange.bind(this)}/>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender, resizeTool}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            resizeObject\n        },\n        dispatch\n    )\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SizePanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {moveObject} from './../../actions/index';\nimport {isInt} from './../../containers/actions/utils';\n\nclass PositionPanel extends React.Component {\n    onChange(e) {\n        const value = parseInt(e.target.value);\n\n        if (!isInt(value)) return;\n\n        let self = this;\n        self.props.moveObject(self.props.selectedObjects[0].id, e.target.name === 'x' ? value : null, e.target.name === 'y' ? value : null);\n    }\n\n    render() {\n        return (\n            <div>\n                Position\n                x: <input pattern=\"[0-9]*\" name=\"x\" disabled={this.props.selectedObjectsId.length !== 1}\n                          value={this.props.selectedObjectsId.length === 1 ? this.props.selectedObjects[0].x : ''}\n                          onChange={this.onChange.bind(this)}/>\n                y: <input pattern=\"[0-9]*\" name=\"y\" disabled={this.props.selectedObjectsId.length !== 1}\n                          value={this.props.selectedObjectsId.length === 1 ? this.props.selectedObjects[0].y : ''}\n                          onChange={this.onChange.bind(this)}/>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender, resizeTool}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            moveObject\n        },\n        dispatch\n    )\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PositionPanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {ChromePicker} from 'react-color';\n\nimport styles from './FillPanel.module.scss';\n\nimport {setFillColor} from '../../../actions/index';\n\nimport {\n    getEqualPropertyValueFromSelectedObjects,\n} from '../../actions/utils';\n\n\nclass FillPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayColorPicker: false\n        }\n    }\n\n    handleReset(){\n        this.props.setFillColor(null)\n    }\n\n    handleClickSwatch(){\n        this.setState({\n            displayColorPicker: !this.state.displayColorPicker\n        })\n    }\n\n    handleChangeComplete(color) {\n        this.setState({\n            color: color\n\n        })\n        this.props.setFillColor(color.rgb)\n    }\n\n    render() {\n        const equalColorValue = getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'fill');\n\n        return (\n            <div>\n                Fill\n\n                <div className={styles.swatch} onClick={ this.handleClickSwatch.bind(this)}>\n                    {equalColorValue === 'none' || equalColorValue === false ? <div className={styles.colorNone}/> : <div style={{background: equalColorValue}} className={styles.color}/>}\n                </div>\n\n                <button onClick={this.handleReset.bind(this)}>Reset</button>\n\n                {this.state.displayColorPicker ? <ChromePicker\n                    color={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'fill')}\n                    onChangeComplete={this.handleChangeComplete.bind(this)}\n                /> : null}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            setFillColor\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FillPanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport TextPanel from './TextPanel';\nimport SizePanel from './SizePanel';\nimport PositionPanel from './PositionPanel';\nimport FillPanel from './FillPanel/FillPanel';\n\nclass ToolPanel extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <TextPanel/>\n                <PositionPanel/>\n                <SizePanel/>\n                <FillPanel/>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    null,\n    null\n)(ToolPanel)\n","import React from 'react'\nimport {push} from 'connected-react-router'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport SvgRender from '../SvgRender';\nimport ToolPanel from './../ToolPanel'\n\nclass LayoutBuilder extends React.Component {\n    render() {\n\n        return (\n            <div>\n                <ToolPanel/>\n                <SvgRender/>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            changePage: () => push('/about-us')\n        },\n        dispatch\n    )\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(LayoutBuilder)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport LayoutBuilder from '../layoutBuilder'\n\nconst Home = props => (\n  <div>\n      <LayoutBuilder/>\n  </div>\n)\n\nexport default connect(\n  null,\n    null\n)(Home)\n","import React from 'react'\nimport Home from '../home'\n\nconst App = () => (\n  <div>\n    <main>\n      <Home/>\n    </main>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport App from './containers/app'\n\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\n\nconst target = document.querySelector('#root')\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swatch\":\"FillPanel_swatch__1b5fU\",\"color\":\"FillPanel_color__1YD5H\",\"colorNone\":\"FillPanel_colorNone__2Q_NK\"};"],"sourceRoot":""}