{"version":3,"sources":["containers/ToolPanel/index.module.scss","containers/ToolPanel/colorPicker.module.scss","modules/svgRenderReducer.js","modules/layoutBuilderReducer.js","modules/rootReducer.js","constants/redux.js","store.js","actions/index.js","containers/Figures/Object.js","utils/rootateTool.js","utils/vector.js","containers/ObjectRotateTool/ObjectRotateTool.js","containers/ObjectRotateTool/ObjectRotateToolContainer.js","utils/resizeTool.js","containers/ObjectResizeTool/ObjectResizeTool.js","containers/ObjectResizeTool/ObjectResizeToolContainer.js","containers/Figures/Text.js","utils/text.js","containers/Figures/TextContainer.js","containers/Figures/Rectangle.js","containers/DraggableObject/DraggableObject.js","containers/SvgRender/SvgRender.js","containers/SvgRender/SvgRenderContainer.js","containers/ToolPanel/TextPanel/VerticalAlignPanel.js","containers/ToolPanel/TextPanel/TextAlignPanel.js","utils/helpers.js","containers/ToolPanel/TextPanel/index.js","containers/ToolPanel/SizePanel.js","containers/ToolPanel/PositionPanel.js","containers/ToolPanel/FillPanel/FillPanel.js","containers/ToolPanel/StrokePanel/StrokePanel.js","actions/layoutBuilderActions.js","containers/ToolPanel/Figures/Figures.js","containers/ToolPanel/index.js","containers/NewDraggableObject/NewDraggableObject.js","containers/NewDraggableObject/NewDraggableObjectContainer.js","containers/SelectTool/SelectTool.js","containers/SelectTool/SelectToolContainer.js","utils/selectTool.js","containers/layoutBuilder/index.js","containers/app/index.js","index.js","containers/ToolPanel/Figures/Figures.module.scss"],"names":["module","exports","toolPanel","tool-panel-block","tool-panel-block__name","input-group-item","input-group","swatch","color","colorNone","colorPicker","reset-btn","updateObject","oldObject","newValues","Object","assign","initialState","combineReducers","svgRender","array","itemId","updateItemCallback","state","arguments","length","undefined","action","updatedItems","type","objectSpread","selectedObjectsId","concat","payload","ids","objects","map","object","includes","id","x","y","editStartPositionOffset","width","height","rotate","item","textProps","verticalAlign","value","textAlign","fill","r","g","b","a","stroke","strokeWidth","toConsumableArray","layoutBuilder","mouseStartPosition","newFigureDragData","data","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","createStore","connectRouter","rootReducer","editMode","mousePosition","radius","text","editObjectInitState","updateEditMode","mode","dispatch","setMouseStartPosition","selectObjects","deselectAllObjects","deselectAllObjectsExept","moveObject","setObjectEditStartPosition","resizeObjects","props","rotateObject","_ref","setTextAlign","setVerticalAlign","setFillColor","setStrokeColor","setStrokeWidth","addNewObject","connect","bindActionCreators","React","cloneElement","children","onMouseUp","e","objectMoved","clientX","clientY","shiftKey","onMouseDown","objectSelected","getObjectRotateValue","Math","atan2","PI","getTransformMatrix","centerX","centerY","getObjectAttributes","transform","ObjectRotateTool","rotateIcon","react_default","createElement","cursor","d","ObjectRotateToolContainer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onMouseMove","_this$props","setState","isRotate","document","addEventListener","removeEventListener","containers_ObjectRotateTool_ObjectRotateTool","Component","_len","funcs","Array","_key","reduceRight","acc","func","getObjectResizeValuesSouth","updatedObject","progress","mouse","changeValue","objectInitState","abs","getObjectResizeValuesNorth","getObjectResizeValuesEast","getObjectResizeValuesWest","getObjectResizeValuesNorthEast","getObjectResizeValuesSouthEast","getObjectResizeValueSouthWest","getObjectResizeValuesNorthWest","getObjectResizeValues","direction","ObjectResizeTool","dotsConfig","name","getResizeObjectDotsConfig","strokeDasharray","pointerEvents","dot","key","cx","cy","style","ObjectResizeToolContainer","_this$state","resizeDirection","updatedValues","isResizing","target","getAttribute","render","containers_ObjectResizeTool_ObjectResizeTool","Text","textSize","setRef","textState","overflow","getTextAttributes","getTextWrapAttributes","ref","xmlns","display","split","i","TextContainer","divTextWrapRef","createRef","_this$divTextWrapRef$","current","getBoundingClientRect","prevProps","onResize","Figures_Text","Rectangle","Figures_TextContainer","ObjectResizeTool_ObjectResizeToolContainer","ObjectRotateTool_ObjectRotateToolContainer","FigureDragger","isDrag","selectedObjects","forEach","onChildMouseDown","_this2","Children","child","resizeTool","filter","SvgRender","DraggableObject","vectorType","Figures_Rectangle","Figures_Object","_ref2","containers_SvgRender_SvgRender","buttonsConfig","label","VerticalAlignPanel","self","className","button","activeValue","onClick","bind","TextAlignPanel","byString","o","s","replace","n","k","getEqualPropertyValueFromSelectedObjects","values","push","every","val","arr","generateID","random","toString","substr","isMouseOnElement","node","_node$getBoundingClie","left","right","top","bottom","TextPanel","TextPanel_VerticalAlignPanel","TextPanel_TextAlignPanel","SizePanel","react_numeric_input_default","onChange","PositionPanel","FillPanel","displayColorPicker","rgb","equalColorValue","toolPanelStyle","colorPickerStyle","handleClickSwatch","background","handleReset","react_color_lib","onChangeComplete","handleChangeComplete","onChangeStrokeWidth","setNewFigureDragData","Figures","refName","clientRect","ReactDOM","findDOMNode","refs","figureType","figureOffset","toolPanelFiguresrStyle","handleFigureClick","ToolPanel","styles","ToolPanel_Figures_Figures","ToolPanel_TextPanel","ToolPanel_PositionPanel","ToolPanel_SizePanel","ToolPanel_FillPanel_FillPanel","StrokePanel","NewDraggableObject","objectPosition","dragItemPosition","toolPanelVectorStyle","NewDraggableObjectContainer","svgRenderClientRect","resetData","getOffset","_ReactDOM$findDOMNode","offsetX","offsetY","_this$getOffset","recursiveCloneChildren","childProps","isValidElement","containers_NewDraggableObject_NewDraggableObject","PureComponent","SelectTool","selectToolPosition","selectToolSize","divStyle","position","border","backgroundColor","SelectToolContainer","getSvgOffset","_this$selectToolConta","selectToolContainerRef","updateSelectToolData","endSelect","startSelect","mouseX","mouseY","selectToolActive","selectToolStartPoint","_this$getSvgOffset","setSelectStartPosition","resetSelectToolData","handleSelectTool","selectedObjectIds","rect1","rect2","_this$getSvgOffset2","svgOffset","startPoint","getSelectToolSize","size","getSelectToolPosition","_this$state2","containers_SelectTool_SelectTool","LayoutBuilder","NewDraggableObject_NewDraggableObjectContainer","SelectTool_SelectToolContainer","SvgRender_SvgRenderContainer","containers_ToolPanel","App","querySelector","es","store","app","new-figure","rectangle"],"mappings":"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","file":"static/js/main.1e2d9dd4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolPanel\":\"ToolPanel_toolPanel__1Jn6W\",\"tool-panel-block\":\"ToolPanel_tool-panel-block__19uCp\",\"tool-panel-block__name\":\"ToolPanel_tool-panel-block__name__34ZxT\",\"input-group-item\":\"ToolPanel_input-group-item__1OBU_\",\"input-group\":\"ToolPanel_input-group__3zCxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swatch\":\"colorPicker_swatch__HUpOg\",\"color\":\"colorPicker_color__3caBW\",\"colorNone\":\"colorPicker_colorNone__3YwZs\",\"colorPicker\":\"colorPicker_colorPicker__3l6wo\",\"reset-btn\":\"colorPicker_reset-btn__3NTuq\"};","import {\n    SELECT_OBJECTS,\n    ADD_NEW_OBJECT,\n    DESELECT_ALL_OBJECTS,\n    DESELECT_ALL_OBJECTS_EXEPT,\n    MOVE_OBJECT,\n    SET_OBJECT_EDIT_START_POSITION,\n    RESIZE_OBJECTS,\n    ROTATE_OBJECT,\n    SET_TEXT_ALIGN,\n    SET_VERTICAL_ALIGN,\n    SET_FILL_COLOR,\n    SET_STROKE_COLOR,\n    SET_STROKE_WIDTH\n} from './../constants';\n\nfunction updateObject(oldObject, newValues) {\n    return Object.assign({}, oldObject, newValues)\n}\n\nfunction updateItemInArray(array, itemId, updateItemCallback) {\n    const updatedItems = array.map(item => {\n        if (item.id !== itemId) {\n            // Since we only want to update one item, preserve all others as they are now\n            return item\n        }\n\n        // Use the provided callback to create an updated item\n        const updatedItem = updateItemCallback(item)\n        return updatedItem\n    })\n\n    return updatedItems\n}\n\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    let updatedItems = [];\n\n    switch (action.type) {\n        case SELECT_OBJECTS:\n            return {...state, selectedObjectsId: state.selectedObjectsId.concat(action.payload.ids)}\n\n        case DESELECT_ALL_OBJECTS:\n            return {...state, selectedObjectsId: []}\n\n        case DESELECT_ALL_OBJECTS_EXEPT:\n                return {...state, selectedObjectsId: [action.payload]}\n        case MOVE_OBJECT:\n            updatedItems = state.objects.map(object => {\n                if (action.payload.ids.includes(object.id)) {\n                    return {\n                        ...object,\n                        x: action.payload.x !== null ? action.payload.x : object.x,\n                        y: action.payload.y !== null ? action.payload.y : object.y\n                    }\n                }\n                return object\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_OBJECT_EDIT_START_POSITION:\n            updatedItems = state.objects.map(object => {\n                if (state.selectedObjectsId.includes(object.id)) {\n                    return {\n                        ...object,\n                        editStartPositionOffset: {\n                            x: action.payload.x - object.x,\n                            y: action.payload.y - object.y\n                        }\n                    }\n                }\n                return object\n            })\n            return {...state, objects: updatedItems}\n\n        case RESIZE_OBJECTS:\n            updatedItems = state.objects.map(object => {\n                if (action.payload.ids.includes(object.id)) {\n                    return {\n                        ...object,\n                        x: action.payload.x !== null ? action.payload.x : object.x,\n                        y: action.payload.y !== null ? action.payload.y : object.y,\n                        width: action.payload.width !== null ? action.payload.width : object.width,\n                        height: action.payload.height !== null ? action.payload.height : object.height\n                    }\n                }\n                return object\n            })\n            return {...state, objects: updatedItems}\n\n        case ROTATE_OBJECT:\n            updatedItems = updateItemInArray(state.objects, action.payload.id, object => {\n                return updateObject(object, {rotate: action.payload.rotate})\n            })\n            return updateObject(state, {objects: updatedItems})\n\n        case SET_VERTICAL_ALIGN:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    return {\n                        ...item,\n                        textProps: {\n                            ...item.textProps,\n                            verticalAlign: action.payload.value\n                        }\n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_TEXT_ALIGN:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    return {\n                        ...item,\n                        textProps: {\n                            ...item.textProps,\n                            textAlign: action.payload.value\n                        }\n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_FILL_COLOR:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    let color = action.payload.value;\n                    return {\n                        ...item,\n                        fill: color === null ? 'none' : `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`\n                        \n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_STROKE_COLOR:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    let color = action.payload.value;\n                    return {\n                        ...item,\n                        stroke: color === null ? 'none' : `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`\n\n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_STROKE_WIDTH:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    return {\n                        ...item,\n                        strokeWidth: action.payload.value\n\n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case ADD_NEW_OBJECT:\n            return {...state, objects: [...state.objects, action.payload.object]}\n\n        default:\n            return state\n    }\n}","import {\n    SET_MOUSE_START_POSITION,\n    SET_NEW_FIGURE_DRAG_DATA\n} from './../constants';\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_MOUSE_START_POSITION:\n            return {\n                ...state,\n                mouseStartPosition: {\n                    x: action.x,\n                    y: action.y\n                }\n            }\n\n        case SET_NEW_FIGURE_DRAG_DATA:\n            return {\n                ...state,\n                newFigureDragData: action.data\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport svgRender from './svgRenderReducer'\nimport layoutBuilder from './layoutBuilderReducer'\n\nexport default combineReducers({\n  svgRender, layoutBuilder\n})\n","export const UPDATE_EDIT_MODE = 'svgRender/UPDATE_EDIT_MODE';\nexport const SET_MOUSE_START_POSITION = 'layoutBuilder/SET_MOUSE_START_POSITION';\nexport const SELECT_OBJECTS = 'svgRender/SELECT_OBJECTS';\nexport const DESELECT_ALL_OBJECTS = 'svgRender/DESELECT_ALL_OBJECTS';\nexport const DESELECT_ALL_OBJECTS_EXEPT = 'svgRender/DESELECT_ALL_OBJECTS_EXEPT';\nexport const MOVE_OBJECT = 'svgRender/MOVE_OBJECT';\nexport const SET_OBJECT_EDIT_START_POSITION = 'svgRender/SET_OBJECT_EDIT_START_POSITION';\nexport const RESIZE_OBJECTS = 'svgRender/RESIZE_OBJECTS';\nexport const ROTATE_OBJECT = 'svgRender/ROTATE_OBJECT';\nexport const SET_VERTICAL_ALIGN = 'textTool/SET_VERTICAL_ALIGN';\nexport const SET_TEXT_ALIGN = 'textTool/SET_TEXT_ALIGN';\nexport const SET_FILL_COLOR = 'textTool/SET_FILL_COLOR';\nexport const SET_STROKE_COLOR = 'textTool/SET_STROKE_COLOR';\nexport const SET_STROKE_WIDTH = 'textTool/SET_STROKE_WIDTH';\nexport const SET_NEW_FIGURE_DRAG_DATA = 'laoutBuilder/SET_NEW_FIGURE_DRAG_DATA';\nexport const ADD_NEW_OBJECT = 'svgRender/ADD_NEW_OBJECT';","import {createStore, applyMiddleware, compose} from 'redux'\nimport {connectRouter, routerMiddleware} from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport createHistory from 'history/createBrowserHistory'\nimport rootReducer from './modules/rootReducer'\n\nexport const history = createHistory()\n\nconst initialState = {\n    layoutBuilder: {\n        newFigureDragData: null,\n        mouseStartPosition: {\n            x: null,\n            y: null\n        },\n    },\n    svgRender: {\n        editMode: null,\n        mousePosition: {\n            x: null,\n            y: null\n        },\n\n        selectedObjectsId: [],\n\n        objects: [\n            {\n                id: 1,\n                width: 163,\n                height: 84,\n                rotate: 0,\n                strokeWidth: 3,\n                stroke: 'rgba(135, 38, 86, 1)',\n                fill: \"rgba(0, 123, 255, 1)\",\n                radius: \"0\",\n                type: \"rectangle\",\n                x: 17,\n                y: 15,\n                text: \"Lorem ipsum \\n dolor\",\n                textProps: {\n                    textAlign: 'center',\n                    verticalAlign: 'top'\n\n                }\n            },\n            {\n                id: 2,\n                width: 200,\n                height: 300,\n                rotate: 0,\n                stroke: \"rgba(0, 255, 57, 1)\",\n                strokeWidth: 5,\n                fill: \"rgba(0, 123, 255, 1)\",\n                radius: \"0\",\n                type: \"rectangle\",\n                x: 200,\n                y: 50,\n                text: \"Lorem ipsum \\n dolor\",\n                textProps: {\n                    textAlign: 'right',\n                    verticalAlign: 'bottom'\n\n                }\n            }\n        ],\n        editObjectInitState: null\n    }\n}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n    if (typeof devToolsExtension === 'function') {\n        enhancers.push(devToolsExtension())\n    }\n}\n\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n)\n\nexport default createStore(\n    connectRouter(history)(rootReducer),\n    initialState,\n    composedEnhancers\n)\n","import {\n    UPDATE_EDIT_MODE,\n    SET_MOUSE_START_POSITION,\n    SELECT_OBJECTS,\n    DESELECT_ALL_OBJECTS,\n    DESELECT_ALL_OBJECTS_EXEPT,\n    MOVE_OBJECT,\n    SET_OBJECT_EDIT_START_POSITION,\n    RESIZE_OBJECTS,\n    ROTATE_OBJECT,\n    SET_TEXT_ALIGN,\n    SET_VERTICAL_ALIGN,\n    SET_FILL_COLOR,\n    SET_STROKE_COLOR,\n    SET_STROKE_WIDTH,\n    ADD_NEW_OBJECT\n} from './../constants';\n\n\nexport const updateEditMode = (mode) => {\n    return dispatch => {\n        dispatch({\n            type: UPDATE_EDIT_MODE,\n            mode: mode\n        })\n\n    }\n}\n\nexport const setMouseStartPosition = (x, y) => {\n    return dispatch => {\n        dispatch({\n            type: SET_MOUSE_START_POSITION,\n            x: x,\n            y: y\n        })\n\n    }\n}\n\nexport const selectObjects = (ids) => {\n    return dispatch => {\n        dispatch({\n            type: SELECT_OBJECTS,\n            payload: {ids}\n        })\n    }\n}\n\nexport const deselectAllObjects = () => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_ALL_OBJECTS,\n        })\n    }\n}\n\nexport const deselectAllObjectsExept = (id) => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_ALL_OBJECTS_EXEPT,\n            payload: id\n        })\n    }\n}\n\n\nexport const moveObject = (payload) => {\n    return dispatch => {\n        dispatch({\n            type: MOVE_OBJECT,\n            payload: payload\n        })\n    }\n}\n\nexport const setObjectEditStartPosition = (x, y) => {\n    return dispatch => {\n        dispatch({\n            type: SET_OBJECT_EDIT_START_POSITION,\n            payload: {\n                x: x,\n                y: y\n            }\n        })\n    }\n}\n\n\nexport const resizeObjects = (props) => {\n    return dispatch => {\n        dispatch({\n            type: RESIZE_OBJECTS,\n            payload: props\n        })\n    }\n}\n\nexport const rotateObject = ({id, rotate}) => {\n    return dispatch => {\n        dispatch({\n            type: ROTATE_OBJECT,\n            payload: {id, rotate}\n        })\n    }\n}\n\nexport const setTextAlign = (value) => {\n    return dispatch => {\n        dispatch({\n            type: SET_TEXT_ALIGN,\n            payload: {value}\n        })\n    }\n}\n\nexport const setVerticalAlign = (value) => {\n    return dispatch => {\n        dispatch({\n            type: SET_VERTICAL_ALIGN,\n            payload: {value}\n        })\n    }\n}\n\nexport const setFillColor = (value) => {\n    return dispatch => {\n        dispatch({\n            type: SET_FILL_COLOR,\n            payload: {value}\n        })\n    }\n}\n\nexport const setStrokeColor = (value) => {\n    return dispatch => {\n        dispatch({\n            type: SET_STROKE_COLOR,\n            payload: {value}\n        })\n    }\n}\n\nexport const setStrokeWidth = (value) => {\n    return dispatch => {\n        dispatch({\n            type: SET_STROKE_WIDTH,\n            payload: {value}\n        })\n    }\n}\n\nexport const addNewObject = (object) => {\n    return dispatch => {\n        dispatch({\n            type: ADD_NEW_OBJECT,\n            payload: {\n                object: object\n            }\n        })\n    }\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {\n    updateEditMode,\n    setMouseStartPosition,\n    selectObjects,\n    deselectAllObjects,\n    setObjectEditStartPosition,\n    deselectAllObjectsExept\n} from '../../actions/index'\n\nconst Vector = (props) => {\n\n    const onMouseUp = (e) => {\n        const {object, mouseStartPosition, deselectAllObjectsExept} = props;\n        let objectMoved = mouseStartPosition.x !== e.clientX || mouseStartPosition.y !== e.clientY;\n\n        if (!e.shiftKey && !objectMoved) {\n            deselectAllObjectsExept(object.id);\n        }\n    }\n\n    const onMouseDown = (e) => {\n\n        const {object, selectObjects, selectedObjectsId, deselectAllObjects, setMouseStartPosition, setObjectEditStartPosition, updateEditMode} = props;\n        const objectSelected = selectedObjectsId.includes(object.id);\n\n        if (!e.shiftKey && !objectSelected) {\n            deselectAllObjects();\n        }\n        if (!objectSelected) {\n            selectObjects([object.id])\n        }\n\n        //TODO move setObjectEditStartPosition to DraggableObject\n        setObjectEditStartPosition(e.clientX, e.clientY);\n        props.onMouseDown(e);\n    }\n    return React.cloneElement(props.children, {onMouseUp: onMouseUp, onMouseDown: onMouseDown, object: props.object, selectedObjectsId: props.selectedObjectsId})\n}\n\nconst mapStateToProps = ({layoutBuilder}) => ({\n    mouseStartPosition: layoutBuilder.mouseStartPosition\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            updateEditMode,\n            setMouseStartPosition,\n            selectObjects,\n            deselectAllObjects,\n            setObjectEditStartPosition,\n            deselectAllObjectsExept\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Vector)","//TODO make rotate more user friendly\nexport const getObjectRotateValue = ({mousePosition, mouseStartPosition, object}) => {\n    let angle = Math.atan2(\n        mouseStartPosition.x + (object.width || 0) / 2 - mousePosition.x,\n        mouseStartPosition.y + (object.height || 0) / 2 - mousePosition.y\n    );\n\n    let asDegree = angle * 180 / Math.PI;\n\n    return (asDegree - 45) * -1;\n}","export const getTransformMatrix = ({rotate, x, y, width, height}) => {\n    if (rotate) {\n        let centerX = width / 2 + x;\n        let centerY = height / 2 + y;\n        return `rotate(${rotate} ${centerX} ${centerY})`;\n    }\n}\n\nexport const getObjectAttributes = (object) => {\n    return {\n        transform: getTransformMatrix(object)\n    };\n}","import React from 'react'\nimport {getObjectAttributes} from '../../utils/vector.js';\n\nconst ObjectRotateTool = ({object, onMouseDown}) => {\n    const rotateIcon = {\n        x: object.x + object.width / 2 - 6,\n        y: object.y - 20\n    }\n\n    return (\n        <g {...getObjectAttributes(object)}>\n            <path cursor=\"pointer\" onMouseDown={onMouseDown}\n                  transform={'translate(' + rotateIcon.x + ' ' + rotateIcon.y + ')'} stroke=\"rgb(0, 0, 0, 0)\"\n                  strokeWidth=\"5\" d=\"M5.1,0.2L4.4,0.8c-0.1,0.1-0.1,0.2,0,0.3l1.1,1.1C4.2,2.1,2.8,2.5,1.7,3.5c-2,1.8-2.1,4.9-0.3,6.8\n                c1.8,2,4.8,2.1,6.8,0.3c0.9-0.8,1.4-1.9,1.5-3.1c0-0.1-0.1-0.3-0.2-0.3l-0.9,0c-0.1,0-0.2,0.1-0.2,0.2C8.3,8.2,7.9,9,7.2,9.6\n                c-1.4,1.3-3.6,1.2-4.8-0.2C1.1,8,1.2,5.8,2.6,4.5c0.9-0.8,2-1.1,3.1-0.8L4.2,5c-0.1,0.1-0.1,0.2,0,0.3L4.8,6c0.1,0.1,0.2,0.1,0.3,0\n                L8,3.4c0.1-0.1,0.1-0.2,0-0.3L5.4,0.2C5.3,0.1,5.2,0.1,5.1,0.2z\"/>\n        </g>\n    )\n}\n\nexport default ObjectRotateTool\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {getObjectRotateValue} from '../../utils/rootateTool.js';\nimport ObjectRotateTool from './ObjectRotateTool';\n\nimport {\n    rotateObject,\n} from '../../actions/index'\n\n\nclass ObjectRotateToolContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isRotate: false,\n            mouseStartPosition: {\n                x: null,\n                y: null\n            }\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.state.isRotate) {\n            document.addEventListener('mousemove', this.onMouseMove)\n            document.addEventListener('mouseup', this.onMouseUp)\n        }\n        else {\n            document.removeEventListener('mousemove', this.onMouseMove)\n            document.removeEventListener('mouseup', this.onMouseUp)\n        }\n    }\n\n    onMouseMove = (e) => {\n        const {object, rotateObject} = this.props;\n        const {mouseStartPosition} = this.state;\n        const mousePosition = {x: e.clientX, y: e.clientY};\n\n        rotateObject({\n                id: object.id,\n                rotate: getObjectRotateValue({mousePosition, mouseStartPosition, object})\n            }\n        );\n    }\n\n    onMouseUp = () => {\n        this.setState({\n            isRotate: false,\n            mouseStartPosition: {\n                x: null,\n                y: null\n            }\n        })\n    }\n\n    onMouseDown = (e) => {\n        this.setState({\n            isRotate: true,\n            mouseStartPosition: {\n                x: e.clientX,\n                y: e.clientY\n            }\n        })\n    }\n\n    render() {\n        const {object} = this.props;\n        return <ObjectRotateTool object={object} onMouseDown={this.onMouseDown}/>\n    }\n}\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            rotateObject\n        },\n        dispatch\n    )\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(ObjectRotateToolContainer)","//TODO fix bug with resize when object rotated\n\nconst compose = (...funcs) => value =>\n    funcs.reduceRight((acc, func) => func(acc), value)\n\nconst getObjectResizeValuesSouth = (props) => {\n    let updatedObject = {...props.object};\n    let progress = props.mouse.y - props.mouseStartPosition.y;\n    let changeValue = props.objectInitState.height + progress;\n    updatedObject.y = changeValue > 0 ? props.objectInitState.y : props.objectInitState.y - Math.abs(changeValue);\n    updatedObject.height = Math.abs(changeValue);\n\n    return {...props, object: updatedObject};\n}\n\nconst getObjectResizeValuesNorth = (props) => {\n    let updatedObject = {...props.object};\n    let progress = props.mouse.y - props.mouseStartPosition.y;\n    let changeValue = props.objectInitState.height - progress;\n    updatedObject.y = changeValue > 0 ? props.objectInitState.y - (changeValue - props.objectInitState.height) : props.objectInitState.y + props.objectInitState.height;\n    updatedObject.height = Math.abs(changeValue);\n\n    return {...props, object: updatedObject};\n}\n\nconst getObjectResizeValuesEast = (props) => {\n    let updatedObject = {...props.object};\n\n    let progress = props.mouse.x - props.mouseStartPosition.x;\n    let changeValue = props.objectInitState.width + progress;\n    updatedObject.x = changeValue < 0 ? props.objectInitState.x + changeValue : props.objectInitState.x;\n    updatedObject.width = Math.abs(changeValue);\n\n    return {...props, object: updatedObject};\n}\n\nconst getObjectResizeValuesWest = (props) => {\n    let updatedObject = {...props.object};\n\n    let progress = props.mouse.x - props.mouseStartPosition.x;\n    let changeValue = props.objectInitState.width - progress;\n    updatedObject.x = changeValue > 0 ? props.objectInitState.x + progress : props.objectInitState.x + props.objectInitState.width;\n    updatedObject.width = Math.abs(changeValue);\n\n    return {...props, object: updatedObject};\n}\n\nconst getObjectResizeValuesNorthEast = compose(getObjectResizeValuesNorth, getObjectResizeValuesEast);\nconst getObjectResizeValuesSouthEast = compose(getObjectResizeValuesSouth, getObjectResizeValuesEast);\nconst getObjectResizeValueSouthWest = compose(getObjectResizeValuesSouth, getObjectResizeValuesWest);\nconst getObjectResizeValuesNorthWest = compose(getObjectResizeValuesNorth, getObjectResizeValuesWest);\n\nexport const getObjectResizeValues = (mouse, direction, objectInitState, mouseStartPosition, object) => {\n    let updatedObject = {...object};\n\n    switch (direction) {\n        case 's':\n            updatedObject = getObjectResizeValuesSouth({mouse, objectInitState, mouseStartPosition, object}).object;\n            break;\n        case 'n':\n            updatedObject = getObjectResizeValuesNorth({mouse, objectInitState, mouseStartPosition, object}).object;\n            break;\n        case 'e':\n            updatedObject = getObjectResizeValuesEast({mouse, objectInitState, mouseStartPosition, object}).object;\n            break;\n        case 'w':\n            updatedObject = getObjectResizeValuesWest({mouse, objectInitState, mouseStartPosition, object}).object;\n            break;\n        case 'ne':\n            updatedObject = getObjectResizeValuesNorthEast({mouse, objectInitState, mouseStartPosition, object}).object;\n            break;\n        case 'se':\n            updatedObject = getObjectResizeValuesSouthEast({mouse, objectInitState, mouseStartPosition, object}).object;\n            break;\n        case 'sw':\n            updatedObject = getObjectResizeValueSouthWest({mouse, objectInitState, mouseStartPosition, object}).object;\n            break;\n        case 'nw':\n            updatedObject = getObjectResizeValuesNorthWest({mouse, objectInitState, mouseStartPosition, object}).object;\n            break;\n        default:\n            break;\n    }\n\n    return updatedObject;\n}\n\nexport const getResizeObjectDotsConfig = (object) => {\n    return [\n        {\n            name: 'nw',\n            x: object.x,\n            y: object.y\n        },\n        {\n            name: 'n',\n            x: object.x + object.width / 2,\n            y: object.y\n        },\n        {\n            name: 'ne',\n            x: object.x + object.width,\n            y: object.y\n        },\n        {\n            name: 'w',\n            x: object.x,\n            y: object.y + object.height / 2\n        },\n        {\n            name: 'e',\n            x: object.x + object.width,\n            y: object.y + object.height / 2\n        },\n        {\n            name: 'sw',\n            x: object.x,\n            y: object.y + object.height\n        },\n        {\n            name: 's',\n            x: object.x + object.width / 2,\n            y: object.y + object.height\n        },\n        {\n            name: 'se',\n            x: object.x + object.width,\n            y: object.y + object.height\n        }\n    ]\n}","import React from 'react'\nimport {getResizeObjectDotsConfig} from \"../../utils/resizeTool\";\nimport {getObjectAttributes} from \"../../utils/vector\";\n\nconst ObjectResizeTool = ({object, onMouseDown}) => {\n    const dotsConfig = getResizeObjectDotsConfig(object);\n\n    return (\n        <g {...getObjectAttributes(object)}>\n            <rect\n                width={object.width}\n                height={object.height}\n                x={object.x}\n                y={object.y}\n                fill=\"none\" stroke=\"#00a8ff\" strokeDasharray=\"3 3\" pointerEvents=\"none\"/>\n\n            {dotsConfig.map(function (dot) {\n                return <circle key={dot.name} name={dot.name} cx={dot.x} cy={dot.y} fill=\"#34B7EF\" r=\"5\"\n                               style={{cursor: dot.name + '-resize'}} onMouseDown={onMouseDown}/>\n            })}\n        </g>\n    )\n}\n\nexport default ObjectResizeTool;","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {getObjectResizeValues} from '../../utils/resizeTool';\nimport ObjectResizeTool from './ObjectResizeTool';\n\nimport {\n    resizeObjects\n} from '../../actions/index'\n\nclass ObjectResizeToolContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isResizing: false,\n            mouseStartPosition: {\n                x: null,\n                y: null\n            },\n            resizeDirection: null,\n            objectInitState: null\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.state.isResizing) {\n            document.addEventListener('mousemove', this.onMouseMove)\n            document.addEventListener('mouseup', this.onMouseUp)\n        }\n        else {\n            document.removeEventListener('mousemove', this.onMouseMove)\n            document.removeEventListener('mouseup', this.onMouseUp)\n        }\n    }\n\n    onMouseMove = (e) => {\n        const {object, resizeObjects} = this.props;\n        const {mouseStartPosition, resizeDirection, objectInitState} = this.state;\n        const mousePosition = {x: e.clientX, y: e.clientY};\n        const updatedValues = getObjectResizeValues(\n            mousePosition,\n            resizeDirection,\n            objectInitState,\n            mouseStartPosition,\n            {x: object.x, y: object.y, width: object.width, height: object.height}\n        );\n        resizeObjects({\n                ids: [object.id],\n                ...updatedValues\n            }\n        );\n    }\n\n    onMouseUp = () =>{\n        this.setState({\n            isResizing: false,\n            mouseStartPosition: {\n                x: null,\n                y: null\n            }\n        })\n    }\n\n    onMouseDown = (e) => {\n        const {object} = this.props;\n\n        this.setState({\n            isResizing: true,\n            objectInitState: {...object},\n            resizeDirection: e.target.getAttribute('name'),\n            mouseStartPosition: {\n                x: e.clientX,\n                y: e.clientY\n            }\n        })\n    }\n\n    render = () => <ObjectResizeTool object={this.props.object} onMouseDown={this.onMouseDown}/>\n}\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            resizeObjects\n        },\n        dispatch\n    )\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(ObjectResizeToolContainer)\n","import React from 'react'\nimport {getObjectAttributes} from '../../utils/vector.js';\nimport {getTextAttributes, getTextWrapAttributes} from '../../utils/text.js';\n\nconst Text = ({object, textSize, setRef}) => {\n    return (\n        <g>\n            <foreignObject\n                pointerEvents=\"none\"\n                {...getObjectAttributes(object)}\n                {...getTextAttributes(object, textSize)}\n            >\n                <div {...getTextWrapAttributes(object)} ref={setRef}>\n                    <div xmlns=\"http://www.w3.org/1999/xhtml\" style={{display: 'inline-block'}}>\n                        {object.text.split(\"\\n\").map((i, key) => {\n                            return <div key={key}>{i}</div>;\n                        })}\n                    </div>\n                </div>\n            </foreignObject>\n        </g>\n    )\n}\n\nexport default Text","export const getTextAttributes = (object, textState) => {\n    let y = 0;\n\n    switch(object.textProps.verticalAlign) {\n        case 'top': y = object.y; break;\n        case 'middle': y = object.y + object.height / 2 - textState.height / 2; break;\n        case 'bottom': y = object.y + object.height - textState.height; break;\n        default: y = object.y + object.height / 2 - textState.height / 2;\n    }\n\n\n    return {\n        width: object.width,\n        height: textState.height,\n        overflow: 'visible',\n        x: object.x,\n        y: y,\n    }\n}\n\n\nexport const getTextWrapAttributes = (object) => {\n    let style = {\n        textAlign: object.textProps.textAlign\n    };\n\n    return {\n        style: style\n    }\n}","import React from 'react'\nimport Text from \"./Text\";\n\nclass TextContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.divTextWrapRef = React.createRef();\n\n        this.state = {\n            height: 0,\n            width: 0\n        }\n    }\n\n    onResize() {\n        const {height, width} = this.divTextWrapRef.current.getBoundingClientRect();\n        this.setState({height, width});\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.object.width !== this.props.object.width || prevProps.object.height !== this.props.object.height) {\n            this.onResize();\n        }\n    }\n\n    componentDidMount() {\n        this.onResize();\n    }\n\n    render() {\n        const {object} = this.props;\n\n        return (\n            <Text object={object} textSize={this.state} setRef={this.divTextWrapRef}/>\n        )\n    }\n}\n\nexport default TextContainer","import React from 'react'\nimport ObjectRotateTool from '../ObjectRotateTool/ObjectRotateToolContainer.js';\nimport ObjectResizeTool from '../ObjectResizeTool/ObjectResizeToolContainer.js';\nimport Text from './TextContainer';\nimport {getObjectAttributes} from '../../utils/vector.js';\n\nconst Rectangle = ({object, onMouseDown, onMouseUp, selectedObjectsId}) => {\n    return (\n        <g>\n            <rect {...getObjectAttributes(object)}\n                  width={object.width}\n                  height={object.height}\n                  x={object.x}\n                  y={object.y}\n                  pointerEvents=\"visible\"\n                  cursor=\"move\"\n                  fill={object.fill}\n                  strokeWidth={object.strokeWidth}\n                  stroke={object.stroke}\n                  onMouseDown={onMouseDown}\n                  onMouseUp={onMouseUp}\n            />\n\n            {object.text ? <Text object={object}/> : ''}\n\n            {selectedObjectsId.includes(object.id) ? <g><ObjectResizeTool object={object}/> <ObjectRotateTool object={object}/></g> : null}\n\n        </g>\n    )\n}\n\nexport default Rectangle","import React from 'react'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\n\nimport {\n    moveObject\n} from '../../actions/index'\n\nclass FigureDragger extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isDrag: false,\n            mouseStartPosition: {\n                x: null,\n                y: null\n            }\n        }\n    }\n\n    componentDidUpdate(){\n        if (this.state.isDrag) {\n            document.addEventListener('mousemove', this.onMouseMove)\n            document.addEventListener('mouseup', this.onMouseUp)\n        }\n        else {\n            document.removeEventListener('mousemove', this.onMouseMove)\n            document.removeEventListener('mouseup', this.onMouseUp)\n        }\n    }\n\n    onMouseMove = (e) => {\n        let {isDrag} = this.state;\n        let {selectedObjects, moveObject} = this.props;\n        if (!isDrag) return;\n\n        //TODO prevent move objects out of SVG render\n        selectedObjects.forEach(function (object) {\n            moveObject({\n                ids: [object.id],\n                x: e.clientX - object.editStartPositionOffset.x,\n                y: e.clientY - object.editStartPositionOffset.y\n            });\n        })\n    }\n\n    onMouseUp = (e) => {\n        this.setState({\n            isDrag: false\n        })\n    }\n\n    onChildMouseDown = (e) => {\n        this.setState({\n            isDrag: true,\n            mouseStartPosition: {\n                x: e.clientX,\n                y: e.clientY\n            }\n        })\n    }\n\n    render() {\n        return React.Children.map(this.props.children, child => {\n                    return React.cloneElement(child, {onMouseDown: this.onChildMouseDown })\n                })\n    }\n}\n\nconst mapStateToProps = ({svgRender, resizeTool, layoutBuilder}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            moveObject\n        },\n        dispatch\n    )\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FigureDragger)\n","import React from 'react'\nimport Object from '../Figures/Object';\nimport Rectangle from '../Figures/Rectangle';\nimport Text from '../Figures/Text';\nimport DraggableObject from '../DraggableObject/DraggableObject';\n\nconst SvgRender = ({children, onMouseMove, onMouseUp, onMouseDown, objects, selectedObjectsId}) => {\n    return (\n        <svg id=\"svg-render\" width='800' height='500'\n             onMouseMove={onMouseMove}\n             onMouseUp={onMouseUp}\n             onMouseDown={onMouseDown}>\n\n            <DraggableObject>\n                {objects.map(function (object) {\n                    let vectorType = null;\n                    switch (object.type) {\n                        case 'rectangle': {\n                            vectorType = <Rectangle/>;\n                            break;\n                        }\n                        case 'text': {\n                            vectorType = <Text/>;\n                            break;\n                        }\n                        default: {\n                            break;\n                        }\n                    }\n                    return (\n                        <Object key={object.id} object={object} selectedObjectsId={selectedObjectsId}>\n                            {vectorType}\n                        </Object>\n                    )\n                })}\n            </DraggableObject>\n        </svg>\n    )\n}\n\nexport default SvgRender\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport SvgRender from './SvgRender';\n\nconst SvgRenderContainer = ({selectedObjectsId, objects}) => {\n    return <SvgRender\n                selectedObjectsId={selectedObjectsId}\n                objects={objects}\n            />\n}\n\nconst mapStateToProps = ({svgRender, resizeTool, layoutBuilder}) => ({\n    selectedObjectsId: svgRender.selectedObjectsId,\n    objects: svgRender.objects,\n})\n\nexport default connect(\n    mapStateToProps,\n    null\n)(SvgRenderContainer)","import React from 'react'\n\nconst buttonsConfig = [\n    {\n        value: 'top',\n        label: 'Top',\n    },\n    {\n        value: 'middle',\n        label: 'Middle',\n    },\n    {\n        value: 'bottom',\n        label: 'Bottom',\n    }\n]\n\nclass VerticalAlignPanel extends React.Component {\n    onClick(e) {\n        this.props.setVerticalAlign(e.target.value);\n    }\n\n    render() {\n        let self = this;\n\n        return (\n            <div>\n                Vertical Align\n\n                <div className=\"vertical-align-btn-group\">\n\n                    {\n                        buttonsConfig.map((button) => {\n                            return (\n                                <button\n                                    className={self.props.activeValue === button.value ? 'vertical-align-btn-group__btn vertical-align-btn-group__btn_active' : 'vertical-align-btn-group__btn'}\n                                    key={button.value} value={button.value}\n                                    onClick={self.onClick.bind(this)}>{button.label}</button>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VerticalAlignPanel;\n","import React from 'react'\n\nconst buttonsConfig = [\n    {\n        value: 'left',\n        label: 'Left',\n    },\n    {\n        value: 'center',\n        label: 'Center',\n    },\n    {\n        value: 'right',\n        label: 'Right',\n    }\n]\n\nclass TextAlignPanel extends React.Component {\n    onClick(e) {\n        this.props.setTextAlign(e.target.value);\n    }\n\n    render() {\n        let self = this;\n\n        return (\n            <div>\n                Text Align\n\n                <div className=\"text-align-btn-group\">\n\n                    {\n                        buttonsConfig.map((button) => {\n                            return (\n                                <button\n                                    className={self.props.activeValue === button.value ? 'text-align-btn-group__btn text-align-btn-group__btn_active' : 'text-align-btn-group__btn'}\n                                    key={button.value} value={button.value}\n                                    onClick={self.onClick.bind(this)}>{button.label}</button>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TextAlignPanel;\n","Object.byString = function(o, s) {\n    s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n    s = s.replace(/^\\./, '');           // strip a leading dot\n    var a = s.split('.');\n    for (var i = 0, n = a.length; i < n; ++i) {\n        var k = a[i];\n        if (k in o) {\n            o = o[k];\n        } else {\n            return;\n        }\n    }\n    return o;\n}\n\nexport const getEqualPropertyValueFromSelectedObjects = (objects, key) => {\n    let values = [];\n\n    if (objects.length > 0){\n        objects.forEach((object => {\n            values.push(Object.byString(object, key));\n        }))\n    }\n\n    values.every( (val, i, arr) => val === arr[0] )   // true\n\n    return values.every( (val, i, arr) => val === arr[0]) ? values[0] : false;\n}\n\nexport const isInt = (value) => {\n    return !isNaN(value) &&\n        parseInt(Number(value)) === value &&\n        !isNaN(parseInt(value, 10));\n}\n\nexport const generateID = () => {\n    return '_' + Math.random().toString(36).substr(2, 9);\n}\n\nexport const isMouseOnElement = (node, mousePosition) => {\n    const {left, right, top, bottom} = node.getBoundingClientRect();\n    return (mousePosition.x > left && mousePosition.x < right) && (mousePosition.y > top && mousePosition.y < bottom)\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport VerticalAlignPanel from './VerticalAlignPanel';\nimport TextAlignPanel from './TextAlignPanel';\n\nimport {\n    setTextAlign,\n    setVerticalAlign\n} from './../../../../src/actions'\n\nimport {\n    getEqualPropertyValueFromSelectedObjects,\n} from '../../../utils/helpers';\n\n\nclass TextPanel extends React.Component {\n    render() {\n        return (\n            <div>\n                <VerticalAlignPanel setVerticalAlign={this.props.setVerticalAlign.bind(this)} activeValue={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'textProps.verticalAlign')}/>\n                <TextAlignPanel setTextAlign={this.props.setTextAlign.bind(this)} activeValue={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'textProps.textAlign')}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id))\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            setTextAlign,\n            setVerticalAlign\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TextPanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport NumericInput from 'react-numeric-input';\n\nimport {resizeObjects} from './../../actions/index';\n\nimport style from './index.module.scss';\n\nimport {\n    getEqualPropertyValueFromSelectedObjects,\n} from '../../utils/helpers';\n\n\nclass SizePanel extends React.Component {\n    onChange(name, value) {\n        let self = this;\n\n        self.props.resizeObjects({\n                ids: this.props.selectedObjectsId,\n                x: null,\n                y: null,\n                width: name === 'width' ? value : null,\n                height: name === 'height' ? value : null\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div className={`${style['tool-panel-block']} ${style['tool-panel-block-size']}`}>\n                <div className={style['tool-panel-block__name']}>\n                    Size\n                </div>\n                <div className={style['input-group']}>\n                    <div className={style['input-group-item']}>\n                        <NumericInput\n                            value={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'width')}\n                            name=\"width\"\n                            onChange={this.onChange.bind(this, 'width')}/>\n                        Width\n\n                    </div>\n\n                    <div className={style['input-group-item']}>\n                        <NumericInput\n                            value={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'height')}\n                            name=\"height\"\n                            onChange={this.onChange.bind(this, 'height')}/>\n                        Height\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender, resizeTool}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            resizeObjects\n        },\n        dispatch\n    )\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SizePanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport NumericInput from 'react-numeric-input';\n\nimport {moveObject} from './../../actions/index';\n\nimport style from './index.module.scss';\n\nimport {\n    getEqualPropertyValueFromSelectedObjects,\n} from '../../utils/helpers';\n\nclass PositionPanel extends React.Component {\n    onChange(name, value) {\n        let self = this;\n\n        self.props.moveObject({\n                ids: this.props.selectedObjectsId,\n                x: name === 'x' ? value : null,\n                y: name === 'y' ? value : null\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div className={`${style['tool-panel-block']} ${style['tool-panel-block-position']}`}>\n                <div className={style['tool-panel-block__name']}>\n                    Position\n                </div>\n                <div className={style['input-group']}>\n                    <div className={style['input-group-item']}>\n                        <NumericInput\n                            value={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'x')}\n                            name=\"x\"\n                            onChange={this.onChange.bind(this, 'x')}/>\n                        Left\n\n                    </div>\n\n                    <div className={style['input-group-item']}>\n                        <NumericInput\n                            value={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'y')}\n                            name=\"y\"\n                            onChange={this.onChange.bind(this, 'y')}/>\n                        Top\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender, resizeTool}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            moveObject\n        },\n        dispatch\n    )\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PositionPanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {ChromePicker} from 'react-color';\n\nimport colorPickerStyle from './../colorPicker.module.scss';\nimport toolPanelStyle from './../index.module.scss';\n\nimport {setFillColor} from '../../../actions/index';\n\nimport {\n    getEqualPropertyValueFromSelectedObjects,\n} from '../../../utils/helpers';\n\n\nclass FillPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayColorPicker: false\n        }\n    }\n\n    handleReset() {\n        this.props.setFillColor(null)\n    }\n\n    handleClickSwatch() {\n        this.setState({\n            displayColorPicker: !this.state.displayColorPicker\n        })\n    }\n\n    handleChangeComplete(color) {\n        this.setState({\n            color: color\n\n        })\n        this.props.setFillColor(color.rgb)\n    }\n\n    render() {\n        const equalColorValue = getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'fill');\n\n        return (\n            <div className={`${toolPanelStyle['tool-panel-block']} ${toolPanelStyle['tool-panel-block-fill']}`}>\n                <div className={toolPanelStyle['tool-panel-block__name']}>\n                    Fill\n                </div>\n\n                <div>\n                    <div className={colorPickerStyle.swatch} onClick={this.handleClickSwatch.bind(this)}>\n                        {equalColorValue === 'none' || equalColorValue === false ?\n                            <div className={colorPickerStyle.colorNone}/> :\n                            <div style={{background: equalColorValue}} className={colorPickerStyle.color}/>}\n                    </div>\n\n                    <button className={colorPickerStyle['reset-btn']} onClick={this.handleReset.bind(this)}>Reset</button>\n\n                    {this.state.displayColorPicker ? <ChromePicker\n                        className={colorPickerStyle.colorPicker}\n                        color={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'fill')}\n                        onChangeComplete={this.handleChangeComplete.bind(this)}\n                    /> : null}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            setFillColor\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FillPanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {ChromePicker} from 'react-color';\n\nimport colorPickerStyle from './../colorPicker.module.scss';\nimport toolPanelStyle from './../index.module.scss';\n\nimport {setStrokeColor, setStrokeWidth} from '../../../actions/index';\nimport NumericInput from 'react-numeric-input';\n\nimport {\n    getEqualPropertyValueFromSelectedObjects,\n} from '../../../utils/helpers';\n\n\nclass FillPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayColorPicker: false\n        }\n    }\n\n    handleReset() {\n        this.props.setStrokeColor(null)\n    }\n\n    handleClickSwatch() {\n        this.setState({\n            displayColorPicker: !this.state.displayColorPicker\n        })\n    }\n\n    handleChangeComplete(color) {\n        this.setState({\n            color: color\n\n        })\n        this.props.setStrokeColor(color.rgb)\n    }\n\n    onChangeStrokeWidth(name, value) {\n        let self = this;\n\n        self.props.setStrokeWidth(value);\n    }\n\n    render() {\n        const equalColorValue = getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'stroke');\n\n        return (\n            <div className={`${toolPanelStyle['tool-panel-block']}`}>\n                <div className={toolPanelStyle['tool-panel-block__name']}>\n                    Line\n                </div>\n\n                <div>\n                    <div className={colorPickerStyle.swatch} onClick={this.handleClickSwatch.bind(this)}>\n                        {equalColorValue === 'none' || equalColorValue === false ?\n                            <div className={colorPickerStyle.colorNone}/> :\n                            <div style={{background: equalColorValue}} className={colorPickerStyle.color}/>}\n                    </div>\n\n                    <button className={colorPickerStyle['reset-btn']} onClick={this.handleReset.bind(this)}>Reset\n                    </button>\n\n                    {this.state.displayColorPicker ? <ChromePicker\n                        className={colorPickerStyle.colorPicker}\n                        color={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'stroke')}\n                        onChangeComplete={this.handleChangeComplete.bind(this)}\n                    /> : null}\n\n                    <div className={toolPanelStyle['input-group']}>\n                        <div className={toolPanelStyle['input-group-item']}>\n                            <NumericInput\n                                value={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'strokeWidth')}\n                                onChange={this.onChangeStrokeWidth.bind(this)}/>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            setStrokeColor,\n            setStrokeWidth\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FillPanel)\n","import {\n    SET_NEW_FIGURE_DRAG_DATA\n} from './../constants';\n\n\nexport const setNewFigureDragData = (data) => {\n    return dispatch => {\n        dispatch({\n            type: SET_NEW_FIGURE_DRAG_DATA,\n            data: data\n        })\n\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport toolPanelStyle from './../index.module.scss';\nimport toolPanelFiguresrStyle from './Figures.module.scss';\n\nimport {setNewFigureDragData} from \"../../../actions/layoutBuilderActions\"\n\nclass Figures extends React.Component {\n    handleFigureClick(refName, e){\n        let clientRect = ReactDOM.findDOMNode(this.refs[refName]).getBoundingClientRect();\n\n        this.props.setNewFigureDragData({\n            figureType: refName,\n            figureOffset: {\n                x: clientRect.left - e.clientX,\n                y: clientRect.top - e.clientY\n            }\n        })\n    }\n\n    render() {\n\n        return (\n            <div className={`${toolPanelStyle['tool-panel-block']} ${toolPanelStyle['tool-panel-block-figures']}`}>\n                <div className={toolPanelStyle['tool-panel-block__name']}>\n                    Figures\n                </div>\n\n                <div>\n                    <input className={`${toolPanelFiguresrStyle['rectangle']}`} type=\"button\"\n                           onMouseDown={this.handleFigureClick.bind(this, 'rectangle')} ref=\"rectangle\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            setNewFigureDragData\n        },\n        dispatch\n    )\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Figures)\n","import React from 'react'\nimport TextPanel from './TextPanel';\nimport SizePanel from './SizePanel';\nimport PositionPanel from './PositionPanel';\nimport FillPanel from './FillPanel/FillPanel';\nimport StrokePanel from './StrokePanel/StrokePanel';\nimport Figures from './Figures/Figures'\n\nimport styles from './index.module.scss';\n\nclass ToolPanel extends React.Component {\n    render() {\n        return (\n            <div className={styles.toolPanel}>\n                <Figures/>\n                <TextPanel/>\n                <PositionPanel/>\n                <SizePanel/>\n                <FillPanel/>\n                <StrokePanel/>\n            </div>\n        )\n    }\n}\n\nexport default ToolPanel\n","import React from 'react'\nimport toolPanelVectorStyle from '../ToolPanel/Figures/Figures.module.scss';\n\nconst NewDraggableObject = ({objectPosition}) => {\n\n    const dragItemPosition = {\n        left: objectPosition.x,\n        top: objectPosition.y\n    };\n\n    return (\n        <div className={`${toolPanelVectorStyle['new-figure']} ${toolPanelVectorStyle['rectangle']}`}\n             style={dragItemPosition}/>\n\n    );\n}\n\n\nexport default NewDraggableObject\n","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {generateID, isMouseOnElement} from \"../../utils/helpers\"\n\nimport {setNewFigureDragData} from \"../../actions/layoutBuilderActions\"\nimport {addNewObject} from \"../../actions/index\"\n\nimport NewDraggableObject from './NewDraggableObject';\n\nclass NewDraggableObjectContainer extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            objectPosition: {\n                x: null,\n                y: null\n            }\n        }\n    }\n\n    onMouseUp = (e) => {\n        if (this.props.newFigureDragData === null) return;\n\n        const svgRenderClientRect = ReactDOM.findDOMNode(this.refs['SvgRenderContainer']);\n        const mousePosition = {x: e.clientX, y: e.clientY};\n\n        if (isMouseOnElement(svgRenderClientRect, mousePosition)) {\n            this.props.addNewObject({\n                    id: generateID(),\n                    width: 30,\n                    height: 20,\n                    stroke: 'rgba(0, 0, 0, 1)',\n                    fill: 'none',\n                    radius: \"0\",\n                    type: \"rectangle\",\n                    x: this.state.objectPosition.x,\n                    y: this.state.objectPosition.y\n                }\n            )\n        }\n        this.resetData();\n\n    }\n\n    resetData() {\n        this.props.setNewFigureDragData(null);\n        this.setState({\n            mousePosition: {\n                x: null,\n                y: null\n            }\n        })\n    }\n\n    getOffset = () => {\n        const {x, y} = ReactDOM.findDOMNode(this.refs['SvgRenderContainer']).getBoundingClientRect();\n        return {offsetX: x, offsetY: y}\n    }\n\n    onMouseMove = (e) => {\n        if (this.props.newFigureDragData === null) return;\n\n        const {offsetX, offsetY} = this.getOffset()\n        if (this.props.newFigureDragData !== null) {\n            this.setState({\n                objectPosition: {\n                    x: e.clientX - offsetX + this.props.newFigureDragData.figureOffset.x,\n                    y: e.clientY - offsetY + this.props.newFigureDragData.figureOffset.y\n                }\n            })\n        }\n    }\n\n    recursiveCloneChildren = (children) => {\n        return React.Children.map(children, child => {\n            let childProps = {};\n            if (React.isValidElement(child)) {\n                childProps = {ref: child.ref};\n            }\n            childProps.children = this.recursiveCloneChildren(child.props.children);\n\n            return React.cloneElement(child, childProps);\n        })\n    }\n\n    render() {\n        const {objectPosition} = this.state;\n        const {newFigureDragData, children} = this.props;\n\n        return (\n            <div className=\"new-figure-drag-helper\" onMouseMove={this.onMouseMove}\n                 onMouseUp={this.onMouseUp}>\n                {this.recursiveCloneChildren(children)}\n\n                {newFigureDragData !== null ? <NewDraggableObject objectPosition={objectPosition}/> : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({layoutBuilder}) => ({\n    newFigureDragData: layoutBuilder.newFigureDragData\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n        setNewFigureDragData,\n        addNewObject\n    }, dispatch)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(NewDraggableObjectContainer)\n","import React, {Component} from 'react';\n\nconst SelectTool = ({selectToolPosition, selectToolSize}) => {\n    const divStyle = {\n        position: 'absolute',\n        top: selectToolPosition.y + 'px',\n        left: selectToolPosition.x + 'px',\n        width: selectToolSize.width + 'px',\n        height: selectToolSize.height + 'px',\n        border: \"1px solid #6298F9\",\n        backgroundColor: \"rgba(98, 152, 249, 0.3)\"\n    };\n\n    return (\n        <div style={divStyle}/>\n    );\n}\n\nexport default SelectTool;\n\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport SelectTool from './SelectTool'\nimport {getSelectToolSize, getSelectToolPosition, checkRectRectCollision} from '../../utils/selectTool';\n\nimport {\n    deselectAllObjects,\n    selectObjects\n} from '../../actions/index'\n\nclass SelectToolContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.selectToolContainerRef = React.createRef();\n\n        this.state = {\n            selectToolActive: false,\n            selectToolStartPoint: {\n                x: null,\n                y: null\n            },\n            selectToolSize: {\n                x: null,\n                y: null\n            },\n            selectToolPosition: {\n                x: null,\n                y: null\n            }\n        }\n    }\n\n    getSvgOffset = () => {\n        const {x, y} = this.selectToolContainerRef.current.getBoundingClientRect();\n        return {offsetX: x, offsetY: y}\n    }\n\n    onMouseMove = (e) => this.updateSelectToolData({x: e.clientX, y: e.clientY});\n\n    onMouseUp = () => this.endSelect();\n\n    onMouseDown = (e) => {\n        if (e.target.id === 'svg-render') {\n            this.startSelect({mouseX: e.clientX, mouseY: e.clientY});\n        }\n    }\n\n    setSelectStartPosition(mousePosition) {\n        const {offsetX, offsetY} = this.getSvgOffset();\n        this.setState({\n            selectToolStartPoint: {\n                x: mousePosition.x - offsetX,\n                y: mousePosition.y - offsetY\n            }\n        })\n    }\n\n    startSelect({mouseX, mouseY}) {\n        this.setState({\n            selectToolActive: true\n        })\n        this.setSelectStartPosition({x: mouseX, y: mouseY});\n        this.updateSelectToolData({x: mouseX, y: mouseY});\n    }\n\n    endSelect() {\n        this.resetSelectToolData();\n        this.handleSelectTool();\n    }\n\n    handleSelectTool() {\n        const {selectToolPosition, selectToolSize} = this.state;\n        const {deselectAllObjects, selectObjects, objects} = this.props;\n        if (selectToolSize.x === null || selectToolSize.y === null) return;\n\n        let selectedObjectIds = [];\n        objects.forEach(function (object) {\n            if (checkRectRectCollision({\n                        x: object.x,\n                        y: object.y,\n                        width: object.width,\n                        height: object.height\n                    },\n                    {\n                        x: selectToolPosition.x,\n                        y: selectToolPosition.y,\n                        width: selectToolSize.width,\n                        height: selectToolSize.height\n                    })) {\n                selectedObjectIds.push(object.id);\n            }\n        })\n\n        deselectAllObjects();\n\n        if (selectedObjectIds.length) {\n            selectObjects(selectedObjectIds)\n        }\n    }\n\n    resetSelectToolData() {\n        this.setState({\n            selectToolActive: false,\n            selectToolStartPoint: {x: null, y: null},\n            selectToolSize: {x: null, y: null},\n            selectToolPosition: {x: null, y: null},\n        });\n    }\n\n    updateSelectToolData(mousePosition) {\n        const {offsetX, offsetY} = this.getSvgOffset();\n        const svgOffset = {x: offsetX, y: offsetY};\n        const {selectToolStartPoint} = this.state;\n\n        if (selectToolStartPoint.x === null) return;\n\n        const selectToolSize = getSelectToolSize(\n            selectToolStartPoint,\n            mousePosition,\n            svgOffset\n        );\n        const selectToolPosition = getSelectToolPosition(\n            selectToolStartPoint,\n            mousePosition,\n            svgOffset,\n            selectToolSize\n        );\n\n        this.setState({\n            selectToolPosition: selectToolPosition,\n            selectToolSize: selectToolSize\n        })\n    }\n\n    render() {\n        const {children} = this.props;\n        const {selectToolActive, selectToolPosition, selectToolSize} = this.state;\n        return (\n            <div\n                onMouseDown={this.onMouseDown}\n                onMouseMove={this.onMouseMove}\n                onMouseUp={this.onMouseUp}\n                ref={this.selectToolContainerRef}\n                className=\"select-tool-wrap\"\n            >\n                {children}\n                {selectToolActive ?\n                    <SelectTool selectToolPosition={selectToolPosition} selectToolSize={selectToolSize}/> : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    objects: svgRender.objects\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            deselectAllObjects,\n            selectObjects\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SelectToolContainer)\n","//TODO fix select for rotated objects\n\nexport const getSelectToolPosition = (startPoint, mouse, svgOffset, size) => {\n    const x = mouse.x - svgOffset.x > startPoint.x ? startPoint.x : startPoint.x - size.width;\n    const y = mouse.y - svgOffset.y > startPoint.y ? startPoint.y : startPoint.y - size.height;\n\n    return {\n        x: x,\n        y: y\n    }\n}\n\nexport const getSelectToolSize = (startPoint, mouse, svgOffset) => {\n    const width = Math.abs(mouse.x - svgOffset.x - startPoint.x);\n    const height = Math.abs(mouse.y - svgOffset.y - startPoint.y);\n\n    return {\n        width: width,\n        height: height\n    }\n}\n\n\nexport const checkRectRectCollision = (rect1, rect2) => {\n    return rect1.x + rect1.width >= rect2.x &&\n        rect1.x <= rect2.x + rect2.width &&\n        rect1.y + rect1.height >= rect2.y &&\n        rect1.y <= rect2.y + rect2.height;\n}","import React from 'react'\nimport SvgRenderContainer from '../SvgRender/SvgRenderContainer';\nimport ToolPanel from './../ToolPanel'\nimport NewDraggableObject from '../NewDraggableObject/NewDraggableObjectContainer';\nimport SelectToolContainer from './../SelectTool/SelectToolContainer';\n\nclass LayoutBuilder extends React.Component {\n    render() {\n        return (\n            <div className=\"layout-builder\">\n                <NewDraggableObject>\n                    <SelectToolContainer ref=\"SelectToolContainer\">\n                        <SvgRenderContainer ref=\"SvgRenderContainer\"/>\n                    </SelectToolContainer>\n                    <ToolPanel/>\n                </NewDraggableObject>\n            </div>\n        )\n    }\n}\n\nexport default LayoutBuilder;\n","import React from 'react'\nimport LayoutBuilder from '../layoutBuilder'\n\nconst App = () =>\n    <div className=\"container\">\n        <LayoutBuilder/>\n    </div>\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store, { history } from './store'\nimport App from './containers/app'\n\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\n\nconst target = document.querySelector('#root')\n\nrender(\n  <Provider store={store}>\n        <App />\n  </Provider>,\n  target\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-figure\":\"Figures_new-figure__3cfVH\",\"rectangle\":\"Figures_rectangle__2Q-nz\"};"],"sourceRoot":""}