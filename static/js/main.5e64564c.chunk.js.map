{"version":3,"sources":["containers/ToolPanel/index.module.scss","containers/SvgRender/index.module.scss","containers/layoutBuilder/index.module.scss","containers/ToolPanel/colorPicker.module.scss","modules/svgRender.js","modules/resizeTool.js","constants/redux.js","modules/index.js","store.js","actions/index.js","containers/Vector.js","containers/SelectTool.js","containers/actions/resizeTool.js","containers/actions/rootateTool.js","containers/actions/vector.js","containers/EditModeHelper.js","containers/Text.js","containers/actions/text.js","containers/Rectangle.js","containers/SvgRender/SvgRender.js","containers/actions/selectTool.js","containers/ToolPanel/TextPanel/VerticalAlignPanel.js","containers/ToolPanel/TextPanel/TextAlignPanel.js","containers/actions/utils.js","containers/ToolPanel/TextPanel/index.js","containers/ToolPanel/SizePanel.js","containers/ToolPanel/PositionPanel.js","containers/ToolPanel/FillPanel/FillPanel.js","containers/ToolPanel/StrokePanel/StrokePanel.js","containers/ToolPanel/index.js","containers/layoutBuilder/index.js","containers/home/index.js","containers/app/index.js","index.js"],"names":["module","exports","toolPanel","tool-panel-block","tool-panel-block__name","input-group-item","input-group","svgRender","layoutBuilder","swatch","color","colorNone","colorPicker","reset-btn","updateObject","oldObject","newValues","Object","assign","initialState","resizeDirection","setResizeDirection","direction","dispatch","type","payload","combineReducers","array","itemId","updateItemCallback","state","arguments","length","undefined","action","updatedItems","objectSpread","handlerObjectIndex","index","editMode","mode","mouseStartPosition","x","y","selectedObjectsId","concat","ids","objects","map","object","includes","id","editStartPositionOffset","width","height","item","updatedItem","forEach","editObjectInitState","rotate","textProps","verticalAlign","value","textAlign","fill","r","g","b","a","stroke","strokeWidth","resizeTool","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","createStore","connectRouter","rootReducer","mousePosition","radius","text","updateHandlerObjectIndex","updateEditMode","setMouseStartPosition","selectObjects","deselectAllObjects","deselectAllObjectsExept","moveObject","setObjectEditStartPosition","resizeObjects","props","setObjectMode","saveEditObjectInitState","resetObjectMode","rotateObject","_ref","setTextAlign","setVerticalAlign","setFillColor","setStrokeColor","setStrokeWidth","Vector","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","objectMoved","clientX","clientY","shiftKey","objectSelected","React","cloneElement","children","onMouseUp","bind","onMouseDown","Component","connect","bindActionCreators","SelectTool","react_default","createElement","opacity","selectToolPosition","selectToolSize","getObjectResizeValuesSouth","mouse","objectInitState","returnVal","progress","changeValue","Math","abs","getObjectResizeValuesNorth","getObjectResizeValuesEast","getObjectResizeValuesWest","getObjectRotateValue","atan2","PI","getTransformMatrix","centerX","centerY","getObjectAttributes","transform","EditModeHelper","target","getAttribute","self","helperConfig","dots","name","rotateIcon","strokeDasharray","pointerEvents","dot","key","cx","cy","style","cursor","onDotMouseDown","onRotateMouseDown","d","Text","_this","divElement","clientHeight","clientWidth","setState","prevProps","onResize","_this2","pointer-events","textState","overflow","getTextAttributes","ref","xmlns","display","split","i","Rectangle","containers_Text","containers_EditModeHelper","SvgRender","selectToolActive","selectToolStartPoint","svgOffset","getBoundingClientRect","refs","selectedObjects","updatedValues","updatedObject","getObjectResizeValues","resizeToolDirection","updateSelectToolData","handleSelectTool","currentTarget","setSelectStartPosition","resetSelectToolData","selectedObjectIds","rect1","rect2","push","console","log","startPoint","size","getSelectToolPosition","className","styles","onMouseMove","vectorType","containers_Rectangle","containers_Vector","containers_SelectTool","filter","buttonsConfig","label","VerticalAlignPanel","button","activeValue","onClick","TextAlignPanel","byString","o","s","replace","n","k","getEqualPropertyValueFromSelectedObjects","values","every","val","arr","TextPanel","TextPanel_VerticalAlignPanel","TextPanel_TextAlignPanel","SizePanel","react_numeric_input_default","onChange","PositionPanel","FillPanel","displayColorPicker","rgb","equalColorValue","toolPanelStyle","colorPickerStyle","handleClickSwatch","background","handleReset","react_color_lib","onChangeComplete","handleChangeComplete","onChangeStrokeWidth","ToolPanel","containers_ToolPanel_TextPanel","ToolPanel_PositionPanel","ToolPanel_SizePanel","ToolPanel_FillPanel_FillPanel","StrokePanel","LayoutBuilder","containers_SvgRender_SvgRender","containers_ToolPanel","changePage","App","home","document","querySelector","render","es","store","lib","app"],"mappings":"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","file":"static/js/main.5e64564c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolPanel\":\"ToolPanel_toolPanel__1Jn6W\",\"tool-panel-block\":\"ToolPanel_tool-panel-block__19uCp\",\"tool-panel-block__name\":\"ToolPanel_tool-panel-block__name__34ZxT\",\"input-group-item\":\"ToolPanel_input-group-item__1OBU_\",\"input-group\":\"ToolPanel_input-group__3zCxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svgRender\":\"SvgRender_svgRender__-RIrH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layoutBuilder\":\"layoutBuilder_layoutBuilder__8-vXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swatch\":\"colorPicker_swatch__HUpOg\",\"color\":\"colorPicker_color__3caBW\",\"colorNone\":\"colorPicker_colorNone__3YwZs\",\"colorPicker\":\"colorPicker_colorPicker__3l6wo\",\"reset-btn\":\"colorPicker_reset-btn__3NTuq\"};","import {\n    UPDATE_HANDLER_OBJECT_INDEX,\n    UPDATE_EDIT_MODE,\n    SET_MOUSE_START_POSITION,\n    SELECT_OBJECTS,\n    DESELECT_OBJECTS,\n    DESELECT_ALL_OBJECTS,\n    DESELECT_ALL_OBJECTS_EXEPT,\n    MOVE_OBJECT,\n    SET_OBJECT_EDIT_START_POSITION,\n    RESIZE_OBJECTS,\n    SET_OBJECT_MODE,\n    SAVE_EDIT_OBJECT_INIT_STATE,\n    RESET_OBJECT_MODE,\n    ROTATE_OBJECT,\n    SET_TEXT_ALIGN,\n    SET_VERTICAL_ALIGN,\n    SET_FILL_COLOR,\n    SET_STROKE_COLOR,\n    SET_STROKE_WIDTH\n} from './../constants';\n\nfunction updateObject(oldObject, newValues) {\n    return Object.assign({}, oldObject, newValues)\n}\n\nfunction updateItemInArray(array, itemId, updateItemCallback) {\n    const updatedItems = array.map(item => {\n        if (item.id !== itemId) {\n            // Since we only want to update one item, preserve all others as they are now\n            return item\n        }\n\n        // Use the provided callback to create an updated item\n        const updatedItem = updateItemCallback(item)\n        return updatedItem\n    })\n\n    return updatedItems\n}\n\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    let updatedItems = [];\n\n    switch (action.type) {\n        case UPDATE_HANDLER_OBJECT_INDEX:\n            return {\n                ...state,\n                handlerObjectIndex: action.index\n            }\n        case UPDATE_EDIT_MODE:\n            return {\n                ...state,\n                editMode: action.mode\n            }\n        case SET_MOUSE_START_POSITION:\n            return {\n                ...state,\n                mouseStartPosition: {x: action.x, y: action.y}\n            }\n        case SELECT_OBJECTS:\n            return {...state, selectedObjectsId: state.selectedObjectsId.concat(action.payload.ids)}\n\n        case DESELECT_ALL_OBJECTS:\n            return {...state, selectedObjectsId: []}\n\n        case DESELECT_ALL_OBJECTS_EXEPT:\n                return {...state, selectedObjectsId: [action.payload]}\n        case MOVE_OBJECT:\n            updatedItems = state.objects.map(object => {\n                if (action.payload.ids.includes(object.id)) {\n                    return {\n                        ...object,\n                        x: action.payload.x !== null ? action.payload.x : object.x,\n                        y: action.payload.y !== null ? action.payload.y : object.y\n                    }\n                }\n                return object\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_OBJECT_EDIT_START_POSITION:\n            updatedItems = state.objects.map(object => {\n                if (state.selectedObjectsId.includes(object.id)) {\n                    return {\n                        ...object,\n                        editStartPositionOffset: {\n                            x: action.payload.x - object.x,\n                            y: action.payload.y - object.y\n                        }\n                    }\n                }\n                return object\n            })\n            return {...state, objects: updatedItems}\n\n        case RESIZE_OBJECTS:\n            updatedItems = state.objects.map(object => {\n                if (action.payload.ids.includes(object.id)) {\n                    return {\n                        ...object,\n                        x: action.payload.x !== null ? action.payload.x : object.x,\n                        y: action.payload.y !== null ? action.payload.y : object.y,\n                        width: action.payload.width !== null ? action.payload.width : object.width,\n                        height: action.payload.height !== null ? action.payload.height : object.height\n                    }\n                }\n                return object\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_OBJECT_MODE:\n            updatedItems = state.objects.map(item => {\n                if (item.id === action.payload.id) {\n                    return {...item, mode: action.payload.mode}\n                }\n                return item;\n            })\n            return {...state, objects: updatedItems}\n\n        case SAVE_EDIT_OBJECT_INIT_STATE:\n            let updatedItem = null;\n            state.objects.forEach(item => {\n                if (item.id === action.payload.id) {\n                    updatedItem = item;\n                }\n            })\n            return {...state, editObjectInitState: updatedItem}\n\n        case RESET_OBJECT_MODE:\n            updatedItems = state.objects.map(item => {\n                return {...item, mode: null}\n            })\n            return {...state, objects: updatedItems}\n\n        case ROTATE_OBJECT:\n            updatedItems = updateItemInArray(state.objects, action.payload.id, object => {\n                return updateObject(object, {rotate: action.payload.rotate})\n            })\n            return updateObject(state, {objects: updatedItems})\n\n        case SET_VERTICAL_ALIGN:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    return {\n                        ...item,\n                        textProps: {\n                            ...item.textProps,\n                            verticalAlign: action.payload.value\n                        }\n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_TEXT_ALIGN:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    return {\n                        ...item,\n                        textProps: {\n                            ...item.textProps,\n                            textAlign: action.payload.value\n                        }\n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_FILL_COLOR:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    let color = action.payload.value;\n                    return {\n                        ...item,\n                        fill: color === null ? 'none' : `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`\n                        \n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_STROKE_COLOR:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    let color = action.payload.value;\n                    return {\n                        ...item,\n                        stroke: color === null ? 'none' : `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`\n\n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_STROKE_WIDTH:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    return {\n                        ...item,\n                        strokeWidth: action.payload.value\n\n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n        default:\n            return state\n    }\n}","import {\n    SET_RESIZE_DIRECTION\n} from './../constants';\n\n\nconst initialState = {\n    resizeDirection: null\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_RESIZE_DIRECTION:\n            return {\n                ...state,\n                resizeDirection: action.payload.direction\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const setResizeDirection = (direction) => {\n    return dispatch => {\n        dispatch({\n            type: SET_RESIZE_DIRECTION,\n            payload: {\n                direction: direction\n            }\n        })\n    }\n}","export const UPDATE_HANDLER_OBJECT_INDEX = 'svgRender/HANDLER_OBJECT_INDEX';\nexport const UPDATE_EDIT_MODE = 'svgRender/UPDATE_EDIT_MODE';\nexport const SET_MOUSE_START_POSITION = 'svgRender/SET_MOUSE_START_POSITION';\nexport const SELECT_OBJECTS = 'svgRender/SELECT_OBJECTS';\nexport const DESELECT_OBJECTS = 'svgRender/DESELECT_OBJECTS';\nexport const DESELECT_ALL_OBJECTS = 'svgRender/DESELECT_ALL_OBJECTS';\nexport const DESELECT_ALL_OBJECTS_EXEPT = 'svgRender/DESELECT_ALL_OBJECTS_EXEPT';\nexport const MOVE_OBJECT = 'svgRender/MOVE_OBJECT';\nexport const SET_OBJECT_EDIT_START_POSITION = 'svgRender/SET_OBJECT_EDIT_START_POSITION';\nexport const RESIZE_OBJECTS = 'svgRender/RESIZE_OBJECTS';\nexport const SET_OBJECT_MODE = 'svgRender/SET_OBJECT_MODE';\nexport const SAVE_EDIT_OBJECT_INIT_STATE = 'svgRender/SAVE_EDIT_OBJECT_INIT_STATE';\nexport const RESET_OBJECT_MODE = 'svgRender/RESET_OBJECT_MODE';\nexport const ROTATE_OBJECT = 'svgRender/ROTATE_OBJECT';\nexport const SET_RESIZE_DIRECTION = 'resizeTool/SET_RESIZE_DIRECTION';\nexport const SET_VERTICAL_ALIGN = 'textTool/SET_VERTICAL_ALIGN';\nexport const SET_TEXT_ALIGN = 'textTool/SET_TEXT_ALIGN';\nexport const SET_FILL_COLOR = 'textTool/SET_FILL_COLOR';\nexport const SET_STROKE_COLOR = 'textTool/SET_STROKE_COLOR';\nexport const SET_STROKE_WIDTH = 'textTool/SET_STROKE_WIDTH';","import { combineReducers } from 'redux'\nimport svgRender from './svgRender'\nimport resizeTool from './resizeTool'\n\nexport default combineReducers({\n  svgRender, resizeTool\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport createHistory from 'history/createBrowserHistory'\nimport rootReducer from './modules'\n\nexport const history = createHistory()\n\nconst initialState = {\n  svgRender: {\n      editMode: null,\n      mousePosition: {\n          x: null,\n          y: null\n      },\n      mouseStartPosition: {\n          x: null,\n          y: null\n      },\n\n      selectedObjectsId: [],\n\n      handlerObjectIndex: null,\n\n      objects: [\n          {\n              id: 1,\n              width: 163,\n              height: 84,\n              rotate: 0,\n              strokeWidth: 3,\n              stroke: 'rgba(135, 38, 86, 1)',\n              fill: \"rgba(0, 123, 255, 1)\",\n              radius: \"0\",\n              type: \"rectangle\",\n              x: 17,\n              y: 15,\n              text: \"Lorem ipsum \\n dolor\",\n              textProps: {\n                  textAlign: 'center',\n                  verticalAlign: 'top'\n\n              }\n          },\n          {\n              id: 2,\n              width: 200,\n              height: 300,\n              rotate: 0,\n              stroke: \"rgba(0, 255, 57, 1)\",\n              strokeWidth: 5,\n              fill: \"rgba(0, 123, 255, 1)\",\n              radius: \"0\",\n              type: \"rectangle\",\n              x: 200,\n              y: 50,\n              text: \"Lorem ipsum \\n dolor\",\n              textProps: {\n                  textAlign: 'right',\n                  verticalAlign: 'bottom'\n\n              }\n          }\n      ],\n      editObjectInitState: null\n  }\n}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n","import {\n    UPDATE_HANDLER_OBJECT_INDEX,\n    UPDATE_EDIT_MODE,\n    SET_MOUSE_START_POSITION,\n    SELECT_OBJECTS,\n    DESELECT_OBJECTS,\n    DESELECT_ALL_OBJECTS,\n    DESELECT_ALL_OBJECTS_EXEPT,\n    MOVE_OBJECT,\n    SET_OBJECT_EDIT_START_POSITION,\n    RESIZE_OBJECTS,\n    SET_OBJECT_MODE,\n    SAVE_EDIT_OBJECT_INIT_STATE,\n    RESET_OBJECT_MODE,\n    ROTATE_OBJECT,\n    SET_TEXT_ALIGN,\n    SET_VERTICAL_ALIGN,\n    SET_FILL_COLOR,\n    SET_STROKE_COLOR,\n    SET_STROKE_WIDTH\n} from './../constants';\n\n\nexport const updateHandlerObjectIndex = (index) => {\n    return dispatch => {\n        dispatch({\n            type: UPDATE_HANDLER_OBJECT_INDEX,\n            index: index\n        })\n\n    }\n}\n\nexport const updateEditMode = (mode) => {\n    return dispatch => {\n        dispatch({\n            type: UPDATE_EDIT_MODE,\n            mode: mode\n        })\n\n    }\n}\n\nexport const setMouseStartPosition = (x, y) => {\n    return dispatch => {\n        dispatch({\n            type: SET_MOUSE_START_POSITION,\n            x: x,\n            y: y\n        })\n\n    }\n}\n\nexport const selectObjects = (ids) => {\n    return dispatch => {\n        dispatch({\n            type: SELECT_OBJECTS,\n            payload: {ids}\n        })\n    }\n}\n\nexport const deselectObjects = (ids) => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_OBJECTS,\n            payload: {ids}\n\n        })\n    }\n}\n\n\nexport const deselectAllObjects = () => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_ALL_OBJECTS,\n        })\n    }\n}\n\nexport const deselectAllObjectsExept = (id) => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_ALL_OBJECTS_EXEPT,\n            payload: id\n        })\n    }\n}\n\n\nexport const moveObject = (payload) => {\n    return dispatch => {\n        dispatch({\n            type: MOVE_OBJECT,\n            payload: payload\n        })\n    }\n}\n\nexport const setObjectEditStartPosition = (x, y) => {\n    return dispatch => {\n        dispatch({\n            type: SET_OBJECT_EDIT_START_POSITION,\n            payload: {\n                x: x,\n                y: y\n            }\n        })\n    }\n}\n\n\nexport const resizeObjects = (props) => {\n    return dispatch => {\n        dispatch({\n            type: RESIZE_OBJECTS,\n            payload: props\n        })\n    }\n}\n\nexport const setObjectMode = (id, mode) => {\n    return dispatch => {\n        dispatch({\n            type: SET_OBJECT_MODE,\n            payload: {\n                id: id,\n                mode: mode\n            }\n        })\n    }\n}\n\nexport const saveEditObjectInitState = (id) => {\n    return dispatch => {\n        dispatch({\n            type: SAVE_EDIT_OBJECT_INIT_STATE,\n            payload: {\n                id: id\n            }\n        })\n    }\n}\n\nexport const resetObjectMode = () => {\n    return dispatch => {\n        dispatch({\n            type: RESET_OBJECT_MODE\n        })\n    }\n}\n\nexport const rotateObject = ({id, rotate}) => {\n    return dispatch => {\n        dispatch({\n            type: ROTATE_OBJECT,\n            payload: {id, rotate}\n        })\n    }\n}\n\nexport const setTextAlign = (value) => {\n    return dispatch => {\n        dispatch({\n            type: SET_TEXT_ALIGN,\n            payload: {value}\n        })\n    }\n}\n\nexport const setVerticalAlign = (value) => {\n    return dispatch => {\n        dispatch({\n            type: SET_VERTICAL_ALIGN,\n            payload: {value}\n        })\n    }\n}\n\nexport const setFillColor = (value) => {\n    return dispatch => {\n        dispatch({\n            type: SET_FILL_COLOR,\n            payload: {value}\n        })\n    }\n}\n\nexport const setStrokeColor = (value) => {\n    return dispatch => {\n        dispatch({\n            type: SET_STROKE_COLOR,\n            payload: {value}\n        })\n    }\n}\n\nexport const setStrokeWidth = (value) => {\n    return dispatch => {\n        dispatch({\n            type: SET_STROKE_WIDTH,\n            payload: {value}\n        })\n    }\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {\n    updateHandlerObjectIndex,\n    updateEditMode,\n    setMouseStartPosition,\n    selectObjects,\n    deselectAllObjects,\n    setObjectEditStartPosition,\n    deselectAllObjectsExept\n} from '../../src/actions'\n\n\n\nclass Vector extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onMouseUp(e) {\n        let objectMoved = this.props.mouseStartPosition.x !== e.clientX || this.props.mouseStartPosition.y !== e.clientY;\n\n        if (!e.shiftKey && !objectMoved) {\n            this.props.deselectAllObjectsExept(this.props.object.id);\n        }\n    }\n\n\n    onMouseDown(e) {\n        const objectSelected = this.props.selectedObjectsId.includes(this.props.object.id);\n\n        if (!e.shiftKey && !objectSelected) {\n            this.props.deselectAllObjects();\n        }\n        if (!objectSelected) {\n            this.props.selectObjects([this.props.object.id])\n        }\n\n        this.props.setMouseStartPosition(e.clientX, e.clientY)\n        this.props.setObjectEditStartPosition(e.clientX, e.clientY);\n        this.props.updateEditMode('drag')\n    }\n\n    render() {\n        return React.cloneElement(this.props.children, {onMouseUp: this.onMouseUp.bind(this), onMouseDown: this.onMouseDown.bind(this), object: this.props.object, selectedObjectsId: this.props.selectedObjectsId})\n\n    }\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    mouseStartPosition: svgRender.mouseStartPosition\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            updateHandlerObjectIndex,\n            updateEditMode,\n            setMouseStartPosition,\n            selectObjects,\n            deselectAllObjects,\n            setObjectEditStartPosition,\n            deselectAllObjectsExept\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Vector)\n","import React, {Component} from 'react';\n\nclass SelectTool extends Component {\n    render() {\n        return (\n            <g>\n               <rect\n                    strokeWidth=\"1\"\n                    stroke=\"#6298F9\"\n                    fill=\"rgba(98, 152, 249, 0.3)\"\n                    opacity=\"0.3\"\n                    x={this.props.selectToolPosition.x}\n                    y={this.props.selectToolPosition.y}\n                    width={this.props.selectToolSize.width}\n                    height={this.props.selectToolSize.height}\n                /> : ''}\n            </g>\n        );\n    }\n}\n\nexport default SelectTool;\n\n","//TODO fix bug with resize when object rotated\n\nfunction getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition) {\n    let returnVal = {};\n    let progress = mouse.y - mouseStartPosition.y;\n    let changeValue = objectInitState.height + progress;\n    returnVal.y = changeValue > 0 ? objectInitState.y : objectInitState.y - Math.abs(changeValue);\n    returnVal.height = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition) {\n    let returnVal = {};\n    let progress = mouse.y - mouseStartPosition.y;\n    let changeValue = objectInitState.height - progress;\n    returnVal.y = changeValue > 0 ? objectInitState.y - (changeValue - objectInitState.height) : objectInitState.y + objectInitState.height;\n    returnVal.height = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition) {\n    let returnVal = {};\n\n    let progress = mouse.x - mouseStartPosition.x;\n    let changeValue = objectInitState.width + progress;\n    returnVal.x = changeValue < 0 ? objectInitState.x + changeValue : objectInitState.x;\n    returnVal.width = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition) {\n    let returnVal = {};\n\n    let progress = mouse.x - mouseStartPosition.x;\n    let changeValue = objectInitState.width - progress;\n    returnVal.x = changeValue > 0 ? objectInitState.x + progress : objectInitState.x + objectInitState.width;\n    returnVal.width = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nexport const getObjectResizeValues = (mouse, direction, objectInitState, mouseStartPosition, object) => {\n    let updatedObject = object;\n\n    switch (direction) {\n        case 's':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'n':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'e':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'w':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'ne':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'se':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'sw':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'nw':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n    }\n\n    return updatedObject;\n}","//TODO make rotate more user friendly\nexport const getObjectRotateValue = ({mouse, mouseStartPosition, object}) => {\n    let angle = Math.atan2(\n        mouseStartPosition.x + (object.width || 0) / 2 - mouse.x,\n        mouseStartPosition.y + (object.height || 0) / 2 - mouse.y\n    );\n\n    let asDegree = angle * 180 / Math.PI;\n\n    return (asDegree - 45) * -1;\n}","export const getTransformMatrix = ({rotate, x, y, width, height}) => {\n    if (rotate) {\n        let centerX = width / 2 + x;\n        let centerY = height / 2 + y;\n        return `rotate(${rotate} ${centerX} ${centerY})`;\n    }\n}\n\nexport const getObjectAttributes = (object) => {\n    return {\n        transform: getTransformMatrix(object)\n    };\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {\n    resizeObjects,\n    setMouseStartPosition,\n    updateEditMode,\n    setObjectMode,\n    saveEditObjectInitState\n} from '../../src/actions'\n\nimport {\n    setResizeDirection\n} from '../../src/modules/resizeTool'\n\nimport {getObjectAttributes} from './actions/vector.js';\n\nclass EditModeHelper extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onRotateMouseDown(e) {\n        this.props.setObjectMode(this.props.object.id, 'rotate');\n        this.props.updateEditMode('rotate');\n        this.props.setMouseStartPosition(e.clientX, e.clientY);\n    }\n\n    onDotMouseDown(e){\n        this.props.setObjectMode(this.props.object.id, 'resize');\n        this.props.updateEditMode('resize');\n        this.props.saveEditObjectInitState(this.props.object.id);\n        this.props.setMouseStartPosition(e.clientX, e.clientY);\n        this.props.setResizeDirection(e.target.getAttribute('name'))\n    }\n\n    render() {\n        let self = this;\n\n        let object = this.props.object;\n\n        const helperConfig =\n            {\n                dots: [\n                    {\n                        name: 'nw',\n                        x: object.x,\n                        y: object.y\n                    },\n                    {\n                        name: 'n',\n                        x: object.x + object.width / 2,\n                        y: object.y\n                    },\n                    {\n                        name: 'ne',\n                        x: object.x + object.width,\n                        y: object.y\n                    },\n                    {\n                        name: 'w',\n                        x: object.x,\n                        y: object.y + object.height / 2\n                    },\n                    {\n                        name: 'e',\n                        x: object.x + object.width,\n                        y: object.y + object.height / 2\n                    },\n                    {\n                        name: 'sw',\n                        x: object.x,\n                        y: object.y + object.height\n                    },\n                    {\n                        name: 's',\n                        x: object.x + object.width / 2,\n                        y: object.y + object.height\n                    },\n                    {\n                        name: 'se',\n                        x: object.x + object.width,\n                        y: object.y + object.height\n                    }\n                ]\n            }\n\n            const rotateIcon = {\n                x: object.x + object.width / 2 - 6,\n                y: object.y - 20\n            }\n\n\n        return (\n            <g {...getObjectAttributes(object)}>\n                <rect\n                    width={object.width}\n                    height={object.height}\n                    x={object.x}\n                    y={object.y}\n                    fill=\"none\" stroke=\"#00a8ff\" strokeDasharray=\"3 3\" pointerEvents=\"none\"/>\n\n                {helperConfig.dots.map(function (dot) {\n                    return <circle key={dot.name} name={dot.name} cx={dot.x} cy={dot.y} fill=\"#34B7EF\" r=\"5\" style={{cursor: dot.name + '-resize'}} onMouseDown={self.onDotMouseDown.bind(self)}/>\n                })}\n\n                <path cursor=\"pointer\" onMouseDown={self.onRotateMouseDown.bind(self)} transform={'translate(' + rotateIcon.x + ' ' + rotateIcon.y +')'} stroke=\"rgb(0, 0, 0, 0)\" strokeWidth=\"5\" d=\"M5.1,0.2L4.4,0.8c-0.1,0.1-0.1,0.2,0,0.3l1.1,1.1C4.2,2.1,2.8,2.5,1.7,3.5c-2,1.8-2.1,4.9-0.3,6.8\n                c1.8,2,4.8,2.1,6.8,0.3c0.9-0.8,1.4-1.9,1.5-3.1c0-0.1-0.1-0.3-0.2-0.3l-0.9,0c-0.1,0-0.2,0.1-0.2,0.2C8.3,8.2,7.9,9,7.2,9.6\n                c-1.4,1.3-3.6,1.2-4.8-0.2C1.1,8,1.2,5.8,2.6,4.5c0.9-0.8,2-1.1,3.1-0.8L4.2,5c-0.1,0.1-0.1,0.2,0,0.3L4.8,6c0.1,0.1,0.2,0.1,0.3,0\n                L8,3.4c0.1-0.1,0.1-0.2,0-0.3L5.4,0.2C5.3,0.1,5.2,0.1,5.1,0.2z\"/>\n\n            </g>\n        )\n    }\n}\n//\n// const mapStateToProps = ({ svgRender }) => ({\n//\n// })\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            resizeObjects,\n            setMouseStartPosition,\n            updateEditMode,\n            setObjectMode,\n            saveEditObjectInitState,\n            setResizeDirection\n        },\n        dispatch\n    )\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(EditModeHelper)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport EditModeHelper from './EditModeHelper.js';\n\nimport {getObjectAttributes} from './actions/vector.js';\nimport {getTextAttributes, getTextWrapAttributes} from './actions/text.js';\n\nfunction breakLine(text) {\n    console.log(text);\n    var br = React.createElement('br');\n    var regex = /(<br \\/>)/g;\n    return text.split(regex).map(function(line, index) {\n        return line.match(regex) ? <br key={\"key_\" + index} /> : line;\n    });\n}\n\nclass Text extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            height: 0,\n            width: 0\n        }\n    }\n\n    onResize(){\n        const height = this.divElement.clientHeight;\n        const width = this.divElement.clientWidth;\n\n        this.setState({ height, width });\n    }\n\n    componentDidUpdate(prevProps){\n        if (prevProps.object.width !== this.props.object.width || prevProps.object.height !== this.props.object.height) {\n            this.onResize();\n        }\n    }\n\n    componentDidMount(){\n        this.onResize();\n    }\n\n\n    render() {\n        return (\n            <g>\n                <foreignObject\n                    pointer-events=\"none\"\n                    {...getObjectAttributes(this.props.object)}\n                    {...getTextAttributes(this.props.object, this.state)}\n                >\n                    <div {...getTextWrapAttributes(this.props.object)} ref={ (divElement) => this.divElement = divElement}>\n                        <div xmlns=\"http://www.w3.org/1999/xhtml\" style={{ display: 'inline-block' }}>\n                            {this.props.object.text.split(\"\\n\").map((i,key) => {\n                                return <div key={key}>{i}</div>;\n                            })}\n                        </div>\n                    </div>\n                </foreignObject>\n            </g>\n        )\n    }\n}\n\n\n// const mapStateToProps = ({svgRender}) => ({\n//     mouseStartPosition: svgRender.mouseStartPosition\n// })\n//\n// const mapDispatchToProps = dispatch =>\n//     bindActionCreators({\n//             updateHandlerObjectIndex,\n//             updateEditMode,\n//             setMouseStartPosition,\n//             setObjectsSelectState,\n//             deselectAllObjects,\n//             setEditStartPositionOffset,\n//             deselectAllObjectsExept\n//         },\n//         dispatch\n//     )\n\nexport default connect(\n    null,\n    null\n)(Text)\n","export const getTextAttributes = (object, textState) => {\n    let y = 0;\n\n    switch(object.textProps.verticalAlign) {\n        case 'top': y = object.y; break;\n        case 'middle': y = object.y + object.height / 2 - textState.height / 2; break;\n        case 'bottom': y = object.y + object.height - textState.height; break;\n        default: y = object.y + object.height / 2 - textState.height / 2;\n    }\n\n\n    return {\n        width: object.width,\n        height: textState.height,\n        overflow: 'visible',\n        x: object.x,\n        y: y,\n    }\n}\n\n\nexport const getTextWrapAttributes = (object) => {\n    let style = {\n        textAlign: object.textProps.textAlign\n    };\n\n    return {\n        style: style\n    }\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport EditModeHelper from './EditModeHelper.js';\nimport Text from './Text';\n\nimport {getObjectAttributes} from './actions/vector.js';\n\nclass Rectangle extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n        return (\n            <g>\n\n\n                    <rect {...getObjectAttributes(this.props.object)}\n                          width={this.props.object.width}\n                          height={this.props.object.height}\n                          x={this.props.object.x}\n                          y={this.props.object.y}\n                          pointerEvents=\"visible\"\n                          cursor=\"move\"\n                          fill={this.props.object.fill}\n                          strokeWidth={this.props.object.strokeWidth}\n                          stroke={this.props.object.stroke}\n                          onMouseDown={this.props.onMouseDown}\n                          onMouseUp={this.props.onMouseUp}\n                    />\n\n                {this.props.object.text ? <Text object={this.props.object}/> : ''}\n\n\n                {this.props.selectedObjectsId.includes(this.props.object.id) ? <EditModeHelper\n                    object={this.props.object}/> : ''}\n\n            </g>\n        )\n    }\n}\n\n//\n// const mapStateToProps = ({svgRender}) => ({\n//     mouseStartPosition: svgRender.mouseStartPosition\n// })\n//\n// const mapDispatchToProps = dispatch =>\n//     bindActionCreators({\n//             updateHandlerObjectIndex,\n//             updateEditMode,\n//             setMouseStartPosition,\n//             setObjectsSelectState,\n//             deselectAllObjects,\n//             setEditStartPositionOffset,\n//             deselectAllObjectsExept\n//         },\n//         dispatch\n//     )\n\nexport default connect(\n    null,\n    null\n)(Rectangle)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport Vector from '../Vector';\nimport SelectTool from '../SelectTool';\nimport {getSelectToolSize, getSelectToolPosition, checkRectRectCollision} from '../actions/selectTool';\nimport {getObjectResizeValues} from '../actions/resizeTool';\nimport {getObjectRotateValue} from '../actions/rootateTool.js';\nimport Rectangle from '../Rectangle';\nimport Text from '../Text';\nimport styles from './index.module.scss';\n\nimport {\n    updateEditMode,\n    deselectAllObjects,\n    moveObject,\n    selectObjects,\n    resizeObjects,\n    resetObjectMode,\n    rotateObject\n} from '../../actions/index'\n\nclass SvgRender extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectToolActive: false,\n            selectToolStartPoint: {\n                x: null,\n                y: null\n            },\n            mousePosition: {\n                x: null,\n                y: null\n            },\n            svgOffset: {\n                x: null,\n                y: null\n            },\n            selectToolSize: {\n                x: null,\n                y: null\n            },\n            selectToolPosition: {\n                x: null,\n                y: null\n            }\n        }\n    }\n\n    componentDidMount() {\n        const getBoundingClientRect = this.refs.svgRender.getBoundingClientRect();\n\n        this.setState({\n            svgOffset: {\n                x: getBoundingClientRect.x,\n                y: getBoundingClientRect.y\n            }\n        })\n    }\n\n    onMouseMove(e) {\n\n        let self = this;\n\n        if (this.props.editMode === 'drag') {\n            this.props.selectedObjects.forEach(function (object) {\n                self.props.moveObject({\n                    ids: [object.id],\n                    x: e.clientX - object.editStartPositionOffset.x,\n                    y: e.clientY - object.editStartPositionOffset.y\n                });\n            })\n        }\n\n        else if (this.props.editMode === 'resize') {\n            this.props.selectedObjects.forEach(function (object) {\n                // console.log(object);\n                if (object.mode === 'resize') {\n                    // console.log(object.height);\n                    let updatedValues = getObjectResizeValues(\n                        {x: e.clientX, y: e.clientY},\n                        self.props.resizeToolDirection,\n                        self.props.editObjectInitState,\n                        self.props.mouseStartPosition,\n                        {x: object.x, y: object.y, width: object.width, height: object.height}\n                    );\n\n                    // console.log(updatedValues);\n                    self.props.resizeObjects({\n                            ids: [object.id],\n                            ...updatedValues\n                        }\n                    );\n                }\n            })\n        }\n\n        else if (this.props.editMode === 'rotate') {\n            this.props.selectedObjects.forEach(function (object) {\n                if (object.mode === 'rotate') {\n\n                    let mouse = {x: e.clientX, y: e.clientY},\n                        mouseStartPosition = self.props.mouseStartPosition;\n\n                    self.props.rotateObject({\n                            id: object.id,\n                            rotate: getObjectRotateValue({mouse, mouseStartPosition, object})\n                        }\n                    );\n                }\n            })\n        }\n\n\n        if (this.props.editMode === 'selectTool') {\n            this.updateSelectToolData({x: e.clientX, y: e.clientY});\n        }\n    }\n\n\n    onMouseUp(e) {\n        if (this.props.editMode === 'selectTool') {\n            this.handleSelectTool();\n        }\n        else if (this.props.editMode === 'resize') {\n            this.props.resetObjectMode();\n        }\n        else if (this.props.editMode === 'rotate') {\n            this.props.resetObjectMode();\n        }\n\n\n        this.props.updateEditMode(null);\n    }\n\n    onMouseDown(e) {\n        if (e.target === e.currentTarget) {\n            this.setSelectStartPosition({x: e.clientX, y: e.clientY});\n            this.updateSelectToolData({x: e.clientX, y: e.clientY});\n            this.props.updateEditMode('selectTool');\n        }\n    }\n\n    setSelectStartPosition(mousePosition) {\n        this.setState({\n            selectToolStartPoint: {\n                x: mousePosition.x - this.state.svgOffset.x,\n                y: mousePosition.y - this.state.svgOffset.y\n            }\n        })\n    }\n\n    handleSelectTool() {\n        let self = this;\n\n        this.resetSelectToolData();\n\n        let selectedObjectIds = [];\n\n        this.props.objects.forEach(function (object) {\n            if (checkRectRectCollision({\n                        x: object.x,\n                        y: object.y,\n                        width: object.width,\n                        height: object.height\n                    },\n                    {\n                        x: self.state.selectToolPosition.x,\n                        y: self.state.selectToolPosition.y,\n                        width: self.state.selectToolSize.width,\n                        height: self.state.selectToolSize.height\n                    })) {\n                selectedObjectIds.push(object.id);\n            }\n        })\n\n        this.props.deselectAllObjects();\n\n        if (selectedObjectIds.length) {\n            console.log(111);\n            this.props.selectObjects(selectedObjectIds)\n        }\n    }\n\n    resetSelectToolData() {\n        this.setState({\n            selectToolStartPoint: {x: null, y: null},\n            selectToolSize: {x: null, y: null}\n        });\n    }\n\n    updateSelectToolData(mousePosition) {\n        if (this.state.selectToolStartPoint.x === null) return;\n\n        const selectToolSize = getSelectToolSize(\n            this.state.selectToolStartPoint,\n            mousePosition,\n            this.state.svgOffset\n        );\n\n        this.setState({\n            selectToolSize: selectToolSize\n        })\n        const selectToolPosition = getSelectToolPosition(\n            this.state.selectToolStartPoint,\n            mousePosition,\n            this.state.svgOffset,\n            selectToolSize\n        );\n        this.setState({\n            selectToolPosition: selectToolPosition\n        })\n    }\n\n    render() {\n        let self = this;\n\n        return (\n            <div className={styles.svgRender}>\n                <svg ref=\"svgRender\" width='800' height='500'\n                     onMouseMove={this.onMouseMove.bind(this)} onMouseUp={this.onMouseUp.bind(this)}\n                     onMouseDown={this.onMouseDown.bind(this)}>\n                    {this.props.objects.map(function (object) {\n                        let vectorType = null;\n                        switch (object.type) {\n                            case 'rectangle': {\n                                vectorType = <Rectangle/>;\n                                break;\n                            }\n                            case 'text': {\n                                vectorType = <Text/>;\n                                break;\n                            }\n                        }\n                        return (\n                            <Vector key={object.id} object={object} selectedObjectsId={self.props.selectedObjectsId}>\n                                {vectorType}\n                            </Vector>\n                        )\n                    })}\n\n                    {this.props.editMode === 'selectTool' ? <SelectTool\n                        selectToolPosition={this.state.selectToolPosition}\n                        selectToolSize={this.state.selectToolSize}\n                    /> : ''}\n                </svg>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender, resizeTool}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId,\n    objects: svgRender.objects,\n    editMode: svgRender.editMode,\n    mouseStartPosition: svgRender.mouseStartPosition,\n    editObjectInitState: svgRender.editObjectInitState,\n    resizeToolDirection: resizeTool.resizeDirection\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            updateEditMode,\n            deselectAllObjects,\n            moveObject,\n            selectObjects,\n            resizeObjects,\n            resetObjectMode,\n            rotateObject\n        },\n        dispatch\n    )\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SvgRender)\n","//TODO fix select for rotated objects\n\nexport const getSelectToolPosition = (startPoint, mouse, svgOffset, size) => {\n    const x = mouse.x - svgOffset.x > startPoint.x ? startPoint.x : startPoint.x - size.width;\n    const y = mouse.y - svgOffset.y > startPoint.y ? startPoint.y : startPoint.y - size.height;\n\n    return {\n        x: x,\n        y: y\n    }\n}\n\nexport const getSelectToolSize = (startPoint, mouse, svgOffset) => {\n    const width = Math.abs(mouse.x - svgOffset.x - startPoint.x);\n    const height = Math.abs(mouse.y - svgOffset.y - startPoint.y);\n\n    return {\n        width: width,\n        height: height\n    }\n}\n\n\nexport const checkRectRectCollision = (rect1, rect2) => {\n    return rect1.x + rect1.width >= rect2.x &&\n        rect1.x <= rect2.x + rect2.width &&\n        rect1.y + rect1.height >= rect2.y &&\n        rect1.y <= rect2.y + rect2.height;\n}","import React from 'react'\n\nimport styles from './index.css';\n\nconst buttonsConfig = [\n    {\n        value: 'top',\n        label: 'Top',\n    },\n    {\n        value: 'middle',\n        label: 'Middle',\n    },\n    {\n        value: 'bottom',\n        label: 'Bottom',\n    }\n]\n\nclass VerticalAlignPanel extends React.Component {\n    onClick(e) {\n        this.props.setVerticalAlign(e.target.value);\n    }\n\n    render() {\n        let self = this;\n\n        return (\n            <div>\n                Vertical Align\n\n                <div className=\"vertical-align-btn-group\">\n\n                    {\n                        buttonsConfig.map((button) => {\n                            return (\n                                <button\n                                    className={self.props.activeValue === button.value ? 'vertical-align-btn-group__btn vertical-align-btn-group__btn_active' : 'vertical-align-btn-group__btn'}\n                                    key={button.value} value={button.value}\n                                    onClick={self.onClick.bind(this)}>{button.label}</button>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VerticalAlignPanel;\n","import React from 'react'\nimport styles from './index.css';\n\nconst buttonsConfig = [\n    {\n        value: 'left',\n        label: 'Left',\n    },\n    {\n        value: 'center',\n        label: 'Center',\n    },\n    {\n        value: 'right',\n        label: 'Right',\n    }\n]\n\nclass TextAlignPanel extends React.Component {\n    onClick(e) {\n        this.props.setTextAlign(e.target.value);\n    }\n\n    render() {\n        let self = this;\n\n        return (\n            <div>\n                Text Align\n\n                <div className=\"text-align-btn-group\">\n\n                    {\n                        buttonsConfig.map((button) => {\n                            return (\n                                <button\n                                    className={self.props.activeValue === button.value ? 'text-align-btn-group__btn text-align-btn-group__btn_active' : 'text-align-btn-group__btn'}\n                                    key={button.value} value={button.value}\n                                    onClick={self.onClick.bind(this)}>{button.label}</button>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TextAlignPanel;\n","Object.byString = function(o, s) {\n    s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n    s = s.replace(/^\\./, '');           // strip a leading dot\n    var a = s.split('.');\n    for (var i = 0, n = a.length; i < n; ++i) {\n        var k = a[i];\n        if (k in o) {\n            o = o[k];\n        } else {\n            return;\n        }\n    }\n    return o;\n}\n\nexport const getEqualPropertyValueFromSelectedObjects = (objects, key) => {\n    let values = [];\n\n    if (objects.length > 0){\n        objects.forEach((object => {\n            values.push(Object.byString(object, key));\n        }))\n    }\n\n    values.every( (val, i, arr) => val === arr[0] )   // true\n\n    return values.every( (val, i, arr) => val === arr[0]) ? values[0] : false;\n}\n\nexport const isInt = (value) => {\n    return !isNaN(value) &&\n        parseInt(Number(value)) == value &&\n        !isNaN(parseInt(value, 10));\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport VerticalAlignPanel from './VerticalAlignPanel';\nimport TextAlignPanel from './TextAlignPanel';\n\nimport {\n    setTextAlign,\n    setVerticalAlign\n} from './../../../../src/actions'\n\nimport {\n    getEqualPropertyValueFromSelectedObjects,\n} from './../../../containers/actions/utils';\n\n\nclass TextPanel extends React.Component {\n    render() {\n        return (\n            <div>\n                <VerticalAlignPanel setVerticalAlign={this.props.setVerticalAlign.bind(this)} activeValue={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'textProps.verticalAlign')}/>\n                <TextAlignPanel setTextAlign={this.props.setTextAlign.bind(this)} activeValue={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'textProps.textAlign')}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id))\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            setTextAlign,\n            setVerticalAlign\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TextPanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport NumericInput from 'react-numeric-input';\n\nimport {resizeObjects} from './../../actions/index';\n\nimport style from './index.module.scss';\n\nimport {\n    getEqualPropertyValueFromSelectedObjects,\n} from './../actions/utils';\n\n\nclass SizePanel extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onChange(name, value) {\n        let self = this;\n\n        self.props.resizeObjects({\n                ids: this.props.selectedObjectsId,\n                x: null,\n                y: null,\n                width: name === 'width' ? value : null,\n                height: name === 'height' ? value : null\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div className={`${style['tool-panel-block']} ${style['tool-panel-block-size']}`}>\n                <div className={style['tool-panel-block__name']}>\n                    Size\n                </div>\n                <div className={style['input-group']}>\n                    <div className={style['input-group-item']}>\n                        <NumericInput\n                            value={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'width')}\n                            name=\"width\"\n                            onChange={this.onChange.bind(this, 'width')}/>\n                        Width\n\n                    </div>\n\n                    <div className={style['input-group-item']}>\n                        <NumericInput\n                            value={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'height')}\n                            name=\"height\"\n                            onChange={this.onChange.bind(this, 'height')}/>\n                        Height\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender, resizeTool}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            resizeObjects\n        },\n        dispatch\n    )\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SizePanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport NumericInput from 'react-numeric-input';\n\nimport {moveObject} from './../../actions/index';\n\nimport style from './index.module.scss';\n\nimport {\n    getEqualPropertyValueFromSelectedObjects,\n} from './../actions/utils';\n\nclass PositionPanel extends React.Component {\n    onChange(name, value) {\n        let self = this;\n\n        self.props.moveObject({\n                ids: this.props.selectedObjectsId,\n                x: name === 'x' ? value : null,\n                y: name === 'y' ? value : null\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div className={`${style['tool-panel-block']} ${style['tool-panel-block-position']}`}>\n                <div className={style['tool-panel-block__name']}>\n                    Position\n                </div>\n                <div className={style['input-group']}>\n                    <div className={style['input-group-item']}>\n                        <NumericInput\n                            value={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'x')}\n                            name=\"x\"\n                            onChange={this.onChange.bind(this, 'x')}/>\n                        Left\n\n                    </div>\n\n                    <div className={style['input-group-item']}>\n                        <NumericInput\n                            value={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'y')}\n                            name=\"y\"\n                            onChange={this.onChange.bind(this, 'y')}/>\n                        Top\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender, resizeTool}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            moveObject\n        },\n        dispatch\n    )\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PositionPanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {ChromePicker} from 'react-color';\n\nimport colorPickerStyle from './../colorPicker.module.scss';\nimport toolPanelStyle from './../index.module.scss';\n\nimport {setFillColor} from '../../../actions/index';\n\nimport {\n    getEqualPropertyValueFromSelectedObjects,\n} from '../../actions/utils';\n\n\nclass FillPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayColorPicker: false\n        }\n    }\n\n    handleReset() {\n        this.props.setFillColor(null)\n    }\n\n    handleClickSwatch() {\n        this.setState({\n            displayColorPicker: !this.state.displayColorPicker\n        })\n    }\n\n    handleChangeComplete(color) {\n        this.setState({\n            color: color\n\n        })\n        this.props.setFillColor(color.rgb)\n    }\n\n    render() {\n        const equalColorValue = getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'fill');\n\n        return (\n            <div className={`${toolPanelStyle['tool-panel-block']} ${toolPanelStyle['tool-panel-block-fill']}`}>\n                <div className={toolPanelStyle['tool-panel-block__name']}>\n                    Fill\n                </div>\n\n                <div>\n                    <div className={colorPickerStyle.swatch} onClick={this.handleClickSwatch.bind(this)}>\n                        {equalColorValue === 'none' || equalColorValue === false ?\n                            <div className={colorPickerStyle.colorNone}/> :\n                            <div style={{background: equalColorValue}} className={colorPickerStyle.color}/>}\n                    </div>\n\n                    <button className={colorPickerStyle['reset-btn']} onClick={this.handleReset.bind(this)}>Reset</button>\n\n                    {this.state.displayColorPicker ? <ChromePicker\n                        className={colorPickerStyle.colorPicker}\n                        color={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'fill')}\n                        onChangeComplete={this.handleChangeComplete.bind(this)}\n                    /> : null}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            setFillColor\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FillPanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {ChromePicker} from 'react-color';\n\nimport colorPickerStyle from './../colorPicker.module.scss';\nimport toolPanelStyle from './../index.module.scss';\n\nimport {setStrokeColor, setStrokeWidth} from '../../../actions/index';\nimport NumericInput from 'react-numeric-input';\n\nimport {\n    getEqualPropertyValueFromSelectedObjects,\n} from '../../actions/utils';\n\n\nclass FillPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayColorPicker: false\n        }\n    }\n\n    handleReset() {\n        this.props.setStrokeColor(null)\n    }\n\n    handleClickSwatch() {\n        this.setState({\n            displayColorPicker: !this.state.displayColorPicker\n        })\n    }\n\n    handleChangeComplete(color) {\n        this.setState({\n            color: color\n\n        })\n        this.props.setStrokeColor(color.rgb)\n    }\n\n    onChangeStrokeWidth(name, value) {\n        let self = this;\n\n        self.props.setStrokeWidth(value);\n    }\n\n    render() {\n        const equalColorValue = getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'stroke');\n\n        return (\n            <div className={`${toolPanelStyle['tool-panel-block']}`}>\n                <div className={toolPanelStyle['tool-panel-block__name']}>\n                    Line\n                </div>\n\n                <div>\n                    <div className={colorPickerStyle.swatch} onClick={this.handleClickSwatch.bind(this)}>\n                        {equalColorValue === 'none' || equalColorValue === false ?\n                            <div className={colorPickerStyle.colorNone}/> :\n                            <div style={{background: equalColorValue}} className={colorPickerStyle.color}/>}\n                    </div>\n\n                    <button className={colorPickerStyle['reset-btn']} onClick={this.handleReset.bind(this)}>Reset\n                    </button>\n\n                    {this.state.displayColorPicker ? <ChromePicker\n                        className={colorPickerStyle.colorPicker}\n                        color={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'stroke')}\n                        onChangeComplete={this.handleChangeComplete.bind(this)}\n                    /> : null}\n\n                    <div className={toolPanelStyle['input-group']}>\n                        <div className={toolPanelStyle['input-group-item']}>\n                            <NumericInput\n                                value={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'strokeWidth')}\n                                onChange={this.onChangeStrokeWidth.bind(this)}/>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            setStrokeColor,\n            setStrokeWidth\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FillPanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport TextPanel from './TextPanel';\nimport SizePanel from './SizePanel';\nimport PositionPanel from './PositionPanel';\nimport FillPanel from './FillPanel/FillPanel';\nimport StrokePanel from './StrokePanel/StrokePanel';\n\nimport styles from './index.module.scss';\n\nclass ToolPanel extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className={styles.toolPanel}>\n                <TextPanel/>\n                <PositionPanel/>\n                <SizePanel/>\n                <FillPanel/>\n                <StrokePanel/>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    null,\n    null\n)(ToolPanel)\n","import React from 'react'\nimport {push} from 'connected-react-router'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport SvgRender from '../SvgRender/SvgRender';\nimport ToolPanel from './../ToolPanel'\n\nimport styles from './index.module.scss';\n\nclass LayoutBuilder extends React.Component {\n    render() {\n\n        return (\n            <div className={styles.layoutBuilder}>\n                <SvgRender/>\n                <ToolPanel/>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            changePage: () => push('/about-us')\n        },\n        dispatch\n    )\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(LayoutBuilder)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport LayoutBuilder from '../layoutBuilder'\n\nconst Home = props => (\n  <div>\n      <LayoutBuilder/>\n  </div>\n)\n\nexport default connect(\n  null,\n    null\n)(Home)\n","import React from 'react'\nimport Home from '../home'\n\nconst App = () => (\n  <div>\n    <main>\n      <Home/>\n    </main>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport App from './containers/app'\n\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\n\nconst target = document.querySelector('#root')\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target\n)\n"],"sourceRoot":""}