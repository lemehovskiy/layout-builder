{"version":3,"sources":["modules/svgRender.js","modules/resizeTool.js","constants/redux.js","modules/index.js","store.js","actions/index.js","containers/Vector.js","containers/SelectTool.js","containers/actions/resizeTool.js","containers/actions/rootateTool.js","containers/actions/vector.js","containers/EditModeHelper.js","containers/Text.js","containers/actions/text.js","containers/Rectangle.js","containers/SvgRender.js","containers/actions/selectTool.js","containers/ToolPanel/TextPanel/VerticalAlignPanel.js","containers/ToolPanel/TextPanel/TextAlignPanel.js","containers/actions/utils.js","containers/ToolPanel/TextPanel/index.js","containers/ToolPanel/SizePanel.js","containers/ToolPanel/PositionPanel.js","containers/ToolPanel/index.js","containers/layoutBuilder/index.js","containers/home/index.js","containers/app/index.js","index.js"],"names":["updateObject","oldObject","newValues","Object","assign","updateItemInArray","array","itemId","updateItemCallback","map","item","id","initialState","resizeDirection","setResizeDirection","direction","dispatch","type","payload","combineReducers","svgRender","state","arguments","length","undefined","action","updatedItems","objectSpread","handlerObjectIndex","index","editMode","mode","mouseStartPosition","x","y","selectedObjectsId","concat","ids","objects","object","includes","editStartPositionOffset","console","log","width","height","updatedItem","forEach","editObjectInitState","rotate","textProps","verticalAlign","value","textAlign","resizeTool","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","createStore","connectRouter","rootReducer","mousePosition","strokeWidth","fill","radius","text","updateHandlerObjectIndex","updateEditMode","setMouseStartPosition","selectObjects","deselectAllObjects","deselectAllObjectsExept","moveObject","setObjectEditStartPosition","resizeObject","props","setObjectMode","saveEditObjectInitState","resetObjectMode","rotateObject","_ref","setTextAlign","setVerticalAlign","Vector","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","objectMoved","clientX","clientY","shiftKey","objectSelected","React","cloneElement","children","onMouseUp","bind","onMouseDown","Component","connect","bindActionCreators","SelectTool","react_default","a","createElement","stroke","opacity","selectToolPosition","selectToolSize","progress","changeValue","returnVal","getObjectResizeValuesSouth","mouse","objectInitState","Math","abs","getObjectResizeValuesNorth","getObjectResizeValuesEast","getObjectResizeValuesWest","getObjectRotateValue","atan2","PI","getTransformMatrix","centerX","centerY","getObjectAttributes","transform","EditModeHelper","target","getAttribute","self","helperConfig","dots","name","rotateIcon","strokeDasharray","pointerEvents","dot","key","cx","cy","r","style","cursor","onDotMouseDown","onRotateMouseDown","d","Text","_this","divElement","clientHeight","clientWidth","setState","prevProps","onResize","_this2","textState","overflow","getTextAttributes","ref","xmlns","display","split","i","Rectangle","containers_Text","containers_EditModeHelper","SvgRender","selectToolActive","selectToolStartPoint","svgOffset","getBoundingClientRect","refs","selectedObjects","updatedValues","updatedObject","getObjectResizeValues","resizeToolDirection","updateSelectToolData","handleSelectTool","currentTarget","setSelectStartPosition","resetSelectToolData","selectedObjectIds","rect1","rect2","push","startPoint","size","getSelectToolPosition","className","onMouseMove","vectorType","containers_Rectangle","containers_Vector","containers_SelectTool","filter","buttonsConfig","label","VerticalAlignPanel","button","activeValue","onClick","TextAlignPanel","byString","o","s","replace","n","k","getEqualPropertyValueFromSelectedObjects","values","every","val","arr","isInt","isNaN","parseInt","Number","TextPanel","TextPanel_VerticalAlignPanel","TextPanel_TextAlignPanel","SizePanel","pattern","disabled","onChange","PositionPanel","ToolPanel","containers_ToolPanel_TextPanel","ToolPanel_PositionPanel","ToolPanel_SizePanel","LayoutBuilder","containers_ToolPanel","containers_SvgRender","changePage","layoutBuilder","App","home","document","querySelector","render","es","store","lib","app"],"mappings":"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","file":"static/js/main.a93b4428.chunk.js","sourcesContent":["import {\n    UPDATE_HANDLER_OBJECT_INDEX,\n    UPDATE_EDIT_MODE,\n    SET_MOUSE_START_POSITION,\n    SELECT_OBJECTS,\n    DESELECT_OBJECTS,\n    DESELECT_ALL_OBJECTS,\n    DESELECT_ALL_OBJECTS_EXEPT,\n    MOVE_OBJECT,\n    SET_OBJECT_EDIT_START_POSITION,\n    RESIZE_OBJECT,\n    SET_OBJECT_MODE,\n    SAVE_EDIT_OBJECT_INIT_STATE,\n    RESET_OBJECT_MODE,\n    ROTATE_OBJECT,\n    SET_TEXT_ALIGN,\n    SET_VERTICAL_ALIGN\n} from './../constants';\n\nfunction updateObject(oldObject, newValues) {\n    return Object.assign({}, oldObject, newValues)\n}\n\nfunction updateItemInArray(array, itemId, updateItemCallback) {\n    const updatedItems = array.map(item => {\n        if (item.id !== itemId) {\n            // Since we only want to update one item, preserve all others as they are now\n            return item\n        }\n\n        // Use the provided callback to create an updated item\n        const updatedItem = updateItemCallback(item)\n        return updatedItem\n    })\n\n    return updatedItems\n}\n\n\nconst initialState = {};\n\nexport default (state = initialState, action) => {\n    let updatedItems = [];\n\n    switch (action.type) {\n        case UPDATE_HANDLER_OBJECT_INDEX:\n            return {\n                ...state,\n                handlerObjectIndex: action.index\n            }\n        case UPDATE_EDIT_MODE:\n            return {\n                ...state,\n                editMode: action.mode\n            }\n        case SET_MOUSE_START_POSITION:\n            return {\n                ...state,\n                mouseStartPosition: {x: action.x, y: action.y}\n            }\n        case SELECT_OBJECTS:\n            return {...state, selectedObjectsId: state.selectedObjectsId.concat(action.payload.ids)}\n\n        case DESELECT_ALL_OBJECTS:\n            return {...state, selectedObjectsId: []}\n\n        case DESELECT_ALL_OBJECTS_EXEPT:\n                return {...state, selectedObjectsId: [action.payload]}\n        case MOVE_OBJECT:\n            updatedItems = state.objects.map(item => {\n                if (item.id === action.payload.id) {\n                    return {\n                        ...item,\n                        x: action.payload.x !== null ? action.payload.x : item.x,\n                        y: action.payload.y !== null ? action.payload.y : item.y\n                    }\n                }\n                return item;\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_OBJECT_EDIT_START_POSITION:\n            updatedItems = state.objects.map(object => {\n                if (state.selectedObjectsId.includes(object.id)) {\n                    return {\n                        ...object,\n                        editStartPositionOffset: {\n                            x: action.payload.x - object.x,\n                            y: action.payload.y - object.y\n                        }\n                    }\n                }\n                return object\n            })\n            return {...state, objects: updatedItems}\n\n        case RESIZE_OBJECT:\n            console.log(action.payload);\n            updatedItems = updateItemInArray(state.objects, action.payload.id, object => {\n                return updateObject(object, {\n                    x: action.payload.x !== null ? action.payload.x : object.x,\n                    y: action.payload.y !== null ? action.payload.y : object.y,\n                    width: action.payload.width !== null ? action.payload.width : object.width,\n                    height: action.payload.height !== null ? action.payload.height : object.height\n                })\n            })\n            return updateObject(state, {objects: updatedItems})\n\n        case SET_OBJECT_MODE:\n            updatedItems = state.objects.map(item => {\n                if (item.id === action.payload.id) {\n                    return {...item, mode: action.payload.mode}\n                }\n                return item;\n            })\n            return {...state, objects: updatedItems}\n\n        case SAVE_EDIT_OBJECT_INIT_STATE:\n            let updatedItem = null;\n            state.objects.forEach(item => {\n                if (item.id === action.payload.id) {\n                    updatedItem = item;\n                }\n            })\n            return {...state, editObjectInitState: updatedItem}\n\n        case RESET_OBJECT_MODE:\n            updatedItems = state.objects.map(item => {\n                return {...item, mode: null}\n            })\n            return {...state, objects: updatedItems}\n\n        case ROTATE_OBJECT:\n            updatedItems = updateItemInArray(state.objects, action.payload.id, object => {\n                return updateObject(object, {rotate: action.payload.rotate})\n            })\n            return updateObject(state, {objects: updatedItems})\n\n        case SET_VERTICAL_ALIGN:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    return {\n                        ...item,\n                        textProps: {\n                            ...item.textProps,\n                            verticalAlign: action.payload.value\n                        }\n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        case SET_TEXT_ALIGN:\n            updatedItems = state.objects.map(item => {\n                if (state.selectedObjectsId.includes(item.id)) {\n                    return {\n                        ...item,\n                        textProps: {\n                            ...item.textProps,\n                            textAlign: action.payload.value\n                        }\n                    }\n                }\n                return item\n            })\n            return {...state, objects: updatedItems}\n\n        default:\n            return state\n    }\n}","import {\n    SET_RESIZE_DIRECTION\n} from './../constants';\n\n\nconst initialState = {\n    resizeDirection: null\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_RESIZE_DIRECTION:\n            return {\n                ...state,\n                resizeDirection: action.payload.direction\n            }\n\n        default:\n            return state\n    }\n}\n\n\nexport const setResizeDirection = (direction) => {\n    return dispatch => {\n        dispatch({\n            type: SET_RESIZE_DIRECTION,\n            payload: {\n                direction: direction\n            }\n        })\n    }\n}","export const UPDATE_HANDLER_OBJECT_INDEX = 'svgRender/HANDLER_OBJECT_INDEX';\nexport const UPDATE_EDIT_MODE = 'svgRender/UPDATE_EDIT_MODE';\nexport const SET_MOUSE_START_POSITION = 'svgRender/SET_MOUSE_START_POSITION';\nexport const SELECT_OBJECTS = 'svgRender/SELECT_OBJECTS';\nexport const DESELECT_OBJECTS = 'svgRender/DESELECT_OBJECTS';\nexport const DESELECT_ALL_OBJECTS = 'svgRender/DESELECT_ALL_OBJECTS';\nexport const DESELECT_ALL_OBJECTS_EXEPT = 'svgRender/DESELECT_ALL_OBJECTS_EXEPT';\nexport const MOVE_OBJECT = 'svgRender/MOVE_OBJECT';\nexport const SET_OBJECT_EDIT_START_POSITION = 'svgRender/SET_OBJECT_EDIT_START_POSITION';\nexport const RESIZE_OBJECT = 'svgRender/RESIZE_OBJECT';\nexport const SET_OBJECT_MODE = 'svgRender/SET_OBJECT_MODE';\nexport const SAVE_EDIT_OBJECT_INIT_STATE = 'svgRender/SAVE_EDIT_OBJECT_INIT_STATE';\nexport const RESET_OBJECT_MODE = 'svgRender/RESET_OBJECT_MODE';\nexport const ROTATE_OBJECT = 'svgRender/ROTATE_OBJECT';\nexport const SET_RESIZE_DIRECTION = 'resizeTool/SET_RESIZE_DIRECTION';\nexport const SET_VERTICAL_ALIGN = 'textTool/SET_VERTICAL_ALIGN';\nexport const SET_TEXT_ALIGN = 'textTool/SET_TEXT_ALIGN';","import { combineReducers } from 'redux'\nimport svgRender from './svgRender'\nimport resizeTool from './resizeTool'\n\nexport default combineReducers({\n  svgRender, resizeTool\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport createHistory from 'history/createBrowserHistory'\nimport rootReducer from './modules'\n\nexport const history = createHistory()\n\nconst initialState = {\n  svgRender: {\n      editMode: null,\n      mousePosition: {\n          x: null,\n          y: null\n      },\n      mouseStartPosition: {\n          x: null,\n          y: null\n      },\n\n      selectedObjectsId: [],\n\n      handlerObjectIndex: null,\n\n      objects: [\n          {\n              id: 1,\n              width: 163,\n              height: 84,\n              rotate: 0,\n              strokeWidth: 0,\n              fill: \"rgba(0, 123, 255, 1)\",\n              radius: \"0\",\n              type: \"rectangle\",\n              x: 17,\n              y: 15,\n              text: \"Lorem ipsum \\n dolor\",\n              textProps: {\n                  textAlign: 'center',\n                  verticalAlign: 'top'\n\n              }\n          },\n          {\n              id: 2,\n              width: 200,\n              height: 300,\n              rotate: 0,\n              strokeWidth: 0,\n              fill: \"rgba(0, 123, 255, 1)\",\n              radius: \"0\",\n              type: \"rectangle\",\n              x: 200,\n              y: 50,\n              text: \"Lorem ipsum \\n dolor\",\n              textProps: {\n                  textAlign: 'right',\n                  verticalAlign: 'bottom'\n\n              }\n          }\n      ],\n      editObjectInitState: null\n  }\n}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n","import {\n    UPDATE_HANDLER_OBJECT_INDEX,\n    UPDATE_EDIT_MODE,\n    SET_MOUSE_START_POSITION,\n    SELECT_OBJECTS,\n    DESELECT_OBJECTS,\n    DESELECT_ALL_OBJECTS,\n    DESELECT_ALL_OBJECTS_EXEPT,\n    MOVE_OBJECT,\n    SET_OBJECT_EDIT_START_POSITION,\n    RESIZE_OBJECT,\n    SET_OBJECT_MODE,\n    SAVE_EDIT_OBJECT_INIT_STATE,\n    RESET_OBJECT_MODE,\n    ROTATE_OBJECT,\n    SET_TEXT_ALIGN,\n    SET_VERTICAL_ALIGN\n} from './../constants';\n\n\nexport const updateHandlerObjectIndex = (index) => {\n    return dispatch => {\n        dispatch({\n            type: UPDATE_HANDLER_OBJECT_INDEX,\n            index: index\n        })\n\n    }\n}\n\nexport const updateEditMode = (mode) => {\n    return dispatch => {\n        dispatch({\n            type: UPDATE_EDIT_MODE,\n            mode: mode\n        })\n\n    }\n}\n\nexport const setMouseStartPosition = (x, y) => {\n    return dispatch => {\n        dispatch({\n            type: SET_MOUSE_START_POSITION,\n            x: x,\n            y: y\n        })\n\n    }\n}\n\nexport const selectObjects = (ids) => {\n    return dispatch => {\n        dispatch({\n            type: SELECT_OBJECTS,\n            payload: {ids}\n        })\n    }\n}\n\nexport const deselectObjects = (ids) => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_OBJECTS,\n            payload: {ids}\n\n        })\n    }\n}\n\n\nexport const deselectAllObjects = () => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_ALL_OBJECTS,\n        })\n    }\n}\n\nexport const deselectAllObjectsExept = (id) => {\n    return dispatch => {\n        dispatch({\n            type: DESELECT_ALL_OBJECTS_EXEPT,\n            payload: id\n        })\n    }\n}\n\n\nexport const moveObject = (id, x, y) => {\n    return dispatch => {\n        dispatch({\n            type: MOVE_OBJECT,\n            payload: {\n                id: id,\n                x: x,\n                y: y\n            }\n        })\n    }\n}\n\nexport const setObjectEditStartPosition = (x, y) => {\n    return dispatch => {\n        dispatch({\n            type: SET_OBJECT_EDIT_START_POSITION,\n            payload: {\n                x: x,\n                y: y\n            }\n        })\n    }\n}\n\n\nexport const resizeObject = (props) => {\n    return dispatch => {\n        dispatch({\n            type: RESIZE_OBJECT,\n            payload: props\n        })\n    }\n}\n\nexport const setObjectMode = (id, mode) => {\n    return dispatch => {\n        dispatch({\n            type: SET_OBJECT_MODE,\n            payload: {\n                id: id,\n                mode: mode\n            }\n        })\n    }\n}\n\nexport const saveEditObjectInitState = (id) => {\n    return dispatch => {\n        dispatch({\n            type: SAVE_EDIT_OBJECT_INIT_STATE,\n            payload: {\n                id: id\n            }\n        })\n    }\n}\n\nexport const resetObjectMode = () => {\n    return dispatch => {\n        dispatch({\n            type: RESET_OBJECT_MODE\n        })\n    }\n}\n\nexport const rotateObject = ({id, rotate}) => {\n    return dispatch => {\n        dispatch({\n            type: ROTATE_OBJECT,\n            payload: {id, rotate}\n        })\n    }\n}\n\nexport const setTextAlign = (value) => {\n    console.log(111);\n    return dispatch => {\n        dispatch({\n            type: SET_TEXT_ALIGN,\n            payload: {value}\n        })\n    }\n}\n\nexport const setVerticalAlign = (value) => {\n    return dispatch => {\n        dispatch({\n            type: SET_VERTICAL_ALIGN,\n            payload: {value}\n        })\n    }\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {\n    updateHandlerObjectIndex,\n    updateEditMode,\n    setMouseStartPosition,\n    selectObjects,\n    deselectAllObjects,\n    setObjectEditStartPosition,\n    deselectAllObjectsExept\n} from '../../src/actions'\n\n\n\nclass Vector extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onMouseUp(e) {\n        let objectMoved = this.props.mouseStartPosition.x !== e.clientX || this.props.mouseStartPosition.y !== e.clientY;\n\n        if (!e.shiftKey && !objectMoved) {\n            this.props.deselectAllObjectsExept(this.props.object.id);\n        }\n    }\n\n\n    onMouseDown(e) {\n        const objectSelected = this.props.selectedObjectsId.includes(this.props.object.id);\n\n        if (!e.shiftKey && !objectSelected) {\n            this.props.deselectAllObjects();\n        }\n        if (!objectSelected) {\n            this.props.selectObjects([this.props.object.id])\n        }\n\n        this.props.setMouseStartPosition(e.clientX, e.clientY)\n        this.props.setObjectEditStartPosition(e.clientX, e.clientY);\n        this.props.updateEditMode('drag')\n    }\n\n    render() {\n        return React.cloneElement(this.props.children, {onMouseUp: this.onMouseUp.bind(this), onMouseDown: this.onMouseDown.bind(this), object: this.props.object, selectedObjectsId: this.props.selectedObjectsId})\n\n    }\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    mouseStartPosition: svgRender.mouseStartPosition\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            updateHandlerObjectIndex,\n            updateEditMode,\n            setMouseStartPosition,\n            selectObjects,\n            deselectAllObjects,\n            setObjectEditStartPosition,\n            deselectAllObjectsExept\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Vector)\n","import React, {Component} from 'react';\n\nclass SelectTool extends Component {\n    render() {\n        return (\n            <g>\n               <rect\n                    strokeWidth=\"1\"\n                    stroke=\"#6298F9\"\n                    fill=\"rgba(98, 152, 249, 0.3)\"\n                    opacity=\"0.3\"\n                    x={this.props.selectToolPosition.x}\n                    y={this.props.selectToolPosition.y}\n                    width={this.props.selectToolSize.width}\n                    height={this.props.selectToolSize.height}\n                /> : ''}\n            </g>\n        );\n    }\n}\n\nexport default SelectTool;\n\n","//TODO fix bug with resize when object rotated\n\nlet progress = null,\n    changeValue = null,\n    returnVal = {};\n\nfunction getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.y - mouseStartPosition.y;\n    changeValue = objectInitState.height + progress;\n    returnVal.y = changeValue > 0 ? objectInitState.y : objectInitState.y - Math.abs(changeValue);\n    returnVal.height = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.y - mouseStartPosition.y;\n    changeValue = objectInitState.height - progress;\n    returnVal.y = changeValue > 0 ? objectInitState.y - (changeValue - objectInitState.height) : objectInitState.y + objectInitState.height;\n    returnVal.height = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.x - mouseStartPosition.x;\n    changeValue = objectInitState.width + progress;\n    returnVal.x = changeValue < 0 ? objectInitState.x + changeValue : objectInitState.x;\n    returnVal.width = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nfunction getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition) {\n    progress = mouse.x - mouseStartPosition.x;\n    changeValue = objectInitState.width - progress;\n    returnVal.x = changeValue > 0 ? objectInitState.x + progress : objectInitState.x + objectInitState.width;\n    returnVal.width = Math.abs(changeValue);\n\n    return returnVal;\n}\n\nexport const getObjectResizeValues = (mouse, direction, objectInitState, mouseStartPosition, object) => {\n    let updatedObject = object;\n\n    switch (direction) {\n        case 's':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'n':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'e':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'w':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'ne':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'se':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesEast(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'sw':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesSouth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n        case 'nw':\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesNorth(mouse, objectInitState, mouseStartPosition));\n            updatedObject = Object.assign(updatedObject, getObjectResizeValuesWest(mouse, objectInitState, mouseStartPosition));\n            break;\n    }\n\n    return updatedObject;\n}","//TODO make rotate more user friendly\nexport const getObjectRotateValue = ({mouse, mouseStartPosition, object}) => {\n    let angle = Math.atan2(\n        mouseStartPosition.x + (object.width || 0) / 2 - mouse.x,\n        mouseStartPosition.y + (object.height || 0) / 2 - mouse.y\n    );\n\n    let asDegree = angle * 180 / Math.PI;\n\n    return (asDegree - 45) * -1;\n}","export const getTransformMatrix = ({rotate, x, y, width, height}) => {\n    if (rotate) {\n        let centerX = width / 2 + x;\n        let centerY = height / 2 + y;\n        return `rotate(${rotate} ${centerX} ${centerY})`;\n    }\n}\n\nexport const getObjectAttributes = (object) => {\n    return {\n        transform: getTransformMatrix(object)\n    };\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {\n    resizeObject,\n    setMouseStartPosition,\n    updateEditMode,\n    setObjectMode,\n    saveEditObjectInitState\n} from '../../src/actions'\n\nimport {\n    setResizeDirection\n} from '../../src/modules/resizeTool'\n\nimport {getObjectAttributes} from './actions/vector.js';\n\nclass EditModeHelper extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onRotateMouseDown(e) {\n        this.props.setObjectMode(this.props.object.id, 'rotate');\n        this.props.updateEditMode('rotate');\n        this.props.setMouseStartPosition(e.clientX, e.clientY);\n    }\n\n    onDotMouseDown(e){\n        this.props.setObjectMode(this.props.object.id, 'resize');\n        this.props.updateEditMode('resize');\n        this.props.saveEditObjectInitState(this.props.object.id);\n        this.props.setMouseStartPosition(e.clientX, e.clientY);\n        this.props.setResizeDirection(e.target.getAttribute('name'))\n    }\n\n    render() {\n        let self = this;\n\n        let object = this.props.object;\n\n        const helperConfig =\n            {\n                dots: [\n                    {\n                        name: 'nw',\n                        x: object.x,\n                        y: object.y\n                    },\n                    {\n                        name: 'n',\n                        x: object.x + object.width / 2,\n                        y: object.y\n                    },\n                    {\n                        name: 'ne',\n                        x: object.x + object.width,\n                        y: object.y\n                    },\n                    {\n                        name: 'w',\n                        x: object.x,\n                        y: object.y + object.height / 2\n                    },\n                    {\n                        name: 'e',\n                        x: object.x + object.width,\n                        y: object.y + object.height / 2\n                    },\n                    {\n                        name: 'sw',\n                        x: object.x,\n                        y: object.y + object.height\n                    },\n                    {\n                        name: 's',\n                        x: object.x + object.width / 2,\n                        y: object.y + object.height\n                    },\n                    {\n                        name: 'se',\n                        x: object.x + object.width,\n                        y: object.y + object.height\n                    }\n                ]\n            }\n\n            const rotateIcon = {\n                x: object.x + object.width / 2 - 6,\n                y: object.y - 20\n            }\n\n\n        return (\n            <g {...getObjectAttributes(object)}>\n                <rect\n                    width={object.width}\n                    height={object.height}\n                    x={object.x}\n                    y={object.y}\n                    fill=\"none\" stroke=\"#00a8ff\" strokeDasharray=\"3 3\" pointerEvents=\"none\"/>\n\n                {helperConfig.dots.map(function (dot) {\n                    return <circle key={dot.name} name={dot.name} cx={dot.x} cy={dot.y} fill=\"#34B7EF\" r=\"5\" style={{cursor: dot.name + '-resize'}} onMouseDown={self.onDotMouseDown.bind(self)}/>\n                })}\n\n                <path cursor=\"pointer\" onMouseDown={self.onRotateMouseDown.bind(self)} transform={'translate(' + rotateIcon.x + ' ' + rotateIcon.y +')'} stroke=\"rgb(0, 0, 0, 0)\" strokeWidth=\"5\" d=\"M5.1,0.2L4.4,0.8c-0.1,0.1-0.1,0.2,0,0.3l1.1,1.1C4.2,2.1,2.8,2.5,1.7,3.5c-2,1.8-2.1,4.9-0.3,6.8\n                c1.8,2,4.8,2.1,6.8,0.3c0.9-0.8,1.4-1.9,1.5-3.1c0-0.1-0.1-0.3-0.2-0.3l-0.9,0c-0.1,0-0.2,0.1-0.2,0.2C8.3,8.2,7.9,9,7.2,9.6\n                c-1.4,1.3-3.6,1.2-4.8-0.2C1.1,8,1.2,5.8,2.6,4.5c0.9-0.8,2-1.1,3.1-0.8L4.2,5c-0.1,0.1-0.1,0.2,0,0.3L4.8,6c0.1,0.1,0.2,0.1,0.3,0\n                L8,3.4c0.1-0.1,0.1-0.2,0-0.3L5.4,0.2C5.3,0.1,5.2,0.1,5.1,0.2z\"/>\n\n            </g>\n        )\n    }\n}\n//\n// const mapStateToProps = ({ svgRender }) => ({\n//\n// })\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            resizeObject,\n            setMouseStartPosition,\n            updateEditMode,\n            setObjectMode,\n            saveEditObjectInitState,\n            setResizeDirection\n        },\n        dispatch\n    )\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(EditModeHelper)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport EditModeHelper from './EditModeHelper.js';\n\nimport {getObjectAttributes} from './actions/vector.js';\nimport {getTextAttributes, getTextWrapAttributes} from './actions/text.js';\n\nfunction breakLine(text) {\n    console.log(text);\n    var br = React.createElement('br');\n    var regex = /(<br \\/>)/g;\n    return text.split(regex).map(function(line, index) {\n        return line.match(regex) ? <br key={\"key_\" + index} /> : line;\n    });\n}\n\nclass Text extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            height: 0,\n            width: 0\n        }\n    }\n\n    onResize(){\n        const height = this.divElement.clientHeight;\n        const width = this.divElement.clientWidth;\n\n        this.setState({ height, width });\n    }\n\n    componentDidUpdate(prevProps){\n        if (prevProps.object.width !== this.props.object.width || prevProps.object.height !== this.props.object.height) {\n            this.onResize();\n        }\n    }\n\n    componentDidMount(){\n        this.onResize();\n    }\n\n\n    render() {\n        return (\n            <g>\n                <foreignObject\n                    {...getObjectAttributes(this.props.object)}\n                    {...getTextAttributes(this.props.object, this.state)}\n                >\n                    <div {...getTextWrapAttributes(this.props.object)} ref={ (divElement) => this.divElement = divElement}>\n                        <div xmlns=\"http://www.w3.org/1999/xhtml\" style={{ display: 'inline-block' }}>\n                            {this.props.object.text.split(\"\\n\").map((i,key) => {\n                                return <div key={key}>{i}</div>;\n                            })}\n                        </div>\n                    </div>\n                </foreignObject>\n            </g>\n        )\n    }\n}\n\n\n// const mapStateToProps = ({svgRender}) => ({\n//     mouseStartPosition: svgRender.mouseStartPosition\n// })\n//\n// const mapDispatchToProps = dispatch =>\n//     bindActionCreators({\n//             updateHandlerObjectIndex,\n//             updateEditMode,\n//             setMouseStartPosition,\n//             setObjectsSelectState,\n//             deselectAllObjects,\n//             setEditStartPositionOffset,\n//             deselectAllObjectsExept\n//         },\n//         dispatch\n//     )\n\nexport default connect(\n    null,\n    null\n)(Text)\n","export const getTextAttributes = (object, textState) => {\n    let y = 0;\n\n    switch(object.textProps.verticalAlign) {\n        case 'top': y = object.y; break;\n        case 'middle': y = object.y + object.height / 2 - textState.height / 2; break;\n        case 'bottom': y = object.y + object.height - textState.height; break;\n        default: y = object.y + object.height / 2 - textState.height / 2;\n    }\n\n\n    return {\n        width: object.width,\n        height: textState.height,\n        overflow: 'visible',\n        x: object.x,\n        y: y,\n    }\n}\n\n\nexport const getTextWrapAttributes = (object) => {\n    let style = {\n        textAlign: object.textProps.textAlign\n    };\n\n    return {\n        style: style\n    }\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport EditModeHelper from './EditModeHelper.js';\nimport Text from './Text';\n\nimport {getObjectAttributes} from './actions/vector.js';\n\nclass Rectangle extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n        return (\n            <g>\n\n                {this.props.object.text ? <Text object={this.props.object}/> : ''}\n\n                    <rect {...getObjectAttributes(this.props.object)}\n                          width={this.props.object.width}\n                          height={this.props.object.height}\n                          x={this.props.object.x}\n                          y={this.props.object.y}\n                          pointerEvents=\"visible\"\n                          cursor=\"move\"\n                          fill=\"none\"\n                          strokeWidth=\"1\"\n                          stroke=\"black\"\n                          onMouseDown={this.props.onMouseDown}\n                          onMouseUp={this.props.onMouseUp}\n                    />\n\n\n                {this.props.selectedObjectsId.includes(this.props.object.id) ? <EditModeHelper\n                    object={this.props.object}/> : ''}\n\n            </g>\n        )\n    }\n}\n\n//\n// const mapStateToProps = ({svgRender}) => ({\n//     mouseStartPosition: svgRender.mouseStartPosition\n// })\n//\n// const mapDispatchToProps = dispatch =>\n//     bindActionCreators({\n//             updateHandlerObjectIndex,\n//             updateEditMode,\n//             setMouseStartPosition,\n//             setObjectsSelectState,\n//             deselectAllObjects,\n//             setEditStartPositionOffset,\n//             deselectAllObjectsExept\n//         },\n//         dispatch\n//     )\n\nexport default connect(\n    null,\n    null\n)(Rectangle)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport Vector from './Vector';\nimport SelectTool from './SelectTool';\nimport {getSelectToolSize, getSelectToolPosition, checkRectRectCollision} from './actions/selectTool';\nimport {getObjectResizeValues} from './actions/resizeTool';\nimport {getObjectRotateValue} from './actions/rootateTool.js';\nimport Rectangle from './Rectangle';\nimport Text from './Text';\n\n\nimport {\n    updateEditMode,\n    deselectAllObjects,\n    moveObject,\n    selectObjects,\n    resizeObject,\n    resetObjectMode,\n    rotateObject\n} from '../../src/actions'\n\nclass SvgRender extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectToolActive: false,\n            selectToolStartPoint: {\n                x: null,\n                y: null\n            },\n            mousePosition: {\n                x: null,\n                y: null\n            },\n            svgOffset: {\n                x: null,\n                y: null\n            },\n            selectToolSize: {\n                x: null,\n                y: null\n            },\n            selectToolPosition: {\n                x: null,\n                y: null\n            }\n        }\n    }\n\n    componentDidMount() {\n        const getBoundingClientRect = this.refs.svgRender.getBoundingClientRect();\n\n        this.setState({\n            svgOffset: {\n                x: getBoundingClientRect.x,\n                y: getBoundingClientRect.y\n            }\n        })\n    }\n\n    onMouseMove(e) {\n\n        let self = this;\n\n        if (this.props.editMode === 'drag') {\n            this.props.selectedObjects.forEach(function (object) {\n                self.props.moveObject(object.id, e.clientX - object.editStartPositionOffset.x, e.clientY - object.editStartPositionOffset.y);\n            })\n        }\n\n        else if (this.props.editMode === 'resize') {\n            this.props.selectedObjects.forEach(function (object) {\n                if (object.mode === 'resize') {\n                    let updatedValues = getObjectResizeValues(\n                        {x: e.clientX, y: e.clientY},\n                        self.props.resizeToolDirection,\n                        self.props.editObjectInitState,\n                        self.props.mouseStartPosition,\n                        {x: object.x, y: object.y, width: object.width, height: object.height}\n                    );\n\n                    self.props.resizeObject({\n                            id: object.id,\n                            ...updatedValues\n                        }\n                    );\n                }\n            })\n        }\n\n        else if (this.props.editMode === 'rotate') {\n            this.props.selectedObjects.forEach(function (object) {\n                if (object.mode === 'rotate') {\n\n                    let mouse = {x: e.clientX, y: e.clientY},\n                        mouseStartPosition = self.props.mouseStartPosition;\n\n                    self.props.rotateObject({\n                            id: object.id,\n                            rotate: getObjectRotateValue({mouse, mouseStartPosition, object})\n                        }\n                    );\n                }\n            })\n        }\n\n\n        if (this.props.editMode === 'selectTool') {\n            this.updateSelectToolData({x: e.clientX, y: e.clientY});\n        }\n    }\n\n\n    onMouseUp(e) {\n        if (this.props.editMode === 'selectTool') {\n            this.handleSelectTool();\n        }\n        else if (this.props.editMode === 'resize') {\n            this.props.resetObjectMode();\n        }\n        else if (this.props.editMode === 'rotate') {\n            this.props.resetObjectMode();\n        }\n\n\n        this.props.updateEditMode(null);\n    }\n\n    onMouseDown(e) {\n        if (e.target === e.currentTarget) {\n            this.setSelectStartPosition({x: e.clientX, y: e.clientY});\n            this.updateSelectToolData({x: e.clientX, y: e.clientY});\n            this.props.updateEditMode('selectTool');\n        }\n    }\n\n    setSelectStartPosition(mousePosition) {\n        this.setState({\n            selectToolStartPoint: {\n                x: mousePosition.x - this.state.svgOffset.x,\n                y: mousePosition.y - this.state.svgOffset.y\n            }\n        })\n    }\n\n    handleSelectTool() {\n        let self = this;\n\n        this.resetSelectToolData();\n\n        let selectedObjectIds = [];\n\n        this.props.objects.forEach(function (object) {\n            if (checkRectRectCollision({\n                        x: object.x,\n                        y: object.y,\n                        width: object.width,\n                        height: object.height\n                    },\n                    {\n                        x: self.state.selectToolPosition.x,\n                        y: self.state.selectToolPosition.y,\n                        width: self.state.selectToolSize.width,\n                        height: self.state.selectToolSize.height\n                    })) {\n                selectedObjectIds.push(object.id);\n            }\n        })\n\n        this.props.deselectAllObjects();\n\n        if (selectedObjectIds.length) {\n            console.log(111);\n            this.props.selectObjects(selectedObjectIds)\n        }\n    }\n\n    resetSelectToolData() {\n        this.setState({\n            selectToolStartPoint: {x: null, y: null},\n            selectToolSize: {x: null, y: null}\n        });\n    }\n\n    updateSelectToolData(mousePosition) {\n        if (this.state.selectToolStartPoint.x === null) return;\n\n        const selectToolSize = getSelectToolSize(\n            this.state.selectToolStartPoint,\n            mousePosition,\n            this.state.svgOffset\n        );\n\n        this.setState({\n            selectToolSize: selectToolSize\n        })\n        const selectToolPosition = getSelectToolPosition(\n            this.state.selectToolStartPoint,\n            mousePosition,\n            this.state.svgOffset,\n            selectToolSize\n        );\n        this.setState({\n            selectToolPosition: selectToolPosition\n        })\n    }\n\n    render() {\n        let self = this;\n\n        return (\n            <div className=\"container\">\n                <svg className=\"svgRender\" ref=\"svgRender\" width='800' height='500'\n                     onMouseMove={this.onMouseMove.bind(this)} onMouseUp={this.onMouseUp.bind(this)}\n                     onMouseDown={this.onMouseDown.bind(this)}>\n                    {this.props.objects.map(function (object) {\n                        let vectorType = null;\n                        switch (object.type){\n                            case 'rectangle': {\n                                vectorType = <Rectangle/>;\n                                break;\n                            }\n                            case 'text': {\n                                vectorType = <Text/>;\n                                break;\n                            }\n                        }\n                        return (\n                            <Vector key={object.id} object={object} selectedObjectsId={self.props.selectedObjectsId}>\n                                {vectorType}\n                            </Vector>\n                        )\n                    })}\n\n                    {this.props.editMode === 'selectTool' ? <SelectTool\n                        selectToolPosition={this.state.selectToolPosition}\n                        selectToolSize={this.state.selectToolSize}\n                    /> : ''}\n                </svg>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender, resizeTool}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId,\n    objects: svgRender.objects,\n    editMode: svgRender.editMode,\n    mouseStartPosition: svgRender.mouseStartPosition,\n    editObjectInitState: svgRender.editObjectInitState,\n    resizeToolDirection: resizeTool.resizeDirection\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            updateEditMode,\n            deselectAllObjects,\n            moveObject,\n            selectObjects,\n            resizeObject,\n            resetObjectMode,\n            rotateObject\n        },\n        dispatch\n    )\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SvgRender)\n","//TODO fix select for rotated objects\n\nexport const getSelectToolPosition = (startPoint, mouse, svgOffset, size) => {\n    const x = mouse.x - svgOffset.x > startPoint.x ? startPoint.x : startPoint.x - size.width;\n    const y = mouse.y - svgOffset.y > startPoint.y ? startPoint.y : startPoint.y - size.height;\n\n    return {\n        x: x,\n        y: y\n    }\n}\n\nexport const getSelectToolSize = (startPoint, mouse, svgOffset) => {\n    const width = Math.abs(mouse.x - svgOffset.x - startPoint.x);\n    const height = Math.abs(mouse.y - svgOffset.y - startPoint.y);\n\n    return {\n        width: width,\n        height: height\n    }\n}\n\n\nexport const checkRectRectCollision = (rect1, rect2) => {\n    return rect1.x + rect1.width >= rect2.x &&\n        rect1.x <= rect2.x + rect2.width &&\n        rect1.y + rect1.height >= rect2.y &&\n        rect1.y <= rect2.y + rect2.height;\n}","import React from 'react'\nimport styles from './index.css';\n\nconst buttonsConfig = [\n    {\n        value: 'top',\n        label: 'Top',\n    },\n    {\n        value: 'middle',\n        label: 'Middle',\n    },\n    {\n        value: 'bottom',\n        label: 'Bottom',\n    }\n]\n\nclass VerticalAlignPanel extends React.Component {\n    onClick(e) {\n        this.props.setVerticalAlign(e.target.value);\n    }\n\n    render() {\n        let self = this;\n\n        return (\n            <div>\n                Vertical Align\n\n                <div className=\"vertical-align-btn-group\">\n\n                    {\n                        buttonsConfig.map((button) => {\n                            return (\n                                <button\n                                    className={self.props.activeValue === button.value ? 'vertical-align-btn-group__btn vertical-align-btn-group__btn_active' : 'vertical-align-btn-group__btn'}\n                                    key={button.value} value={button.value}\n                                    onClick={self.onClick.bind(this)}>{button.label}</button>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VerticalAlignPanel;\n","import React from 'react'\nimport styles from './index.css';\n\nconst buttonsConfig = [\n    {\n        value: 'left',\n        label: 'Left',\n    },\n    {\n        value: 'center',\n        label: 'Center',\n    },\n    {\n        value: 'right',\n        label: 'Right',\n    }\n]\n\nclass TextAlignPanel extends React.Component {\n    onClick(e) {\n        this.props.setTextAlign(e.target.value);\n    }\n\n    render() {\n        let self = this;\n\n        return (\n            <div>\n                Text Align\n\n                <div className=\"text-align-btn-group\">\n\n                    {\n                        buttonsConfig.map((button) => {\n                            return (\n                                <button\n                                    className={self.props.activeValue === button.value ? 'text-align-btn-group__btn text-align-btn-group__btn_active' : 'text-align-btn-group__btn'}\n                                    key={button.value} value={button.value}\n                                    onClick={self.onClick.bind(this)}>{button.label}</button>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TextAlignPanel;\n","Object.byString = function(o, s) {\n    s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n    s = s.replace(/^\\./, '');           // strip a leading dot\n    var a = s.split('.');\n    for (var i = 0, n = a.length; i < n; ++i) {\n        var k = a[i];\n        if (k in o) {\n            o = o[k];\n        } else {\n            return;\n        }\n    }\n    return o;\n}\n\nexport const getEqualPropertyValueFromSelectedObjects = (objects, key) => {\n    let values = [];\n\n    if (objects.length > 0){\n        objects.forEach((object => {\n            values.push(Object.byString(object, key));\n        }))\n    }\n\n    values.every( (val, i, arr) => val === arr[0] )   // true\n\n    return values.every( (val, i, arr) => val === arr[0]) ? values[0] : false;\n}\n\nexport const isInt = (value) => {\n    return !isNaN(value) &&\n        parseInt(Number(value)) == value &&\n        !isNaN(parseInt(value, 10));\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport VerticalAlignPanel from './VerticalAlignPanel';\nimport TextAlignPanel from './TextAlignPanel';\n\nimport {\n    setTextAlign,\n    setVerticalAlign\n} from './../../../../src/actions'\n\nimport {\n    getEqualPropertyValueFromSelectedObjects,\n} from './../../../containers/actions/utils';\n\n\nclass TextPanel extends React.Component {\n    render() {\n        return (\n            <div>\n                <VerticalAlignPanel setVerticalAlign={this.props.setVerticalAlign.bind(this)} activeValue={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'textProps.verticalAlign')}/>\n                <TextAlignPanel setTextAlign={this.props.setTextAlign.bind(this)} activeValue={getEqualPropertyValueFromSelectedObjects(this.props.selectedObjects, 'textProps.textAlign')}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id))\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            setTextAlign,\n            setVerticalAlign\n        },\n        dispatch\n    )\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TextPanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {resizeObject} from './../../actions/index';\nimport {isInt} from './../../containers/actions/utils';\n\nclass SizePanel extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onChange(e) {\n        const value = parseInt(e.target.value);\n        if (!isInt(value)) return;\n        let self = this;\n        const object = self.props.selectedObjects[0];\n\n        self.props.resizeObject({\n                id: object.id,\n                x: null,\n                y: null,\n                width: e.target.name === 'width' ? value : null,\n                height: e.target.name === 'height' ? value : null\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                Size\n                width: <input type=\"text\" pattern=\"[0-9]*\" name=\"width\" disabled={this.props.selectedObjectsId.length !== 1}\n                          value={this.props.selectedObjectsId.length === 1 ? this.props.selectedObjects[0].width : ''}\n                          onChange={this.onChange.bind(this)}/>\n                height: <input type=\"text\" pattern=\"[0-9]*\" name=\"height\" disabled={this.props.selectedObjectsId.length !== 1}\n                          value={this.props.selectedObjectsId.length === 1 ? this.props.selectedObjects[0].height : ''}\n                          onChange={this.onChange.bind(this)}/>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender, resizeTool}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            resizeObject\n        },\n        dispatch\n    )\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SizePanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\n\nimport {moveObject} from './../../actions/index';\nimport {isInt} from './../../containers/actions/utils';\n\nclass PositionPanel extends React.Component {\n    onChange(e) {\n        const value = parseInt(e.target.value);\n\n        if (!isInt(value)) return;\n\n        let self = this;\n        self.props.moveObject(self.props.selectedObjects[0].id, e.target.name === 'x' ? value : null, e.target.name === 'y' ? value : null);\n    }\n\n    render() {\n        return (\n            <div>\n                Position\n                x: <input pattern=\"[0-9]*\" name=\"x\" disabled={this.props.selectedObjectsId.length !== 1}\n                          value={this.props.selectedObjectsId.length === 1 ? this.props.selectedObjects[0].x : ''}\n                          onChange={this.onChange.bind(this)}/>\n                y: <input pattern=\"[0-9]*\" name=\"y\" disabled={this.props.selectedObjectsId.length !== 1}\n                          value={this.props.selectedObjectsId.length === 1 ? this.props.selectedObjects[0].y : ''}\n                          onChange={this.onChange.bind(this)}/>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({svgRender, resizeTool}) => ({\n    selectedObjects: svgRender.objects.filter(object => svgRender.selectedObjectsId.includes(object.id)),\n    selectedObjectsId: svgRender.selectedObjectsId\n})\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({\n            moveObject\n        },\n        dispatch\n    )\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PositionPanel)\n","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport TextPanel from './TextPanel';\nimport SizePanel from './SizePanel';\nimport PositionPanel from './PositionPanel';\n\nclass ToolPanel extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <TextPanel/>\n                <PositionPanel/>\n                <SizePanel/>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    null,\n    null\n)(ToolPanel)\n","import React from 'react'\nimport {push} from 'connected-react-router'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport SvgRender from '../SvgRender';\nimport ToolPanel from './../ToolPanel'\n\nclass LayoutBuilder extends React.Component {\n    render() {\n\n        return (\n            <div>\n                <ToolPanel/>\n                <SvgRender/>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators(\n        {\n            changePage: () => push('/about-us')\n        },\n        dispatch\n    )\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(LayoutBuilder)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport LayoutBuilder from '../layoutBuilder'\n\nconst Home = props => (\n  <div>\n      <LayoutBuilder/>\n  </div>\n)\n\nexport default connect(\n  null,\n    null\n)(Home)\n","import React from 'react'\nimport Home from '../home'\n\nconst App = () => (\n  <div>\n    <main>\n      <Home/>\n    </main>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport App from './containers/app'\n\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\n\nconst target = document.querySelector('#root')\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target\n)\n"],"sourceRoot":""}